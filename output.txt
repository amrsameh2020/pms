===== ./assets/images/logo.png =====

===== ./tenant_types/actions.php =====
<?php
// tenant_types/actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // إذا كانت هذه الوظيفة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // <<--- تم الإضافة

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $tenant_type_id = isset($_POST['tenant_type_id']) ? filter_var($_POST['tenant_type_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $type_name = isset($_POST['type_name']) ? strtolower(sanitize_input(str_replace(' ', '_', trim($_POST['type_name'])))) : null;
    $display_name_ar = isset($_POST['display_name_ar']) ? sanitize_input(trim($_POST['display_name_ar'])) : null;

    if (empty($type_name) || empty($display_name_ar)) {
        $response = ['success' => false, 'message' => 'المعرف والاسم المعروض مطلوبان.'];
        echo json_encode($response); exit;
    }
    if (!preg_match('/^[a-z0-9_]+$/', $type_name)) {
        $response = ['success' => false, 'message' => 'المعرف يجب أن يحتوي على أحرف إنجليزية صغيرة وأرقام وشرطة سفلية فقط.'];
        echo json_encode($response); exit;
    }

    $mysqli->begin_transaction(); // <<--- بدء المعاملة
    try {
        if ($action === 'add_tenant_type') {
            $stmt_check = $mysqli->prepare("SELECT id FROM tenant_types WHERE type_name = ?");
            if (!$stmt_check) throw new Exception('خطأ تجهيز فحص المعرف: ' . $mysqli->error);
            $stmt_check->bind_param("s", $type_name); $stmt_check->execute(); $stmt_check->store_result();
            if ($stmt_check->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل.');
            $stmt_check->close();

            $stmt_insert = $mysqli->prepare("INSERT INTO tenant_types (type_name, display_name_ar) VALUES (?, ?)");
            if (!$stmt_insert) throw new Exception('فشل في تحضير استعلام الإضافة: ' . $mysqli->error);
            $stmt_insert->bind_param("ss", $type_name, $display_name_ar);
            if (!$stmt_insert->execute()) throw new Exception('فشل في إضافة النوع: ' . $stmt_insert->error);
            
            $new_ttype_id = $stmt_insert->insert_id;
            $stmt_insert->close();
            // افترض أن AUDIT_CREATE_TENANT_TYPE معرف في audit_log_functions.php
            log_audit_action($mysqli, 'CREATE_TENANT_TYPE', $new_ttype_id, 'tenant_types', ['type_name' => $type_name, 'display_name_ar' => $display_name_ar]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تمت إضافة نوع المستأجر بنجاح!'];

        } elseif ($action === 'edit_tenant_type' && $tenant_type_id) {
            $stmt_old_ttype = $mysqli->prepare("SELECT type_name, display_name_ar FROM tenant_types WHERE id = ?");
            $old_ttype_data = null;
            if($stmt_old_ttype){
                $stmt_old_ttype->bind_param("i", $tenant_type_id); $stmt_old_ttype->execute();
                $res_old_ttype = $stmt_old_ttype->get_result();
                if($res_old_ttype->num_rows > 0) $old_ttype_data = $res_old_ttype->fetch_assoc();
                $stmt_old_ttype->close();
            }
            if(!$old_ttype_data) throw new Exception("نوع المستأجر المطلوب تعديله غير موجود.");

            $stmt_check_edit = $mysqli->prepare("SELECT id FROM tenant_types WHERE type_name = ? AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص المعرف (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("si", $type_name, $tenant_type_id); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل لنوع آخر.');
            $stmt_check_edit->close();

            $stmt_update = $mysqli->prepare("UPDATE tenant_types SET type_name = ?, display_name_ar = ? WHERE id = ?");
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام التحديث: ' . $mysqli->error);
            $stmt_update->bind_param("ssi", $type_name, $display_name_ar, $tenant_type_id);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث النوع: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_ttype_data = compact('type_name', 'display_name_ar');
            // افترض أن AUDIT_EDIT_TENANT_TYPE معرف
            log_audit_action($mysqli, 'EDIT_TENANT_TYPE', $tenant_type_id, 'tenant_types', ['old_data' => $old_ttype_data, 'new_data' => $new_ttype_data]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تم تحديث نوع المستأجر بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف النوع مفقود.");
        }
        $mysqli->commit(); // <<--- تأكيد المعاملة

    } catch (Exception $e) {
        $mysqli->rollback(); // <<--- التراجع عن المعاملة
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Tenant Type Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_tenant_type') {
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('tenant_types/index.php'));
    }
    $tt_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($tt_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_ttype_del_info = $mysqli->prepare("SELECT type_name, display_name_ar FROM tenant_types WHERE id = ?");
            $ttype_details_log = null;
            if($stmt_ttype_del_info){
                $stmt_ttype_del_info->bind_param("i", $tt_id_to_delete); $stmt_ttype_del_info->execute();
                $res_ttype_del = $stmt_ttype_del_info->get_result();
                if($res_ttype_del->num_rows > 0) $ttype_details_log = $res_ttype_del->fetch_assoc();
                $stmt_ttype_del_info->close();
            }
            if(!$ttype_details_log) throw new Exception("نوع المستأجر المطلوب حذفه غير موجود.");

            $stmt_check_usage_get = $mysqli->prepare("SELECT COUNT(*) as count FROM tenants WHERE tenant_type_id = ?");
            if (!$stmt_check_usage_get) throw new Exception('خطأ في فحص استخدام نوع المستأجر: ' . $mysqli->error);
            $stmt_check_usage_get->bind_param("i", $tt_id_to_delete); $stmt_check_usage_get->execute();
            $usage_result_get = $stmt_check_usage_get->get_result()->fetch_assoc();
            $stmt_check_usage_get->close();
            if ($usage_result_get && $usage_result_get['count'] > 0) {
                throw new Exception('لا يمكن حذف هذا النوع لأنه مستخدم في (' . $usage_result_get['count'] . ') سجل/سجلات مستأجرين.');
            }

            $stmt_delete_get = $mysqli->prepare("DELETE FROM tenant_types WHERE id = ?");
            if (!$stmt_delete_get) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete_get->bind_param("i", $tt_id_to_delete);
            if (!$stmt_delete_get->execute()) throw new Exception('فشل في حذف النوع: ' . $stmt_delete_get->error);
            $stmt_delete_get->close();
            
            // افترض أن AUDIT_DELETE_TENANT_TYPE معرف
            log_audit_action($mysqli, 'DELETE_TENANT_TYPE', $tt_id_to_delete, 'tenant_types', $ttype_details_log); // <<--- تسجيل الحدث
            $mysqli->commit();
            set_message('تم حذف نوع المستأجر بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Tenant Type Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف نوع المستأجر غير صحيح للحذف.", "danger");
    }
    redirect(base_url('tenant_types/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_tenant_type')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./tenant_types/index.php =====
<?php
$page_title = "إدارة أنواع المستأجرين";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page_ttype = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_ttype = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_ttype = ($current_page_ttype - 1) * $items_per_page_ttype;

// البحث
$search_term_ttype = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part_ttype = '';
$params_for_count_ttype = []; $types_for_count_ttype = "";
$params_for_data_ttype = [];  $types_for_data_ttype = "";

if (!empty($search_term_ttype)) {
    $search_query_part_ttype = " WHERE type_name LIKE ? OR display_name_ar LIKE ?";
    $search_like_ttype = "%" . $search_term_ttype . "%";
    $params_for_count_ttype = [$search_like_ttype, $search_like_ttype]; $types_for_count_ttype = "ss";
    $params_for_data_ttype = $params_for_count_ttype; $types_for_data_ttype = $types_for_count_ttype;
}

// العدد الإجمالي لأنواع المستأجرين
$total_sql_ttype = "SELECT COUNT(*) as total FROM tenant_types" . $search_query_part_ttype;
$stmt_total_ttype = $mysqli->prepare($total_sql_ttype);
$total_tenant_types = 0;
if ($stmt_total_ttype) {
    if (!empty($params_for_count_ttype)) $stmt_total_ttype->bind_param($types_for_count_ttype, ...$params_for_count_ttype);
    $stmt_total_ttype->execute();
    $total_result_ttype = $stmt_total_ttype->get_result();
    $total_tenant_types = ($total_result_ttype && $total_result_ttype->num_rows > 0) ? $total_result_ttype->fetch_assoc()['total'] : 0;
    $stmt_total_ttype->close();
} else { error_log("SQL Prepare Error counting tenant types: " . $mysqli->error); }
$total_pages_ttype = ceil($total_tenant_types / $items_per_page_ttype);

// جلب أنواع المستأجرين للصفحة الحالية
$sql_ttype = "SELECT * FROM tenant_types" . $search_query_part_ttype . " ORDER BY display_name_ar ASC LIMIT ? OFFSET ?";
$current_data_params_ttype = $params_for_data_ttype;
$current_data_params_ttype[] = $items_per_page_ttype;
$current_data_params_ttype[] = $offset_ttype;
$current_data_types_ttype = $types_for_data_ttype . 'ii';

$tenant_types_list_page = [];
$stmt_ttype = $mysqli->prepare($sql_ttype);
if ($stmt_ttype) {
    if (!empty($current_data_params_ttype)) $stmt_ttype->bind_param($current_data_types_ttype, ...$current_data_params_ttype);
    else $stmt_ttype->bind_param('ii', $items_per_page_ttype, $offset_ttype);
    $stmt_ttype->execute();
    $result_ttype = $stmt_ttype->get_result();
    $tenant_types_list_page = ($result_ttype && $result_ttype->num_rows > 0) ? $result_ttype->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_ttype->close();
} else { error_log("SQL Prepare Error fetching tenant types: " . $mysqli->error); }

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-person-bounding-box"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة أنواع المستأجرين (<?php echo $total_tenant_types; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#tenantTypeModal" onclick="prepareTenantTypeModal('add_tenant_type')">
                    <i class="bi bi-plus-circle"></i> إضافة نوع جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('tenant_types/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                     <label for="search_tenant_types_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_tenant_types_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالمعرف أو الاسم المعروض..." value="<?php echo esc_attr($search_term_ttype); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($tenant_types_list_page) && !empty($search_term_ttype)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term_ttype); ?>".</div>
            <?php elseif (empty($tenant_types_list_page)): ?>
                <div class="alert alert-info text-center">لا توجد أنواع مستأجرين مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#tenantTypeModal" onclick="prepareTenantTypeModal('add_tenant_type')">إضافة نوع جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>المعرف (<code>type_name</code>)</th>
                            <th>الاسم المعروض (بالعربية)</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_ttype = ($current_page_ttype - 1) * $items_per_page_ttype + 1; ?>
                        <?php foreach ($tenant_types_list_page as $ttype_item): ?>
                        <tr>
                            <td><?php echo $row_num_ttype++; ?></td>
                            <td><code><?php echo esc_html($ttype_item['type_name']); ?></code></td>
                            <td><?php echo esc_html($ttype_item['display_name_ar']); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareTenantTypeModal('edit_tenant_type', <?php echo htmlspecialchars(json_encode($ttype_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#tenantTypeModal"
                                        title="تعديل نوع المستأجر">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-tenant-type-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $ttype_item['id']; ?>"
                                        data-name="<?php echo esc_attr($ttype_item['display_name_ar']); ?>"
                                        data-delete-url="<?php echo base_url('tenant_types/actions.php?action=delete_tenant_type&id=' . $ttype_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف نوع المستأجر">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_ttype > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_ttype = [];
            if (!empty($search_term_ttype)) $pagination_params_ttype['search'] = $search_term_ttype;
            echo generate_pagination_links($current_page_ttype, $total_pages_ttype, 'tenant_types/index.php', $pagination_params_ttype);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
// تضمين نافذة إضافة/تعديل نوع المستأجر
// المفترض أن يتم إنشاء هذا الملف
// require_once __DIR__ . '/../includes/modals/tenant_type_modal.php'; 
echo ''; // مؤقتاً
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareTenantTypeModal(action, ttypeData = null) {
    const ttypeModal = document.getElementById('tenantTypeModal'); // اسم النافذة المنبثقة المفترض
    const modalTitle = ttypeModal.querySelector('.modal-title'); // اسم الكلاس داخل النافذة
    const ttypeForm = ttypeModal.querySelector('form'); // افتراض وجود form واحد
    const ttypeIdInput = ttypeModal.querySelector('input[name="tenant_type_id"]'); // اسم الحقل المخفي
    const actionInput = ttypeModal.querySelector('input[name="action"]');
    const submitButton = ttypeModal.querySelector('button[type="submit"] span'); // النص داخل زر الإرسال

    ttypeForm.reset();
    if(ttypeIdInput) ttypeIdInput.value = '';
    actionInput.value = action;

    if (action === 'add_tenant_type') {
        modalTitle.textContent = 'إضافة نوع مستأجر جديد';
        if(submitButton) submitButton.textContent = 'إضافة النوع';
    } else if (action === 'edit_tenant_type' && ttypeData) {
        modalTitle.textContent = 'تعديل نوع المستأجر: ' + ttypeData.display_name_ar;
        if(submitButton) submitButton.textContent = 'حفظ التعديلات';
        if(ttypeIdInput) ttypeIdInput.value = ttypeData.id;
        
        // ملء الحقول - تأكد من أن معرفات الحقول في النافذة المنبثقة tenant_type_modal.php صحيحة
        let nameInput = ttypeModal.querySelector('input[name="type_name"]');
        let displayNameInput = ttypeModal.querySelector('input[name="display_name_ar"]');
        if(nameInput) nameInput.value = ttypeData.type_name || '';
        if(displayNameInput) displayNameInput.value = ttypeData.display_name_ar || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalTType = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalTType) {
        confirmDeleteModalTType.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-tenant-type-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalTType.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف نوع المستأجر "' + itemName + '"؟';
                
                var additionalInfo = confirmDeleteModalTType.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: لا يمكن حذف نوع المستأجر إذا كان مستخدماً لأي مستأجرين حاليين.';

                var confirmDeleteButton = confirmDeleteModalTType.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonTType = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonTType, confirmDeleteButton);
                    
                    newConfirmDeleteButtonTType.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonTType.removeAttribute('href');
                    
                    newConfirmDeleteButtonTType.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    // يفترض أن يكون لديك نافذة منبثقة بالمعرف tenantTypeModal ونموذج بداخلها
    const ttypeFormElement = document.querySelector('#tenantTypeModal form'); // تعديل السلكتور
    if(ttypeFormElement) {
        ttypeFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(ttypeFormElement);
            const actionUrl = '<?php echo base_url('tenant_types/actions.php'); ?>';

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var ttypeModalInstance = bootstrap.Modal.getInstance(document.getElementById('tenantTypeModal'));
                    if(ttypeModalInstance) ttypeModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./audit_log/index.php =====
<?php
$page_title = "سجل التدقيق";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_role('admin'); // سجل التدقيق عادة ما يكون للمسؤولين فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// Pagination variables
$current_page_audit = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_audit = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 25; // Show more items for logs
$offset_audit = ($current_page_audit - 1) * $items_per_page_audit;

// Filtering
$filter_user_id_audit = isset($_GET['user_id']) && filter_var($_GET['user_id'], FILTER_VALIDATE_INT) ? (int)$_GET['user_id'] : '';
$filter_action_type_audit = isset($_GET['action_type']) ? sanitize_input($_GET['action_type']) : '';
$filter_target_table_audit = isset($_GET['target_table']) ? sanitize_input($_GET['target_table']) : '';
$filter_date_from_audit = isset($_GET['date_from']) ? sanitize_input($_GET['date_from']) : '';
$filter_date_to_audit = isset($_GET['date_to']) ? sanitize_input($_GET['date_to']) : '';

$where_clauses_audit = [];
$params_for_count_audit = []; $types_for_count_audit = "";
$params_for_data_audit = [];  $types_for_data_audit = "";

if (!empty($filter_user_id_audit)) {
    $where_clauses_audit[] = "al.user_id = ?";
    $params_for_count_audit[] = $filter_user_id_audit; $types_for_count_audit .= "i";
    $params_for_data_audit[] = $filter_user_id_audit;  $types_for_data_audit .= "i";
}
if (!empty($filter_action_type_audit)) {
    $where_clauses_audit[] = "al.action_type = ?";
    $params_for_count_audit[] = $filter_action_type_audit; $types_for_count_audit .= "s";
    $params_for_data_audit[] = $filter_action_type_audit;  $types_for_data_audit .= "s";
}
if (!empty($filter_target_table_audit)) {
    $where_clauses_audit[] = "al.target_table = ?";
    $params_for_count_audit[] = $filter_target_table_audit; $types_for_count_audit .= "s";
    $params_for_data_audit[] = $filter_target_table_audit;  $types_for_data_audit .= "s";
}
if (!empty($filter_date_from_audit)) {
    $where_clauses_audit[] = "DATE(al.timestamp) >= ?";
    $params_for_count_audit[] = $filter_date_from_audit; $types_for_count_audit .= "s";
    $params_for_data_audit[] = $filter_date_from_audit;  $types_for_data_audit .= "s";
}
if (!empty($filter_date_to_audit)) {
    $where_clauses_audit[] = "DATE(al.timestamp) <= ?";
    $params_for_count_audit[] = $filter_date_to_audit; $types_for_count_audit .= "s";
    $params_for_data_audit[] = $filter_date_to_audit;  $types_for_data_audit .= "s";
}

$where_sql_audit = "";
if (!empty($where_clauses_audit)) {
    $where_sql_audit = " WHERE " . implode(" AND ", $where_clauses_audit);
}

// Get total number of audit log entries
$total_sql_audit = "SELECT COUNT(al.id) as total FROM audit_log al" . $where_sql_audit;
$stmt_total_audit = $mysqli->prepare($total_sql_audit);
$total_audit_logs = 0;
if ($stmt_total_audit) {
    if (!empty($params_for_count_audit)) $stmt_total_audit->bind_param($types_for_count_audit, ...$params_for_count_audit);
    $stmt_total_audit->execute();
    $total_result_audit = $stmt_total_audit->get_result();
    $total_audit_logs = ($total_result_audit && $total_result_audit->num_rows > 0) ? $total_result_audit->fetch_assoc()['total'] : 0;
    $stmt_total_audit->close();
} else { error_log("SQL Prepare Error counting audit logs: " . $mysqli->error); }
$total_pages_audit = ceil($total_audit_logs / $items_per_page_audit);

// Fetch audit logs for the current page
$sql_audit = "SELECT al.*, u.full_name as user_full_name, u.username 
              FROM audit_log al 
              LEFT JOIN users u ON al.user_id = u.id" 
             . $where_sql_audit . " ORDER BY al.timestamp DESC LIMIT ? OFFSET ?";

$current_data_params_audit = $params_for_data_audit;
$current_data_params_audit[] = $items_per_page_audit;
$current_data_params_audit[] = $offset_audit;
$current_data_types_audit = $types_for_data_audit . 'ii';

$audit_logs_list = [];
$stmt_audit = $mysqli->prepare($sql_audit);
if ($stmt_audit) {
    if (!empty($current_data_params_audit)) $stmt_audit->bind_param($current_data_types_audit, ...$current_data_params_audit);
    else $stmt_audit->bind_param('ii', $items_per_page_audit, $offset_audit);
    $stmt_audit->execute();
    $result_audit = $stmt_audit->get_result();
    $audit_logs_list = ($result_audit && $result_audit->num_rows > 0) ? $result_audit->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_audit->close();
} else { error_log("SQL Prepare Error fetching audit logs: " . $mysqli->error); }

// For filters: Get distinct users, action_types, target_tables
$distinct_users_audit = $mysqli->query("SELECT DISTINCT u.id, u.full_name FROM audit_log al JOIN users u ON al.user_id = u.id WHERE al.user_id IS NOT NULL ORDER BY u.full_name ASC")->fetch_all(MYSQLI_ASSOC);
$distinct_actions_audit = $mysqli->query("SELECT DISTINCT action_type FROM audit_log ORDER BY action_type ASC")->fetch_all(MYSQLI_ASSOC);
$distinct_tables_audit = $mysqli->query("SELECT DISTINCT target_table FROM audit_log WHERE target_table IS NOT NULL ORDER BY target_table ASC")->fetch_all(MYSQLI_ASSOC);

$csrf_token = generate_csrf_token(); // Not used on this page for actions, but good practice
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-card-list"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <h5 class="card-title mb-0">سجلات التدقيق (<?php echo $total_audit_logs; ?>)</h5>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('audit_log/index.php'); ?>" class="row gx-2 gy-2 align-items-end">
                <div class="col-md-2">
                    <label for="filter_user_id_audit_page" class="form-label form-label-sm">المستخدم</label>
                    <select id="filter_user_id_audit_page" name="user_id" class="form-select form-select-sm">
                        <option value="">-- كل المستخدمين --</option>
                        <?php foreach($distinct_users_audit as $user_filter): ?>
                            <option value="<?php echo $user_filter['id']; ?>" <?php echo ($filter_user_id_audit == $user_filter['id']) ? 'selected' : ''; ?>><?php echo esc_html($user_filter['full_name']); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="filter_action_type_audit_page" class="form-label form-label-sm">نوع الإجراء</label>
                    <select id="filter_action_type_audit_page" name="action_type" class="form-select form-select-sm">
                        <option value="">-- كل الإجراءات --</option>
                        <?php foreach($distinct_actions_audit as $action_filter): ?>
                            <option value="<?php echo esc_attr($action_filter['action_type']); ?>" <?php echo ($filter_action_type_audit == $action_filter['action_type']) ? 'selected' : ''; ?>><?php echo esc_html($action_filter['action_type']); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                 <div class="col-md-2">
                    <label for="filter_target_table_audit_page" class="form-label form-label-sm">الجدول المستهدف</label>
                    <select id="filter_target_table_audit_page" name="target_table" class="form-select form-select-sm">
                        <option value="">-- كل الجداول --</option>
                        <?php foreach($distinct_tables_audit as $table_filter): ?>
                            <option value="<?php echo esc_attr($table_filter['target_table']); ?>" <?php echo ($filter_target_table_audit == $table_filter['target_table']) ? 'selected' : ''; ?>><?php echo esc_html($table_filter['target_table']); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="filter_date_from_audit_page" class="form-label form-label-sm">من تاريخ</label>
                    <input type="date" id="filter_date_from_audit_page" name="date_from" class="form-control form-control-sm" value="<?php echo esc_attr($filter_date_from_audit); ?>">
                </div>
                <div class="col-md-2">
                     <label for="filter_date_to_audit_page" class="form-label form-label-sm">إلى تاريخ</label>
                    <input type="date" id="filter_date_to_audit_page" name="date_to" class="form-control form-control-sm" value="<?php echo esc_attr($filter_date_to_audit); ?>">
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i></button>
                </div>
                 <div class="col-md-1">
                     <a href="<?php echo base_url('audit_log/index.php'); ?>" class="btn btn-outline-secondary btn-sm w-100" title="مسح الفلاتر"><i class="bi bi-eraser-fill"></i></a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($audit_logs_list) && (!empty($filter_user_id_audit) || !empty($filter_action_type_audit) || !empty($filter_target_table_audit) || !empty($filter_date_from_audit) || !empty($filter_date_to_audit))): ?>
                <div class="alert alert-warning text-center">لا توجد سجلات تدقيق تطابق معايير الفلترة.</div>
            <?php elseif (empty($audit_logs_list)): ?>
                <div class="alert alert-info text-center">لا توجد سجلات تدقيق متاحة حالياً.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>التاريخ والوقت</th>
                            <th>المستخدم</th>
                            <th>نوع الإجراء</th>
                            <th>الجدول</th>
                            <th>معرف الهدف</th>
                            <th>عنوان IP</th>
                            <th>التفاصيل</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_audit = ($current_page_audit - 1) * $items_per_page_audit + 1; ?>
                        <?php foreach ($audit_logs_list as $log_item): ?>
                        <tr>
                            <td><?php echo $row_num_audit++; ?></td>
                            <td><?php echo format_date_custom($log_item['timestamp'], 'Y-m-d H:i:s'); ?></td>
                            <td><?php echo esc_html($log_item['user_full_name'] ? ($log_item['user_full_name'] . ' (' . $log_item['username'] . ')') : ($log_item['user_id'] ? 'مستخدم محذوف (ID: ' . $log_item['user_id'] . ')' : 'نظام/غير مسجل')); ?></td>
                            <td><span class="badge bg-info text-dark"><?php echo esc_html($log_item['action_type']); ?></span></td>
                            <td><?php echo esc_html($log_item['target_table'] ?: '-'); ?></td>
                            <td><?php echo esc_html($log_item['target_id'] ?: '-'); ?></td>
                            <td><?php echo esc_html($log_item['ip_address'] ?: '-'); ?></td>
                            <td>
                                <?php if (!empty($log_item['details'])): ?>
                                <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#auditDetailsModal_<?php echo $log_item['id']; ?>">
                                    <i class="bi bi-eye"></i> عرض
                                </button>
                                <div class="modal fade" id="auditDetailsModal_<?php echo $log_item['id']; ?>" tabindex="-1" aria-labelledby="auditDetailsModalLabel_<?php echo $log_item['id']; ?>" aria-hidden="true">
                                  <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                      <div class="modal-header">
                                        <h5 class="modal-title" id="auditDetailsModalLabel_<?php echo $log_item['id']; ?>">تفاصيل السجل #<?php echo $log_item['id']; ?></h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                      </div>
                                      <div class="modal-body">
                                        <pre style="white-space: pre-wrap; word-wrap: break-word;"><?php echo esc_html(json_encode(json_decode($log_item['details']), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)); ?></pre>
                                      </div>
                                      <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">إغلاق</button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <?php else: echo '-'; endif; ?>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_audit > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_audit = [];
            if (!empty($filter_user_id_audit)) $pagination_params_audit['user_id'] = $filter_user_id_audit;
            if (!empty($filter_action_type_audit)) $pagination_params_audit['action_type'] = $filter_action_type_audit;
            if (!empty($filter_target_table_audit)) $pagination_params_audit['target_table'] = $filter_target_table_audit;
            if (!empty($filter_date_from_audit)) $pagination_params_audit['date_from'] = $filter_date_from_audit;
            if (!empty($filter_date_to_audit)) $pagination_params_audit['date_to'] = $filter_date_to_audit;
            echo generate_pagination_links($current_page_audit, $total_pages_audit, 'audit_log/index.php', $pagination_params_audit);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

</div> <?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./README.md =====
# نظام إدارة العقارات والفواتير الإلكترونية (متوافق مع ZATCA)

هذا المشروع هو نظام إدارة عقارات مبني باستخدام PHP الأصلي (Native PHP) و MySQL، مع واجهة مستخدم تعتمد على Bootstrap 5. يهدف النظام إلى توفير وظائف لإدارة العقارات، الملاك، المستأجرين، عقود الإيجار، الفواتير، المدفوعات، وقراءات عدادات المرافق.

يتميز النظام بالتحضير للتكامل مع متطلبات الفوترة الإلكترونية لهيئة الزكاة والضريبة والجمارك (ZATCA) في المملكة العربية السعودية، مع الأخذ في الاعتبار استخدام مكتبات مساعدة لتوليد وتوقيع ملفات XML الخاصة بالفواتير.
s
## الميزات الرئيسية (المخطط لها والمكتملة جزئيًا)

* **لوحة تحكم رئيسية:** عرض ملخصات وإحصائيات عامة.
* **إدارة المستخدمين:**
    * تسجيل الدخول والخروج.
    * تسجيل مستخدمين جدد (بأدوار مختلفة).
    * إدارة المستخدمين الحاليين (عرض، تعديل، حذف، تغيير الدور) للمسؤول.
* **إدارة أصحاب العقارات:** إضافة، عرض، تعديل، حذف بيانات الملاك.
* **إدارة العقارات:** إضافة، عرض، تعديل، حذف بيانات العقارات وربطها بالمالك.
* **إدارة الوحدات:** (ضمن العقارات أو كوحدة منفصلة لاحقًا) إدارة تفاصيل الوحدات السكنية أو التجارية.
* **إدارة المستأجرين:** إضافة، عرض، تعديل، حذف بيانات المستأجرين.
* **إدارة عقود الإيجار:** إنشاء عقود إيجار، ربطها بالوحدات والمستأجرين، تحديد مدة العقد، مبلغ الإيجار، ودورية السداد.
* **إدارة الفواتير:**
    * إنشاء فواتير (إيجار، خدمات، إلخ).
    * إدارة بنود الفواتير.
    * تتبع حالة الفواتير (مدفوعة، غير مدفوعة، متأخرة).
    * **تكامل ZATCA (قيد التطوير):**
        * توليد XML للفواتير (مبسطة وقياسية) متوافق مع UBL 2.1.
        * حساب تجزئة الفاتورة (Invoice Hash).
        * توليد رمز الاستجابة السريعة (QR Code) بتنسيق TLV.
        * توقيع ملفات XML باستخدام شهادة تشفير.
        * (مستقبلاً) إرسال الفواتير إلى منصة ZATCA ومعالجة الردود.
* **إدارة المدفوعات:** تسجيل الدفعات المستلمة وربطها بالفواتير وتحديث حالة الفواتير.
* **إدارة المرافق وقراءات العدادات:** تسجيل قراءات عدادات الخدمات (كهرباء، ماء، إلخ) وحساب الاستهلاك.
* **إعدادات النظام:** صفحة للمسؤول لتعديل إعدادات التطبيق العامة وإعدادات ZATCA المخزنة في قاعدة البيانات.

## التقنيات المستخدمة

* **الخادم (Backend):** PHP أصلي (بدون إطارات عمل مثل Laravel أو Symfony).
* **قاعدة البيانات (Database):** MySQL.
* **الواجهة الأمامية (Frontend):**
    * HTML5.
    * Bootstrap 5 (للأنماط والتصميم المتجاوب).
    * Bootstrap Icons (للأيقونات).
    * JavaScript (أصلي و jQuery من CDN للاستخدامات البسيطة وتحسين واجهة المستخدم، خاصة مع النوافذ المنبثقة).
* **مكتبات PHP Propuesta (مقترحة/مستخدمة جزئيًا):**
    * `Saleh7/php-zatca-xml` (أو ما شابهها): لتوليد XML الفواتير وتوقيعها لـ ZATCA.

## هيكل المشروع

راجع الملفات والمجلدات داخل المشروع لفهم الهيكل التفصيلي. المجلدات الرئيسية تشمل:
* `auth/`: لملفات المصادقة.
* `owners/`, `properties/`, `tenants/`, `leases/`, `invoices/`, `payments/`, `utilities/`, `users/`: لكل وحدة رئيسية في النظام.
* `includes/`: للملفات المشتركة مثل (header, navigation, modals, functions).
* `sql_dump/`: يحتوي على مخطط قاعدة البيانات.
* `assets/`: للملفات الثابتة مثل الصور (إذا وجدت).
* `invoices/zatca_integration/`: مخصص للملفات المتعلقة بتكامل ZATCA.

## الإعداد والتشغيل

1.  **متطلبات الخادم:**
    * خادم ويب يدعم PHP (مثل Apache أو Nginx).
    * PHP (يفضل إصدار 7.4 أو أحدث، مع تمكين الامتدادات الضرورية مثل `mysqli`, `openssl`, `gd` لـ QR codes, `curl` للاتصال بـ API).
    * خادم MySQL أو MariaDB.
2.  **إنشاء قاعدة البيانات:**
    * قم بإنشاء قاعدة بيانات جديدة بالاسم المحدد في `config.php` (الافتراضي هو `amrsam99_inventory_db`).
    * قم باستيراد مخطط قاعدة البيانات والجداول من ملف `sql_dump/property_management.sql`.
3.  **تكوين الاتصال بقاعدة البيانات:**
    * عدّل ملف `config.php` بمعلومات الاتصال الصحيحة بقاعدة البيانات (DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME).
4.  **إعدادات التطبيق و ZATCA:**
    * بعد إنشاء الجداول، قم بمراجعة وتحديث القيم في جدول `app_settings` في قاعدة البيانات، خاصة تلك المتعلقة بـ ZATCA (مثل مسارات الشهادات، معرفات العميل، إلخ) لتناسب بيئتك واشتراكك مع هيئة الزكاة.
5.  **مسارات الملفات:**
    * تأكد من أن مسارات الملفات (خاصة لشهادات ZATCA) في جدول `app_settings` هي مسارات مطلقة وصحيحة على خادمك.
    * تأكد من أن مجلد `uploads/contracts/` (أو أي مجلد رفع آخر يتم إنشاؤه) قابل للكتابة بواسطة خادم الويب.
6.  **الوصول إلى التطبيق:**
    * قم بتوجيه متصفحك إلى `APP_BASE_URL` الذي قمت بتعيينه في `config.php`.
    * **مستخدم افتراضي للمسؤول:**
        * اسم المستخدم: `admin`
        * كلمة المرور: `password123` (ينصح بشدة بتغييرها فورًا بعد تسجيل الدخول الأول).

## ملاحظات للمطورين

* **الأمان:** تم تضمين تدابير أمان أساسية مثل تنقية المدخلات، استخدام استعلامات مُعدَّة (prepared statements)، وحماية CSRF. يجب دائمًا مراجعة وتحديث الممارسات الأمنية.
* **تكامل ZATCA:** تكامل ZATCA عملية معقدة وتتطلب فهمًا دقيقًا لأدلة المطورين الخاصة بهيئة الزكاة. الكود المتعلق بـ ZATCA في هذا المشروع هو في مراحله الأولية ويحتاج إلى تطوير واختبار مكثف.
* **"بدون AJAX":** تم بناء النظام بناءً على طلب المستخدم لعدم استخدام AJAX بشكل أساسي لعمليات CRUD، مما يعني أن معظم عمليات النماذج تتضمن إعادة تحميل كاملة للصفحة.

## المساهمة
(هذا القسم يمكن تركه فارغًا أو تعديله إذا كان المشروع مفتوح المصدر ويقبل مساهمات)

---
===== ./payments/payment_actions.php =====
<?php
// payments/payment_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // تضمين ملف سجل التدقيق

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id = get_current_user_id();

$upload_dir_relative_payments = 'uploads/payment_attachments/';
$app_base_path_for_uploads_payments = defined('APP_BASE_URL') ? rtrim(parse_url(APP_BASE_URL, PHP_URL_PATH), '/') : '';
$doc_root_payments = isset($_SERVER['DOCUMENT_ROOT']) ? rtrim($_SERVER['DOCUMENT_ROOT'], '/\\') : __DIR__ . '/../..';
$upload_dir_absolute_payments = $doc_root_payments . $app_base_path_for_uploads_payments . '/' . $upload_dir_relative_payments;


if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!is_dir($upload_dir_absolute_payments)) {
        if (!mkdir($upload_dir_absolute_payments, 0775, true) && !is_dir($upload_dir_absolute_payments)) {
            $response = ['success' => false, 'message' => "فشل في إنشاء مجلد رفع مرفقات الدفع: " . $upload_dir_absolute_payments];
            error_log("Failed to create payment attachments upload directory: " . $upload_dir_absolute_payments);
            echo json_encode($response); exit;
        }
    }

    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response); exit;
    }

    $payment_id = isset($_POST['payment_id']) ? filter_var($_POST['payment_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $invoice_id = isset($_POST['invoice_id']) && filter_var($_POST['invoice_id'], FILTER_VALIDATE_INT) ? (int)$_POST['invoice_id'] : null;
    $amount_paid_input = isset($_POST['amount_paid']) ? trim($_POST['amount_paid']) : null;
    $amount_paid = ($amount_paid_input !== '' && filter_var($amount_paid_input, FILTER_VALIDATE_FLOAT) !== false && (float)$amount_paid_input > 0) ? (float)$amount_paid_input : null;
    
    $payment_date_input = isset($_POST['payment_date']) ? trim($_POST['payment_date']) : null;
    $payment_date = null;
    if ($payment_date_input) {
        $date_obj_pay = DateTime::createFromFormat('Y-m-d', $payment_date_input);
        if ($date_obj_pay && $date_obj_pay->format('Y-m-d') === $payment_date_input) $payment_date = $payment_date_input;
    }

    $payment_method_id = isset($_POST['payment_method_id']) && filter_var($_POST['payment_method_id'], FILTER_VALIDATE_INT) ? (int)$_POST['payment_method_id'] : null;
    $payment_status = isset($_POST['payment_status']) ? sanitize_input($_POST['payment_status']) : null;
    $allowed_statuses = ['Pending', 'Completed', 'Failed', 'Cancelled', 'Refunded'];
    if ($payment_status === null || !in_array($payment_status, $allowed_statuses, true)) {
        $response = ['success' => false, 'message' => 'حالة الدفع غير صالحة أو مفقودة.'];
        echo json_encode($response); exit;
    }

    // في جدول payments، العمود اسمه reference_number. النموذج يرسل receipt_number. سنستخدم reference_number هنا.
    $reference_number = isset($_POST['receipt_number']) ? sanitize_input(trim($_POST['receipt_number'])) : null; 
    $payment_notes = isset($_POST['payment_notes']) ? sanitize_input(trim($_POST['payment_notes'])) : null;
    $payment_attachment_path = null;

    if (isset($_FILES['payment_attachment']) && $_FILES['payment_attachment']['error'] == UPLOAD_ERR_OK) {
        // ... (منطق رفع مرفق الدفع كما في النسخة السابقة)
        $file_tmp_path_pay = $_FILES['payment_attachment']['tmp_name'];
        $file_name_pay = sanitize_input(basename($_FILES['payment_attachment']['name']));
        $file_extension_pay = strtolower(pathinfo($file_name_pay, PATHINFO_EXTENSION));
        $allowed_extensions_pay = ['pdf', 'jpg', 'jpeg', 'png', 'gif', 'doc', 'docx'];
        $max_file_size_pay = 5 * 1024 * 1024;

        if (!in_array($file_extension_pay, $allowed_extensions_pay)) {
            $response = ['success' => false, 'message' => "صيغة ملف المرفق غير مسموح بها."];
            echo json_encode($response); exit;
        }
        if ($_FILES['payment_attachment']['size'] > $max_file_size_pay) {
            $response = ['success' => false, 'message' => "حجم ملف المرفق يتجاوز الحد المسموح به."];
            echo json_encode($response); exit;
        }
        $new_file_name_pay = 'payment_attach_' . uniqid('', true) . '.' . $file_extension_pay;
        $destination_path_absolute_pay = $upload_dir_absolute_payments . $new_file_name_pay;
        $destination_path_relative_pay = $upload_dir_relative_payments . $new_file_name_pay;

        if (move_uploaded_file($file_tmp_path_pay, $destination_path_absolute_pay)) {
            $payment_attachment_path = $destination_path_relative_pay;
        } else {
            error_log("Failed to move payment attachment: " . $destination_path_absolute_pay);
            $response = ['success' => false, 'message' => "حدث خطأ أثناء رفع مرفق الدفعة."];
            echo json_encode($response); exit;
        }
    }

    if ($invoice_id === null || $amount_paid === null || $payment_date === null || $payment_method_id === null) {
        $response = ['success' => false, 'message' => "الحقول المطلوبة (الفاتورة، المبلغ، تاريخ الدفع، طريقة الدفع) يجب ملؤها."];
        echo json_encode($response); exit;
    }

    $mysqli->begin_transaction();
    try {
        if ($action === 'add_payment') {
            $stmt_invoice = $mysqli->prepare("SELECT tenant_id, total_amount FROM invoices WHERE id = ?");
            // ... (بقية منطق إضافة الدفعة كما في النسخة السابقة)
            if(!$stmt_invoice) throw new Exception("خطأ تجهيز جلب معلومات الفاتورة: " . $mysqli->error);
            $stmt_invoice->bind_param("i", $invoice_id);
            $stmt_invoice->execute();
            $invoice_result = $stmt_invoice->get_result();
            if ($invoice_result->num_rows === 0) throw new Exception("الفاتورة المحددة غير موجودة.");
            $invoice_data = $invoice_result->fetch_assoc();
            $tenant_id_from_invoice = $invoice_data['tenant_id'];
            $invoice_total_amount = (float)$invoice_data['total_amount'];
            $stmt_invoice->close();

            if ($payment_status === 'Completed') {
                // ... (فحص المبلغ المتبقي كما في النسخة السابقة)
                $stmt_paid = $mysqli->prepare("SELECT COALESCE(SUM(amount_paid),0) as total_paid FROM payments WHERE invoice_id = ? AND status = 'Completed'");
                if(!$stmt_paid) throw new Exception("خطأ تجهيز فحص المدفوعات السابقة: " . $mysqli->error);
                $stmt_paid->bind_param("i", $invoice_id); $stmt_paid->execute();
                $paid_result = $stmt_paid->get_result()->fetch_assoc();
                $current_total_paid = $paid_result ? (float)$paid_result['total_paid'] : 0.0;
                $stmt_paid->close();
                if (($current_total_paid + $amount_paid) > ($invoice_total_amount + 0.005)) {
                    throw new Exception("المبلغ الإجمالي يتجاوز إجمالي الفاتورة. المتبقي: " . max(0, $invoice_total_amount - $current_total_paid));
                }
            }

            $sql = "INSERT INTO payments (invoice_id, tenant_id, payment_date, amount_paid, payment_method_id, status, reference_number, notes, received_by_id, attachment_path) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception("خطأ في تجهيز استعلام إضافة الدفعة: " . $mysqli->error);
            
            $stmt->bind_param("iisdisssis", 
                $invoice_id, $tenant_id_from_invoice, $payment_date, $amount_paid, $payment_method_id, 
                $payment_status, $reference_number, 
                $payment_notes, $current_user_id, $payment_attachment_path
            );
            if (!$stmt->execute()) throw new Exception("خطأ في إضافة الدفعة: " . $stmt->error);
            $new_payment_id = $stmt->insert_id;
            $stmt->close();
            
            if ($payment_status === 'Completed') update_invoice_status($mysqli, $invoice_id);
            
            log_audit_action($mysqli, AUDIT_CREATE_PAYMENT, $new_payment_id, 'payments', ['invoice_id' => $invoice_id, 'amount' => $amount_paid, 'method_id' => $payment_method_id]);
            $response = ['success' => true, 'message' => "تم تسجيل الدفعة بنجاح!"];

        } elseif ($action === 'edit_payment' && $payment_id) {
            // ... (منطق تعديل الدفعة كما في النسخة السابقة، مع إضافة جلب البيانات القديمة)
            $stmt_old_payment = $mysqli->prepare("SELECT * FROM payments WHERE id = ?");
            $old_payment_data = null;
            if($stmt_old_payment){
                $stmt_old_payment->bind_param("i", $payment_id);
                $stmt_old_payment->execute();
                $res_old_payment = $stmt_old_payment->get_result();
                if($res_old_payment->num_rows > 0) $old_payment_data = $res_old_payment->fetch_assoc();
                $stmt_old_payment->close();
            }
            if(!$old_payment_data) throw new Exception("الدفعة المطلوبة للتعديل غير موجودة.");
            $original_invoice_id = $old_payment_data['invoice_id'];


            $stmt_invoice_edit = $mysqli->prepare("SELECT tenant_id, total_amount FROM invoices WHERE id = ?");
             // ... (بقية منطق تعديل الدفعة كما في النسخة السابقة)
            if(!$stmt_invoice_edit) throw new Exception("خطأ تجهيز جلب معلومات الفاتورة (تعديل): " . $mysqli->error);
            $stmt_invoice_edit->bind_param("i", $invoice_id); $stmt_invoice_edit->execute();
            $invoice_result_edit = $stmt_invoice_edit->get_result();
            if ($invoice_result_edit->num_rows === 0) throw new Exception("الفاتورة المحددة غير موجودة (تعديل).");
            $invoice_data_edit = $invoice_result_edit->fetch_assoc();
            $tenant_id_from_invoice_edit = $invoice_data_edit['tenant_id'];
            $invoice_total_amount_edit = (float)$invoice_data_edit['total_amount'];
            $stmt_invoice_edit->close();

            if ($payment_status === 'Completed') {
                // ... (فحص المبلغ المتبقي كما في النسخة السابقة)
                $stmt_paid_edit = $mysqli->prepare("SELECT COALESCE(SUM(amount_paid),0) as total_paid FROM payments WHERE invoice_id = ? AND status = 'Completed' AND id != ?");
                if(!$stmt_paid_edit) throw new Exception("خطأ تجهيز فحص المدفوعات السابقة (تعديل): " . $mysqli->error);
                $stmt_paid_edit->bind_param("ii", $invoice_id, $payment_id); $stmt_paid_edit->execute();
                $paid_result_edit = $stmt_paid_edit->get_result()->fetch_assoc();
                $current_total_paid_edit = $paid_result_edit ? (float)$paid_result_edit['total_paid'] : 0.0;
                $stmt_paid_edit->close();
                if (($current_total_paid_edit + $amount_paid) > ($invoice_total_amount_edit + 0.005)) {
                     throw new Exception("المبلغ الإجمالي يتجاوز إجمالي الفاتورة. المتبقي: " . max(0, $invoice_total_amount_edit - $current_total_paid_edit));
                }
            }

            $set_clauses_pay = "invoice_id = ?, tenant_id = ?, payment_date = ?, amount_paid = ?, payment_method_id = ?, status = ?, reference_number = ?, notes = ?";
            $types_update_pay = "iisdisss"; 
            $params_update_pay = [
                $invoice_id, $tenant_id_from_invoice_edit, $payment_date, $amount_paid, $payment_method_id, 
                $payment_status, $reference_number, $payment_notes
            ];

            if ($payment_attachment_path) {
                $set_clauses_pay .= ", attachment_path = ?";
                $types_update_pay .= "s";
                $params_update_pay[] = $payment_attachment_path;
            }
            $params_update_pay[] = $payment_id; 
            $types_update_pay .= "i";

            $sql_update = "UPDATE payments SET " . $set_clauses_pay . " WHERE id = ?";
            $stmt_update = $mysqli->prepare($sql_update);
            if (!$stmt_update) throw new Exception("خطأ في تجهيز استعلام تعديل الدفعة: " . $mysqli->error);
            $stmt_update->bind_param($types_update_pay, ...$params_update_pay);
            if (!$stmt_update->execute()) throw new Exception("خطأ في تعديل بيانات الدفعة: " . $stmt_update->error);
            $stmt_update->close();

            if ($payment_attachment_path && $old_payment_data['attachment_path'] && !empty($old_payment_data['attachment_path'])) {
                 $old_attach_abs_path = $doc_root_payments . $app_base_path_for_uploads_payments . '/' . $old_payment_data['attachment_path'];
                if (file_exists($old_attach_abs_path)) @unlink($old_attach_abs_path);
            }
            
            if(isset($original_invoice_id) && $original_invoice_id != $invoice_id) update_invoice_status($mysqli, $original_invoice_id);
            update_invoice_status($mysqli, $invoice_id);
            
            $new_payment_data = compact('invoice_id', 'tenant_id_from_invoice_edit', 'payment_date', 'amount_paid', 'payment_method_id', 'payment_status', 'reference_number', 'payment_notes', 'payment_attachment_path');
            log_audit_action($mysqli, AUDIT_EDIT_PAYMENT, $payment_id, 'payments', ['old_data' => $old_payment_data, 'new_data' => $new_payment_data]);
            $response = ['success' => true, 'message' => "تم تحديث بيانات الدفعة بنجاح!"];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف الدفعة مفقود.");
        }
        $mysqli->commit();

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("[Payment Action Error] Message: " . $e->getMessage());
        if ($action === 'add_payment' && $payment_attachment_path && file_exists($upload_dir_absolute_payments . basename($payment_attachment_path))) {
            @unlink($upload_dir_absolute_payments . basename($payment_attachment_path));
        }
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_payment') {
    // ... (منطق الحذف من GET request كما في النسخة السابقة مع إضافة سجل التدقيق)
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('payments/index.php'));
    }
    $payment_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($payment_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_payment_info_del = $mysqli->prepare("SELECT invoice_id, amount_paid, payment_method_id, attachment_path FROM payments WHERE id = ?");
            $payment_details_log = null;
            if($stmt_payment_info_del){
                $stmt_payment_info_del->bind_param("i", $payment_id_to_delete);
                $stmt_payment_info_del->execute();
                $res_payment_info_del = $stmt_payment_info_del->get_result();
                if($res_payment_info_del->num_rows > 0) $payment_details_log = $res_payment_info_del->fetch_assoc();
                $stmt_payment_info_del->close();
            }
            if(!$payment_details_log) throw new Exception("الدفعة المطلوبة للحذف غير موجودة.");

            $sql_delete = "DELETE FROM payments WHERE id = ?";
            $stmt_delete = $mysqli->prepare($sql_delete);
            if (!$stmt_delete) throw new Exception("خطأ في تجهيز استعلام حذف الدفعة: " . $mysqli->error);
            $stmt_delete->bind_param("i", $payment_id_to_delete);
            if (!$stmt_delete->execute()) throw new Exception("خطأ في حذف الدفعة: " . $stmt_delete->error);
            $affected_rows = $stmt_delete->affected_rows;
            $stmt_delete->close();

            if ($affected_rows > 0) {
                if (!empty($payment_details_log['attachment_path'])) {
                     $attach_to_delete_abs = $doc_root_payments . $app_base_path_for_uploads_payments . '/' . $payment_details_log['attachment_path'];
                    if (file_exists($attach_to_delete_abs)) @unlink($attach_to_delete_abs);
                }
                if ($payment_details_log['invoice_id']) update_invoice_status($mysqli, $payment_details_log['invoice_id']);
                
                log_audit_action($mysqli, AUDIT_DELETE_PAYMENT, $payment_id_to_delete, 'payments', ['invoice_id' => $payment_details_log['invoice_id'], 'amount' => $payment_details_log['amount_paid']]);
                $mysqli->commit();
                set_message("تم حذف الدفعة بنجاح!", "success");
            } else {
                throw new Exception("لم يتم العثور على الدفعة أو لم يتم حذفها.");
            }
        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Payment Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف الدفعة غير صحيح للحذف.", "danger");
    }
    redirect(base_url('payments/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_payment')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./payments/index.php =====
<?php
$page_title = "إدارة الدفعات";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// Pagination variables
$current_page_pay = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_pay = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_pay = ($current_page_pay - 1) * $items_per_page_pay;

// Filtering and Search
$search_term_pay = isset($_GET['search']) ? sanitize_input($_GET['search']) : ''; // Invoice number or tenant name
$filter_payment_method_id_pay = isset($_GET['payment_method_id']) && filter_var($_GET['payment_method_id'], FILTER_VALIDATE_INT) ? (int)$_GET['payment_method_id'] : '';
$filter_status_pay = isset($_GET['status']) ? sanitize_input($_GET['status']) : '';
$filter_date_from_pay = isset($_GET['date_from']) ? sanitize_input($_GET['date_from']) : '';
$filter_date_to_pay = isset($_GET['date_to']) ? sanitize_input($_GET['date_to']) : '';

$where_clauses_pay = [];
$params_for_count_pay = []; $types_for_count_pay = "";
$params_for_data_pay = [];  $types_for_data_pay = "";

if (!empty($search_term_pay)) {
    $where_clauses_pay[] = "(i.invoice_number LIKE ? OR t.full_name LIKE ? OR pay.reference_number LIKE ?)"; // search by invoice no, tenant name or receipt_number (stored as reference_number)
    $search_like_pay = "%" . $search_term_pay . "%";
    for ($k=0; $k<3; $k++) {
        $params_for_count_pay[] = $search_like_pay; $types_for_count_pay .= "s";
        $params_for_data_pay[] = $search_like_pay;  $types_for_data_pay .= "s";
    }
}
if (!empty($filter_payment_method_id_pay)) {
    $where_clauses_pay[] = "pay.payment_method_id = ?";
    $params_for_count_pay[] = $filter_payment_method_id_pay; $types_for_count_pay .= "i";
    $params_for_data_pay[] = $filter_payment_method_id_pay;  $types_for_data_pay .= "i";
}
if (!empty($filter_status_pay)) {
    $where_clauses_pay[] = "pay.status = ?";
    $params_for_count_pay[] = $filter_status_pay; $types_for_count_pay .= "s";
    $params_for_data_pay[] = $filter_status_pay;  $types_for_data_pay .= "s";
}
if (!empty($filter_date_from_pay)) {
    $where_clauses_pay[] = "pay.payment_date >= ?";
    $params_for_count_pay[] = $filter_date_from_pay; $types_for_count_pay .= "s";
    $params_for_data_pay[] = $filter_date_from_pay;  $types_for_data_pay .= "s";
}
if (!empty($filter_date_to_pay)) {
    $where_clauses_pay[] = "pay.payment_date <= ?";
    $params_for_count_pay[] = $filter_date_to_pay; $types_for_count_pay .= "s";
    $params_for_data_pay[] = $filter_date_to_pay;  $types_for_data_pay .= "s";
}

$where_sql_pay = "";
if (!empty($where_clauses_pay)) {
    $where_sql_pay = " WHERE " . implode(" AND ", $where_clauses_pay);
}

// Total payments
$total_sql_pay = "SELECT COUNT(pay.id) as total 
                  FROM payments pay
                  LEFT JOIN invoices i ON pay.invoice_id = i.id
                  LEFT JOIN tenants t ON pay.tenant_id = t.id
                  LEFT JOIN payment_methods pm ON pay.payment_method_id = pm.id" . $where_sql_pay;
$stmt_total_pay = $mysqli->prepare($total_sql_pay);
$total_payments = 0;
if ($stmt_total_pay) {
    if (!empty($params_for_count_pay)) {
        $stmt_total_pay->bind_param($types_for_count_pay, ...$params_for_count_pay);
    }
    $stmt_total_pay->execute();
    $total_result_pay = $stmt_total_pay->get_result();
    $total_payments = ($total_result_pay && $total_result_pay->num_rows > 0) ? $total_result_pay->fetch_assoc()['total'] : 0;
    $stmt_total_pay->close();
} else {
    error_log("SQL Prepare Error for counting payments: " . $mysqli->error);
}
$total_pages_pay = ceil($total_payments / $items_per_page_pay);

// Fetch payments for the current page
$sql_pay = "SELECT pay.id, pay.invoice_id, pay.tenant_id, pay.payment_date, pay.amount_paid, 
                   pay.payment_method_id, pay.status as payment_status, pay.reference_number, pay.notes as payment_notes, pay.attachment_path,
                   i.invoice_number, i.total_amount as invoice_total,
                   t.full_name as tenant_name,
                   pm.display_name_ar as payment_method_name,
                   u.full_name as received_by_name
            FROM payments pay
            LEFT JOIN invoices i ON pay.invoice_id = i.id
            LEFT JOIN tenants t ON pay.tenant_id = t.id
            LEFT JOIN payment_methods pm ON pay.payment_method_id = pm.id
            LEFT JOIN users u ON pay.received_by_id = u.id"
            . $where_sql_pay . " ORDER BY pay.payment_date DESC, pay.id DESC LIMIT ? OFFSET ?";

$current_data_params_pay = $params_for_data_pay;
$current_data_params_pay[] = $items_per_page_pay;
$current_data_params_pay[] = $offset_pay;
$current_data_types_pay = $types_for_data_pay . 'ii';

$payments_list = [];
$stmt_pay = $mysqli->prepare($sql_pay);
if ($stmt_pay) {
    if (!empty($current_data_params_pay)) {
        $stmt_pay->bind_param($current_data_types_pay, ...$current_data_params_pay);
    } else {
         $stmt_pay->bind_param('ii', $items_per_page_pay, $offset_pay);
    }
    $stmt_pay->execute();
    $result_pay = $stmt_pay->get_result();
    $payments_list = ($result_pay && $result_pay->num_rows > 0) ? $result_pay->fetch_all(MYSQLI_ASSOC) : [];
    if($stmt_pay) $stmt_pay->close();
} else {
    error_log("SQL Prepare Error for fetching payments: " . $mysqli->error);
}

// Fetch payment methods for filter
$payment_methods_filter_list_pay = [];
$pm_filter_q = "SELECT id, display_name_ar FROM payment_methods WHERE is_active = 1 ORDER BY display_name_ar ASC";
if($pm_filter_r = $mysqli->query($pm_filter_q)){ while($row = $pm_filter_r->fetch_assoc()){ $payment_methods_filter_list_pay[] = $row;} $pm_filter_r->free(); }

$payment_statuses_filter_options = [ // تم تغيير الاسم من payment_statuses_modal_options
    '' => '-- كل الحالات --',
    'Pending' => 'معلقة',
    'Completed' => 'مكتملة',
    'Failed' => 'فشلت',
    'Cancelled' => 'ملغاة',
    'Refunded' => 'مستردة'
];

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-cash-coin"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة الدفعات (<?php echo $total_payments; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#paymentModal" onclick="preparePaymentModal('add_payment')">
                    <i class="bi bi-plus-circle"></i> تسجيل دفعة جديدة
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('payments/index.php'); ?>" class="row gx-2 gy-2 align-items-end">
                <div class="col-md-3 col-lg-3">
                    <label for="search_payments_page" class="form-label form-label-sm">بحث عام</label>
                    <input type="text" id="search_payments_page" name="search" class="form-control form-control-sm" placeholder="رقم الفاتورة، المستأجر، الإيصال..." value="<?php echo esc_attr($search_term_pay); ?>">
                </div>
                <div class="col-md-2 col-lg-2">
                    <label for="filter_payment_method_id_pay_page" class="form-label form-label-sm">طريقة الدفع</label>
                    <select id="filter_payment_method_id_pay_page" name="payment_method_id" class="form-select form-select-sm">
                        <option value="">-- الكل --</option>
                        <?php foreach ($payment_methods_filter_list_pay as $pm_filter_item): ?>
                            <option value="<?php echo $pm_filter_item['id']; ?>" <?php echo ($filter_payment_method_id_pay == $pm_filter_item['id']) ? 'selected' : ''; ?>>
                                <?php echo esc_html($pm_filter_item['display_name_ar']); ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                 <div class="col-md-2 col-lg-2">
                    <label for="filter_status_pay_page" class="form-label form-label-sm">الحالة</label>
                    <select id="filter_status_pay_page" name="status" class="form-select form-select-sm">
                        <?php foreach ($payment_statuses_filter_options as $key => $value): ?>
                            <option value="<?php echo $key; ?>" <?php echo ($filter_status_pay == $key && $filter_status_pay !== '') ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-2 col-lg-1">
                    <label for="filter_date_from_pay_page" class="form-label form-label-sm">من تاريخ</label>
                    <input type="date" id="filter_date_from_pay_page" name="date_from" class="form-control form-control-sm" value="<?php echo esc_attr($filter_date_from_pay); ?>">
                </div>
                <div class="col-md-2 col-lg-1">
                     <label for="filter_date_to_pay_page" class="form-label form-label-sm">إلى تاريخ</label>
                    <input type="date" id="filter_date_to_pay_page" name="date_to" class="form-control form-control-sm" value="<?php echo esc_attr($filter_date_to_pay); ?>">
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i></button>
                </div>
                 <div class="col-md-1">
                     <a href="<?php echo base_url('payments/index.php'); ?>" class="btn btn-outline-secondary btn-sm w-100" title="مسح الفلاتر"><i class="bi bi-eraser-fill"></i></a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($payments_list) && (!empty($search_term_pay) || !empty($filter_payment_method_id_pay) || !empty($filter_status_pay) || !empty($filter_date_from_pay) || !empty($filter_date_to_pay))): ?>
                <div class="alert alert-warning text-center">لا توجد دفعات تطابق معايير البحث أو الفلترة.</div>
            <?php elseif (empty($payments_list)): ?>
                <div class="alert alert-info text-center">لا توجد دفعات مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#paymentModal" onclick="preparePaymentModal('add_payment')">تسجيل دفعة جديدة</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>رقم الفاتورة</th>
                            <th>المستأجر</th>
                            <th>المبلغ المدفوع</th>
                            <th>طريقة الدفع</th>
                            <th>تاريخ الدفع</th>
                            <th>رقم الإيصال/المرجع</th>
                            <th>الحالة</th>
                            <th>بواسطة</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_pay = ($current_page_pay - 1) * $items_per_page_pay + 1; ?>
                        <?php foreach ($payments_list as $payment_item): ?>
                        <tr>
                            <td><?php echo $row_num_pay++; ?></td>
                            <td><a href="<?php echo base_url('invoices/view_invoice.php?id=' . $payment_item['invoice_id']); ?>"><?php echo esc_html($payment_item['invoice_number'] ?: '-'); ?></a></td>
                            <td><?php echo esc_html($payment_item['tenant_name'] ?: '-'); ?></td>
                            <td><?php echo number_format($payment_item['amount_paid'], 2); ?> ريال</td>
                            <td><?php echo esc_html($payment_item['payment_method_name'] ?: '-'); ?></td>
                            <td><?php echo format_date_custom($payment_item['payment_date'], 'Y-m-d'); ?></td>
                            <td><?php echo esc_html($payment_item['reference_number'] ?: '-'); // كان receipt_number ?></td>
                            <td>
                                <?php
                                $status_class_pay = 'secondary';
                                if ($payment_item['payment_status'] === 'Completed') $status_class_pay = 'success';
                                elseif ($payment_item['payment_status'] === 'Pending') $status_class_pay = 'warning';
                                elseif ($payment_item['payment_status'] === 'Failed' || $payment_item['payment_status'] === 'Cancelled') $status_class_pay = 'danger';
                                ?>
                                <span class="badge bg-<?php echo $status_class_pay; ?>"><?php echo esc_html($payment_statuses_filter_options[$payment_item['payment_status']] ?? $payment_item['payment_status']); ?></span>
                            </td>
                            <td><?php echo esc_html($payment_item['received_by_name'] ?: '-'); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="preparePaymentModal('edit_payment', <?php echo htmlspecialchars(json_encode($payment_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#paymentModal"
                                        title="تعديل الدفعة">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <?php if ($payment_item['payment_status'] !== 'Completed'): // لا يمكن حذف دفعة مكتملة بسهولة، قد تحتاج لعملية استرداد ?>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-payment-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $payment_item['id']; ?>"
                                        data-name="الدفعة للمستأجر <?php echo esc_attr($payment_item['tenant_name']); ?> (فاتورة: <?php echo esc_attr($payment_item['invoice_number']); ?>)"
                                        data-delete-url="<?php echo base_url('payments/payment_actions.php?action=delete_payment&id=' . $payment_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف الدفعة">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <?php endif; ?>
                                <?php if (!empty($payment_item['attachment_path'])): ?>
                                    <a href="<?php echo base_url(esc_attr($payment_item['attachment_path'])); ?>" target="_blank" class="btn btn-sm btn-outline-primary" title="عرض المرفق">
                                        <i class="bi bi-paperclip"></i>
                                    </a>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_pay > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_pay = [];
            if (!empty($search_term_pay)) $pagination_params_pay['search'] = $search_term_pay;
            if (!empty($filter_payment_method_id_pay)) $pagination_params_pay['payment_method_id'] = $filter_payment_method_id_pay;
            if (!empty($filter_status_pay)) $pagination_params_pay['status'] = $filter_status_pay;
            if (!empty($filter_date_from_pay)) $pagination_params_pay['date_from'] = $filter_date_from_pay;
            if (!empty($filter_date_to_pay)) $pagination_params_pay['date_to'] = $filter_date_to_pay;
            echo generate_pagination_links($current_page_pay, $total_pages_pay, 'payments/index.php', $pagination_params_pay);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/payment_modal.php'; // النافذة الخاصة بتسجيل الدفعات
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function preparePaymentModal(action, paymentData = null) {
    const paymentModal = document.getElementById('paymentModal'); // معرف النافذة المنبثقة لتسجيل الدفعات
    const modalTitle = paymentModal.querySelector('#paymentModalLabel_payments_page');
    const paymentForm = paymentModal.querySelector('#paymentFormModal');
    const paymentIdInput = paymentModal.querySelector('#payment_id_modal_payments_page');
    const actionInput = paymentModal.querySelector('#payment_form_action_modal_payments_page');
    const submitButton = paymentModal.querySelector('#paymentSubmitButtonTextModalPaymentsPage');
    const invoiceSelect = paymentModal.querySelector('#invoice_id_modal_payments_page');
    const amountPaidInput = paymentModal.querySelector('#amount_paid_modal_payments_page');
    const invoiceDetailsText = paymentModal.querySelector('#invoice_details_text_payments_modal');
    const currentAttachmentSpan = paymentModal.querySelector('#current_payment_attachment_text_modal');


    paymentForm.reset(); // This will also clear the file input
    paymentIdInput.value = '';
    actionInput.value = action;
    invoiceDetailsText.textContent = '';
    if(currentAttachmentSpan) currentAttachmentSpan.innerHTML = '';

    // Enable invoice select for add, disable for edit (or handle carefully)
    invoiceSelect.disabled = (action === 'edit_payment');


    if (action === 'add_payment') {
        modalTitle.textContent = 'تسجيل دفعة جديدة';
        submitButton.textContent = 'تسجيل الدفعة';
        if(document.getElementById('payment_date_modal_payments_page')) document.getElementById('payment_date_modal_payments_page').value = new Date().toISOString().slice(0,10);
        if(document.getElementById('payment_status_modal_payments_page')) document.getElementById('payment_status_modal_payments_page').value = 'Completed';

    } else if (action === 'edit_payment' && paymentData) {
        modalTitle.textContent = 'تعديل بيانات الدفعة للفاتورة: ' + (paymentData.invoice_number || 'غير محددة');
        submitButton.textContent = 'حفظ التعديلات';
        paymentIdInput.value = paymentData.id;
        
        if(invoiceSelect) invoiceSelect.value = paymentData.invoice_id || '';
        // Manually trigger change event if needed to update remaining amount text
        var event = new Event('change');
        if(invoiceSelect) invoiceSelect.dispatchEvent(event);

        if(amountPaidInput) amountPaidInput.value = paymentData.amount_paid || '';
        if(document.getElementById('payment_date_modal_payments_page')) document.getElementById('payment_date_modal_payments_page').value = paymentData.payment_date || '';
        if(document.getElementById('payment_method_id_modal_payments_page')) document.getElementById('payment_method_id_modal_payments_page').value = paymentData.payment_method_id || '';
        if(document.getElementById('payment_status_modal_payments_page')) document.getElementById('payment_status_modal_payments_page').value = paymentData.payment_status || '';
        if(document.getElementById('receipt_number_modal_payments_page')) document.getElementById('receipt_number_modal_payments_page').value = paymentData.reference_number || ''; // reference_number is the DB column
        if(document.getElementById('payment_notes_modal_payments_page')) document.getElementById('payment_notes_modal_payments_page').value = paymentData.payment_notes || '';
        
        if (paymentData.attachment_path && currentAttachmentSpan) {
            var filename = paymentData.attachment_path.split('/').pop();
            currentAttachmentSpan.innerHTML = 'المرفق الحالي: <a href="<?php echo base_url(); ?>' + paymentData.attachment_path + '" target="_blank" class="text-decoration-none">' + filename + '</a> (لإبقائه، لا ترفع ملف جديد)';
        }
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalPaymentPage = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalPaymentPage) {
        confirmDeleteModalPaymentPage.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-payment-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalPaymentPage.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف ' + itemName + '؟';
                
                var additionalInfo = confirmDeleteModalPaymentPage.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'سيتم تحديث حالة الفاتورة المرتبطة بعد الحذف.';

                var confirmDeleteButton = confirmDeleteModalPaymentPage.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonPay = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonPay, confirmDeleteButton);
                    
                    newConfirmDeleteButtonPay.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonPay.removeAttribute('href');
                    
                    newConfirmDeleteButtonPay.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    const paymentFormElement = document.getElementById('paymentFormModal');
    if(paymentFormElement) {
        paymentFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(paymentFormElement);
            const actionUrl = '<?php echo base_url('payments/payment_actions.php'); ?>';

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var paymentModalInstance = bootstrap.Modal.getInstance(document.getElementById('paymentModal'));
                    if(paymentModalInstance) paymentModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع في تسجيل الدفعة.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./unit_types/actions.php =====
<?php
// unit_types/actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // إذا كانت هذه الوظيفة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // <<--- تم الإضافة

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $unit_type_id = isset($_POST['unit_type_id']) ? filter_var($_POST['unit_type_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $type_name = isset($_POST['type_name']) ? strtolower(sanitize_input(str_replace(' ', '_', trim($_POST['type_name'])))) : null;
    $display_name_ar = isset($_POST['display_name_ar']) ? sanitize_input(trim($_POST['display_name_ar'])) : null;

    if (empty($type_name) || empty($display_name_ar)) {
        $response = ['success' => false, 'message' => 'المعرف والاسم المعروض مطلوبان.'];
        echo json_encode($response); exit;
    }
    if (!preg_match('/^[a-z0-9_]+$/', $type_name)) {
        $response = ['success' => false, 'message' => 'المعرف يجب أن يحتوي على أحرف إنجليزية صغيرة وأرقام وشرطة سفلية فقط.'];
        echo json_encode($response); exit;
    }

    $mysqli->begin_transaction(); // <<--- بدء المعاملة
    try {
        if ($action === 'add_unit_type') {
            // ... (فحص التكرار كما في النسخة السابقة)
            $stmt_check = $mysqli->prepare("SELECT id FROM unit_types WHERE type_name = ?");
            if (!$stmt_check) throw new Exception('خطأ تجهيز فحص المعرف: ' . $mysqli->error);
            $stmt_check->bind_param("s", $type_name); $stmt_check->execute(); $stmt_check->store_result();
            if ($stmt_check->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل.');
            $stmt_check->close();

            $stmt_insert = $mysqli->prepare("INSERT INTO unit_types (type_name, display_name_ar) VALUES (?, ?)");
            if (!$stmt_insert) throw new Exception('فشل في تحضير استعلام الإضافة: ' . $mysqli->error);
            $stmt_insert->bind_param("ss", $type_name, $display_name_ar);
            if (!$stmt_insert->execute()) throw new Exception('فشل في إضافة النوع: ' . $stmt_insert->error);
            
            $new_utype_id = $stmt_insert->insert_id;
            $stmt_insert->close();
            log_audit_action($mysqli, AUDIT_CREATE_UNIT_TYPE, $new_utype_id, 'unit_types', ['type_name' => $type_name, 'display_name_ar' => $display_name_ar]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تمت إضافة نوع الوحدة بنجاح!'];

        } elseif ($action === 'edit_unit_type' && $unit_type_id) {
            $stmt_old_utype = $mysqli->prepare("SELECT type_name, display_name_ar FROM unit_types WHERE id = ?");
            $old_utype_data = null;
            if($stmt_old_utype){
                $stmt_old_utype->bind_param("i", $unit_type_id); $stmt_old_utype->execute();
                $res_old_utype = $stmt_old_utype->get_result();
                if($res_old_utype->num_rows > 0) $old_utype_data = $res_old_utype->fetch_assoc();
                $stmt_old_utype->close();
            }
            if(!$old_utype_data) throw new Exception("نوع الوحدة المطلوب تعديله غير موجود.");

            // ... (فحص التكرار عند التعديل كما في النسخة السابقة)
            $stmt_check_edit = $mysqli->prepare("SELECT id FROM unit_types WHERE type_name = ? AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص المعرف (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("si", $type_name, $unit_type_id); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل لنوع آخر.');
            $stmt_check_edit->close();

            $stmt_update = $mysqli->prepare("UPDATE unit_types SET type_name = ?, display_name_ar = ? WHERE id = ?");
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام التحديث: ' . $mysqli->error);
            $stmt_update->bind_param("ssi", $type_name, $display_name_ar, $unit_type_id);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث النوع: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_utype_data = compact('type_name', 'display_name_ar');
            log_audit_action($mysqli, 'EDIT_UNIT_TYPE', $unit_type_id, 'unit_types', ['old_data' => $old_utype_data, 'new_data' => $new_utype_data]); // <<--- تسجيل الحدث (استخدم AUDIT_EDIT_UNIT_TYPE إذا عرفته)
            $response = ['success' => true, 'message' => 'تم تحديث نوع الوحدة بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف النوع مفقود.");
        }
        $mysqli->commit(); // <<--- تأكيد المعاملة

    } catch (Exception $e) {
        $mysqli->rollback(); // <<--- التراجع عن المعاملة
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Unit Type Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_unit_type') {
    // ... (منطق الحذف من GET request كما في النسخة السابقة مع إضافة سجل التدقيق والمعاملات)
     if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('unit_types/index.php'));
    }
    $ut_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($ut_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_utype_del_info = $mysqli->prepare("SELECT type_name, display_name_ar FROM unit_types WHERE id = ?");
            $utype_details_log = null;
            if($stmt_utype_del_info){
                $stmt_utype_del_info->bind_param("i", $ut_id_to_delete); $stmt_utype_del_info->execute();
                $res_utype_del = $stmt_utype_del_info->get_result();
                if($res_utype_del->num_rows > 0) $utype_details_log = $res_utype_del->fetch_assoc();
                $stmt_utype_del_info->close();
            }
            if(!$utype_details_log) throw new Exception("نوع الوحدة المطلوب حذفه غير موجود.");

            // ... (فحص استخدام النوع كما في النسخة السابقة)
            $stmt_check_usage_get = $mysqli->prepare("SELECT COUNT(*) as count FROM units WHERE unit_type_id = ?");
            if (!$stmt_check_usage_get) throw new Exception('خطأ في فحص استخدام نوع الوحدة: ' . $mysqli->error);
            $stmt_check_usage_get->bind_param("i", $ut_id_to_delete); $stmt_check_usage_get->execute();
            $usage_result_get = $stmt_check_usage_get->get_result()->fetch_assoc();
            $stmt_check_usage_get->close();
            if ($usage_result_get && $usage_result_get['count'] > 0) {
                throw new Exception('لا يمكن حذف هذا النوع لأنه مستخدم في (' . $usage_result_get['count'] . ') وحدة/وحدات.');
            }


            $stmt_delete_get = $mysqli->prepare("DELETE FROM unit_types WHERE id = ?");
            if (!$stmt_delete_get) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete_get->bind_param("i", $ut_id_to_delete);
            if (!$stmt_delete_get->execute()) throw new Exception('فشل في حذف النوع: ' . $stmt_delete_get->error);
            $stmt_delete_get->close();
            
            log_audit_action($mysqli, 'DELETE_UNIT_TYPE', $ut_id_to_delete, 'unit_types', $utype_details_log); // <<--- تسجيل الحدث (استخدم AUDIT_DELETE_UNIT_TYPE إذا عرفته)
            $mysqli->commit();
            set_message('تم حذف نوع الوحدة بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Unit Type Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف نوع الوحدة غير صحيح للحذف.", "danger");
    }
    redirect(base_url('unit_types/index.php'));
}

// ... (بقية الكود)
if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_unit_type')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./unit_types/index.php =====
<?php
$page_title = "إدارة أنواع الوحدات";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // يمكنك إضافة هذا إذا كانت هذه الصفحة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page_utype = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_utype = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_utype = ($current_page_utype - 1) * $items_per_page_utype;

// وظيفة البحث (بسيطة للاسم المعروض أو المعرف)
$search_term_utype = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part_utype = '';
$params_for_count_utype = [];
$types_for_count_utype = "";
$params_for_data_utype = [];
$types_for_data_utype = "";

if (!empty($search_term_utype)) {
    $search_query_part_utype = " WHERE type_name LIKE ? OR display_name_ar LIKE ?";
    $search_like_utype = "%" . $search_term_utype . "%";
    $params_for_count_utype = [$search_like_utype, $search_like_utype];
    $types_for_count_utype = "ss";
    $params_for_data_utype = $params_for_count_utype;
    $types_for_data_utype = $types_for_count_utype;
}

// الحصول على العدد الإجمالي لأنواع الوحدات
$total_sql_utype = "SELECT COUNT(*) as total FROM unit_types" . $search_query_part_utype;
$stmt_total_utype = $mysqli->prepare($total_sql_utype);
$total_unit_types = 0;
if ($stmt_total_utype) {
    if (!empty($params_for_count_utype)) {
        $stmt_total_utype->bind_param($types_for_count_utype, ...$params_for_count_utype);
    }
    $stmt_total_utype->execute();
    $total_result_utype = $stmt_total_utype->get_result();
    $total_unit_types = ($total_result_utype && $total_result_utype->num_rows > 0) ? $total_result_utype->fetch_assoc()['total'] : 0;
    $stmt_total_utype->close();
} else {
    error_log("SQL Prepare Error for counting unit types: " . $mysqli->error);
}
$total_pages_utype = ceil($total_unit_types / $items_per_page_utype);

// جلب أنواع الوحدات للصفحة الحالية
$sql_utype = "SELECT * FROM unit_types" . $search_query_part_utype . " ORDER BY display_name_ar ASC LIMIT ? OFFSET ?";
$current_data_params_utype = $params_for_data_utype;
$current_data_params_utype[] = $items_per_page_utype;
$current_data_params_utype[] = $offset_utype;
$current_data_types_utype = $types_for_data_utype . 'ii';

$unit_types_list_page = [];
$stmt_utype = $mysqli->prepare($sql_utype);
if ($stmt_utype) {
    if (!empty($current_data_params_utype)) {
        $stmt_utype->bind_param($current_data_types_utype, ...$current_data_params_utype);
    } else {
        $stmt_utype->bind_param('ii', $items_per_page_utype, $offset_utype);
    }
    $stmt_utype->execute();
    $result_utype = $stmt_utype->get_result();
    $unit_types_list_page = ($result_utype && $result_utype->num_rows > 0) ? $result_utype->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_utype->close();
} else {
    error_log("SQL Prepare Error for fetching unit types: " . $mysqli->error);
}

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-bookmark-star-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة أنواع الوحدات (<?php echo $total_unit_types; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#unitTypeModal" onclick="prepareUnitTypeModal('add_unit_type')">
                    <i class="bi bi-plus-circle"></i> إضافة نوع جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('unit_types/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                     <label for="search_unit_types_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_unit_types_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالمعرف أو الاسم المعروض..." value="<?php echo esc_attr($search_term_utype); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($unit_types_list_page) && !empty($search_term_utype)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term_utype); ?>".</div>
            <?php elseif (empty($unit_types_list_page)): ?>
                <div class="alert alert-info text-center">لا توجد أنواع وحدات مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#unitTypeModal" onclick="prepareUnitTypeModal('add_unit_type')">إضافة نوع جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>المعرف (<code>type_name</code>)</th>
                            <th>الاسم المعروض (بالعربية)</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_utype = ($current_page_utype - 1) * $items_per_page_utype + 1; ?>
                        <?php foreach ($unit_types_list_page as $utype_item): ?>
                        <tr>
                            <td><?php echo $row_num_utype++; ?></td>
                            <td><code><?php echo esc_html($utype_item['type_name']); ?></code></td>
                            <td><?php echo esc_html($utype_item['display_name_ar']); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareUnitTypeModal('edit_unit_type', <?php echo htmlspecialchars(json_encode($utype_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#unitTypeModal"
                                        title="تعديل نوع الوحدة">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-unit-type-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $utype_item['id']; ?>"
                                        data-name="<?php echo esc_attr($utype_item['display_name_ar']); ?>"
                                        data-delete-url="<?php echo base_url('unit_types/actions.php?action=delete_unit_type&id=' . $utype_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف نوع الوحدة">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_utype > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_utype = [];
            if (!empty($search_term_utype)) $pagination_params_utype['search'] = $search_term_utype;
            echo generate_pagination_links($current_page_utype, $total_pages_utype, 'unit_types/index.php', $pagination_params_utype);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
// تضمين نافذة إضافة/تعديل نوع الوحدة
require_once __DIR__ . '/../includes/modals/unit_type_modal.php';
// تضمين نافذة تأكيد الحذف
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareUnitTypeModal(action, unitTypeData = null) {
    const unitTypeModal = document.getElementById('unitTypeModal');
    const modalTitle = unitTypeModal.querySelector('#unitTypeModalLabel_utypes');
    const unitTypeForm = unitTypeModal.querySelector('#unitTypeFormModal');
    const unitTypeIdInput = unitTypeModal.querySelector('#unit_type_id_modal_utypes');
    const actionInput = unitTypeModal.querySelector('#unit_type_form_action_modal_utypes');
    const submitButton = unitTypeModal.querySelector('#unitTypeSubmitButtonTextModalUtypes');

    unitTypeForm.reset();
    unitTypeIdInput.value = '';
    actionInput.value = action;

    // const formUrl = '<?php echo base_url('unit_types/actions.php'); ?>'; // Not needed for fetch

    if (action === 'add_unit_type') {
        modalTitle.textContent = 'إضافة نوع وحدة جديد';
        submitButton.textContent = 'إضافة النوع';
    } else if (action === 'edit_unit_type' && unitTypeData) {
        modalTitle.textContent = 'تعديل نوع الوحدة: ' + unitTypeData.display_name_ar;
        submitButton.textContent = 'حفظ التعديلات';
        unitTypeIdInput.value = unitTypeData.id;
        
        if(document.getElementById('unit_type_name_modal_utypes')) document.getElementById('unit_type_name_modal_utypes').value = unitTypeData.type_name || '';
        if(document.getElementById('unit_type_display_name_ar_modal_utypes')) document.getElementById('unit_type_display_name_ar_modal_utypes').value = unitTypeData.display_name_ar || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalUnitType = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalUnitType) {
        confirmDeleteModalUnitType.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-unit-type-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalUnitType.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف نوع الوحدة "' + itemName + '"؟';
                
                var additionalInfo = confirmDeleteModalUnitType.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: لا يمكن حذف نوع الوحدة إذا كان مستخدماً في أي وحدات حالية.';

                var confirmDeleteButton = confirmDeleteModalUnitType.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonUType = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonUType, confirmDeleteButton);
                    
                    newConfirmDeleteButtonUType.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonUType.removeAttribute('href');
                    
                    newConfirmDeleteButtonUType.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    const unitTypeFormElement = document.getElementById('unitTypeFormModal');
    if(unitTypeFormElement) {
        unitTypeFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(unitTypeFormElement);
            const actionUrl = '<?php echo base_url('unit_types/actions.php'); ?>';

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var unitTypeModalInstance = bootstrap.Modal.getInstance(document.getElementById('unitTypeModal'));
                    if(unitTypeModalInstance) unitTypeModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./db_connect.php =====
<?php
// db_connect.php

if (!defined('DB_HOST')) {
    require_once __DIR__ . '/config.php';
}

$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

if ($mysqli->connect_errno) {
    error_log("فشل الاتصال بـ MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error);
    die("فشل الاتصال بقاعدة البيانات. يرجى مراجعة المسؤول.");
}

if (!$mysqli->set_charset(DB_CHARSET)) {
    error_log("خطأ في تحميل مجموعة الحروف " . DB_CHARSET . ": " . $mysqli->error);
}

// تحميل إعدادات التطبيق من جدول app_settings وتعريفها كثوابت
$settings_sql = "SELECT `setting_key`, `setting_value` FROM `app_settings`";
$settings_result = $mysqli->query($settings_sql);

if ($settings_result) {
    while ($setting_row = $settings_result->fetch_assoc()) {
        $constant_name = strtoupper(str_replace('-', '_', $setting_row['setting_key']));
        if (!defined($constant_name)) {
            define($constant_name, $setting_row['setting_value']);
        }
    }
    $settings_result->free();
} else {
    error_log("فشل تحميل إعدادات التطبيق من قاعدة البيانات: " . $mysqli->error);
    die("فشل تحميل إعدادات التطبيق الأساسية. يرجى مراجعة مسؤول النظام.");
}

// التحقق من تعريف الثوابت الأساسية مع قيم افتراضية إذا لم يتم تحميلها
if (!defined('APP_NAME')) {
    define('APP_NAME', 'نظام إدارة العقارات (افتراضي)');
}
if (!defined('ITEMS_PER_PAGE')) {
    define('ITEMS_PER_PAGE', 10);
} else {
    // Ensure ITEMS_PER_PAGE is an integer
    if (!filter_var(ITEMS_PER_PAGE, FILTER_VALIDATE_INT)) {
        define('ITEMS_PER_PAGE_OVERRIDDEN_AS_INT', 10); // Use a different name if redefining is problematic
        error_log("Warning: ITEMS_PER_PAGE from database is not a valid integer. Using default 10.");
    } else {
         // If you want to ensure it's an int type, you could re-define or use a new constant
         // For simplicity, we assume it will be cast to int when used in calculations.
    }
}
// Add similar checks for critical ZATCA constants if their absence would break core functionality
// For example: ZATCA_SELLER_VAT_NUMBER
if (!defined('ZATCA_SELLER_VAT_NUMBER') || empty(ZATCA_SELLER_VAT_NUMBER)) {
    error_log("Critical ZATCA Setting Missing: ZATCA_SELLER_VAT_NUMBER is not defined in app_settings.");
    // Depending on how strictly you want to enforce this, you could die() here too.
}

?>
===== ./utilities/utility_actions.php =====
<?php
// utility_types/actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // If only for admin
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php';

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id = get_current_user_id();

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $utility_type_id = isset($_POST['utility_type_id']) ? filter_var($_POST['utility_type_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    // Name attributes in utility_type_modal.php are 'utility_type_name_modal' and 'unit_of_measure_modal'
    $name = isset($_POST['utility_type_name_modal']) ? sanitize_input(trim($_POST['utility_type_name_modal'])) : null;
    $unit_of_measure = isset($_POST['unit_of_measure_modal']) ? sanitize_input(trim($_POST['unit_of_measure_modal'])) : null;

    if (empty($name) || empty($unit_of_measure)) {
        $response = ['success' => false, 'message' => 'اسم النوع ووحدة القياس مطلوبان.'];
        echo json_encode($response); exit;
    }
    
    $mysqli->begin_transaction();
    try {
        if ($action === 'add_utility_type') {
            $stmt_check = $mysqli->prepare("SELECT id FROM utility_types WHERE name = ?");
            if (!$stmt_check) throw new Exception('خطأ تجهيز فحص الاسم: ' . $mysqli->error);
            $stmt_check->bind_param("s", $name); $stmt_check->execute(); $stmt_check->store_result();
            if ($stmt_check->num_rows > 0) throw new Exception('اسم النوع "' . esc_html($name) . '" مستخدم بالفعل.');
            $stmt_check->close();

            $stmt_insert = $mysqli->prepare("INSERT INTO utility_types (name, unit_of_measure) VALUES (?, ?)");
            if (!$stmt_insert) throw new Exception('فشل في تحضير استعلام الإضافة: ' . $mysqli->error);
            $stmt_insert->bind_param("ss", $name, $unit_of_measure);
            if (!$stmt_insert->execute()) throw new Exception('فشل في إضافة نوع المرفق: ' . $stmt_insert->error);
            
            $new_ut_id = $stmt_insert->insert_id;
            $stmt_insert->close();
            log_audit_action($mysqli, 'CREATE_UTILITY_TYPE', $new_ut_id, 'utility_types', ['name' => $name, 'unit_of_measure' => $unit_of_measure]);
            $response = ['success' => true, 'message' => 'تمت إضافة نوع المرفق بنجاح!'];

        } elseif ($action === 'edit_utility_type' && $utility_type_id) {
            $stmt_old_data = $mysqli->prepare("SELECT name, unit_of_measure FROM utility_types WHERE id = ?");
            $old_data = null;
            if($stmt_old_data){
                $stmt_old_data->bind_param("i", $utility_type_id); $stmt_old_data->execute();
                $res_old = $stmt_old_data->get_result();
                if($res_old->num_rows > 0) $old_data = $res_old->fetch_assoc();
                $stmt_old_data->close();
            }
            if(!$old_data) throw new Exception("نوع المرفق المطلوب تعديله غير موجود.");

            $stmt_check_edit = $mysqli->prepare("SELECT id FROM utility_types WHERE name = ? AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص الاسم (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("si", $name, $utility_type_id); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) throw new Exception('اسم النوع "' . esc_html($name) . '" مستخدم بالفعل لنوع آخر.');
            $stmt_check_edit->close();

            $stmt_update = $mysqli->prepare("UPDATE utility_types SET name = ?, unit_of_measure = ? WHERE id = ?");
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام التحديث: ' . $mysqli->error);
            $stmt_update->bind_param("ssi", $name, $unit_of_measure, $utility_type_id);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث نوع المرفق: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_data = compact('name', 'unit_of_measure');
            log_audit_action($mysqli, 'EDIT_UTILITY_TYPE', $utility_type_id, 'utility_types', ['old_data' => $old_data, 'new_data' => $new_data]);
            $response = ['success' => true, 'message' => 'تم تحديث نوع المرفق بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف النوع مفقود.");
        }
        $mysqli->commit();

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Utility Type Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_utility_type') {
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('utility_types/index.php'));
    }
    $ut_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($ut_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_del_info = $mysqli->prepare("SELECT name FROM utility_types WHERE id = ?");
            $del_info_log = null;
            if($stmt_del_info){
                $stmt_del_info->bind_param("i", $ut_id_to_delete); $stmt_del_info->execute();
                $res_del = $stmt_del_info->get_result();
                if($res_del->num_rows > 0) $del_info_log = $res_del->fetch_assoc();
                $stmt_del_info->close();
            }
            if(!$del_info_log) throw new Exception("نوع المرفق المطلوب حذفه غير موجود.");

            $stmt_check_usage = $mysqli->prepare("SELECT COUNT(*) as count FROM utility_readings WHERE utility_type_id = ?");
            if (!$stmt_check_usage) throw new Exception('خطأ في فحص استخدام نوع المرفق: ' . $mysqli->error);
            $stmt_check_usage->bind_param("i", $ut_id_to_delete); $stmt_check_usage->execute();
            $usage_result = $stmt_check_usage->get_result()->fetch_assoc();
            $stmt_check_usage->close();
            if ($usage_result && $usage_result['count'] > 0) {
                throw new Exception('لا يمكن حذف هذا النوع لأنه مستخدم في (' . $usage_result['count'] . ') قراءة/قراءات عدادات.');
            }

            $stmt_delete = $mysqli->prepare("DELETE FROM utility_types WHERE id = ?");
            if (!$stmt_delete) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete->bind_param("i", $ut_id_to_delete);
            if (!$stmt_delete->execute()) throw new Exception('فشل في حذف نوع المرفق: ' . $stmt_delete->error);
            $stmt_delete->close();
            
            log_audit_action($mysqli, 'DELETE_UTILITY_TYPE', $ut_id_to_delete, 'utility_types', $del_info_log);
            $mysqli->commit();
            set_message('تم حذف نوع المرفق بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Utility Type Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف نوع المرفق غير صحيح للحذف.", "danger");
    }
    redirect(base_url('utility_types/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_utility_type')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./utilities/index.php =====
<?php
$page_title = "إدارة أنواع المرافق";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // If only for admin
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// Pagination
$current_page_utype = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_utype = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_utype = ($current_page_utype - 1) * $items_per_page_utype;

// Search
$search_term_utype = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part_utype = '';
$params_for_count_utype = []; $types_for_count_utype = "";
$params_for_data_utype = [];  $types_for_data_utype = "";

if (!empty($search_term_utype)) {
    $search_query_part_utype = " WHERE name LIKE ? OR unit_of_measure LIKE ?";
    $search_like_utype = "%" . $search_term_utype . "%";
    $params_for_count_utype = [$search_like_utype, $search_like_utype]; $types_for_count_utype = "ss";
    $params_for_data_utype = $params_for_count_utype; $types_for_data_utype = $types_for_count_utype;
}

// Total count
$total_sql_utype = "SELECT COUNT(*) as total FROM utility_types" . $search_query_part_utype;
$stmt_total_utype = $mysqli->prepare($total_sql_utype);
$total_utility_types = 0;
if ($stmt_total_utype) {
    if (!empty($params_for_count_utype)) $stmt_total_utype->bind_param($types_for_count_utype, ...$params_for_count_utype);
    $stmt_total_utype->execute();
    $total_result_utype = $stmt_total_utype->get_result();
    $total_utility_types = ($total_result_utype && $total_result_utype->num_rows > 0) ? $total_result_utype->fetch_assoc()['total'] : 0;
    $stmt_total_utype->close();
} else { error_log("SQL Prepare Error counting utility types: " . $mysqli->error); }
$total_pages_utype = ceil($total_utility_types / $items_per_page_utype);

// Fetch data
$sql_utype = "SELECT * FROM utility_types" . $search_query_part_utype . " ORDER BY name ASC LIMIT ? OFFSET ?";
$current_data_params_utype = $params_for_data_utype;
$current_data_params_utype[] = $items_per_page_utype;
$current_data_params_utype[] = $offset_utype;
$current_data_types_utype = $types_for_data_utype . 'ii';

$utility_types_list = [];
$stmt_utype = $mysqli->prepare($sql_utype);
if ($stmt_utype) {
    if (!empty($current_data_params_utype)) $stmt_utype->bind_param($current_data_types_utype, ...$current_data_params_utype);
    else $stmt_utype->bind_param('ii', $items_per_page_utype, $offset_utype);
    $stmt_utype->execute();
    $result_utype = $stmt_utype->get_result();
    $utility_types_list = ($result_utype && $result_utype->num_rows > 0) ? $result_utype->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_utype->close();
} else { error_log("SQL Prepare Error fetching utility types: " . $mysqli->error); }

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-droplet-half"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة أنواع المرافق (<?php echo $total_utility_types; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#utilityTypeModal" onclick="prepareUtilityTypeModal('add_utility_type')">
                    <i class="bi bi-plus-circle"></i> إضافة نوع مرفق جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('utility_types/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                    <input type="text" name="search" class="form-control form-control-sm" placeholder="ابحث باسم النوع أو وحدة القياس..." value="<?php echo esc_attr($search_term_utype); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($utility_types_list) && !empty($search_term_utype)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term_utype); ?>".</div>
            <?php elseif (empty($utility_types_list)): ?>
                <div class="alert alert-info text-center">لا توجد أنواع مرافق مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#utilityTypeModal" onclick="prepareUtilityTypeModal('add_utility_type')">إضافة نوع جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>اسم النوع</th>
                            <th>وحدة القياس</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_utype = ($current_page_utype - 1) * $items_per_page_utype + 1; ?>
                        <?php foreach ($utility_types_list as $utype_item): ?>
                        <tr>
                            <td><?php echo $row_num_utype++; ?></td>
                            <td><?php echo esc_html($utype_item['name']); ?></td>
                            <td><?php echo esc_html($utype_item['unit_of_measure']); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareUtilityTypeModal('edit_utility_type', <?php echo htmlspecialchars(json_encode($utype_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#utilityTypeModal"
                                        title="تعديل نوع المرفق">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-utility-type-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $utype_item['id']; ?>"
                                        data-name="<?php echo esc_attr($utype_item['name']); ?>"
                                        data-delete-url="<?php echo base_url('utility_types/actions.php?action=delete_utility_type&id=' . $utype_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف نوع المرفق">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_utype > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_utype = [];
            if (!empty($search_term_utype)) $pagination_params_utype['search'] = $search_term_utype;
            echo generate_pagination_links($current_page_utype, $total_pages_utype, 'utility_types/index.php', $pagination_params_utype);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/utility_type_modal.php'; // Make sure this modal exists
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
function globalHandleSweetAlertSessionMessage() {
    <?php
    if (isset($_SESSION['flash_message']) && isset($_SESSION['flash_message']['message']) && isset($_SESSION['flash_message']['type'])) {
        $message = $_SESSION['flash_message']['message'];
        $type = $_SESSION['flash_message']['type'];
        // Convert Bootstrap types to SweetAlert types
        $swal_icon = 'info'; // default
        if ($type === 'success') $swal_icon = 'success';
        else if ($type === 'danger') $swal_icon = 'error';
        else if ($type === 'warning') $swal_icon = 'warning';

        echo "Swal.fire({ title: '" . addslashes(ucfirst($swal_icon)) . "!', text: '" . addslashes($message) . "', icon: '" . $swal_icon . "', confirmButtonText: 'حسنًا' });";
        unset($_SESSION['flash_message']);
    }
    ?>
}
document.addEventListener('DOMContentLoaded', function() {
    globalHandleSweetAlertSessionMessage();
});

function prepareUtilityTypeModal(action, utypeData = null) {
    const utypeModal = document.getElementById('utilityTypeModal');
    const modalTitle = utypeModal.querySelector('.modal-title');
    const utypeForm = utypeModal.querySelector('form'); // Adjusted selector
    const utypeIdInput = utypeModal.querySelector('input[name="utility_type_id"]'); // Adjusted selector
    const actionInput = utypeModal.querySelector('input[name="action"]'); // Adjusted selector
    const submitButtonText = utypeModal.querySelector('button[type="submit"] span'); // Adjusted selector

    utypeForm.reset();
    if(utypeIdInput) utypeIdInput.value = '';
    actionInput.value = action;

    if (action === 'add_utility_type') {
        modalTitle.textContent = 'إضافة نوع مرفق جديد';
        if(submitButtonText) submitButtonText.textContent = 'إضافة النوع';
    } else if (action === 'edit_utility_type' && utypeData) {
        modalTitle.textContent = 'تعديل نوع المرفق: ' + utypeData.name;
        if(submitButtonText) submitButtonText.textContent = 'حفظ التعديلات';
        if(utypeIdInput) utypeIdInput.value = utypeData.id;
        
        let nameInput = utypeModal.querySelector('input[name="utility_type_name_modal"]'); // Ensure this ID/name matches the modal
        let unitMeasureInput = utypeModal.querySelector('input[name="unit_of_measure_modal"]'); // Ensure this ID/name matches the modal
        
        if(nameInput) nameInput.value = utypeData.name || '';
        if(unitMeasureInput) unitMeasureInput.value = utypeData.unit_of_measure || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalUType = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalUType) {
        confirmDeleteModalUType.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-utility-type-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalUType.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف نوع المرفق "' + itemName + '"؟';
                
                var additionalInfo = confirmDeleteModalUType.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: لا يمكن حذف نوع المرفق إذا كان مستخدماً في أي قراءات عدادات.';

                var confirmDeleteButton = confirmDeleteModalUType.querySelector('#confirmDeleteButton');
                 if(confirmDeleteButton) {
                    var newConfirmDeleteButtonUT = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonUT, confirmDeleteButton);
                    
                    newConfirmDeleteButtonUT.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonUT.removeAttribute('href'); // Remove href if using JS for action
                    
                    newConfirmDeleteButtonUT.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete; // For GET based delete
                        }
                    });
                }
            }
        });
    }

    const utypeFormElement = document.querySelector('#utilityTypeModal form'); // Adjusted selector
    if(utypeFormElement) {
        utypeFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(utypeFormElement);
            const actionUrl = '<?php echo base_url('utility_types/actions.php'); ?>';

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var utypeModalInstance = bootstrap.Modal.getInstance(document.getElementById('utilityTypeModal'));
                    if(utypeModalInstance) utypeModalInstance.hide();
                     Swal.fire({ title: 'نجاح!', text: data.message, icon: 'success', confirmButtonText: 'حسنًا' })
                     .then(() => window.location.reload());
                } else {
                     Swal.fire({ title: 'خطأ!', text: data.message, icon: 'error', confirmButtonText: 'حسنًا' });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({ title: 'خطأ!', text: 'حدث خطأ غير متوقع.', icon: 'error', confirmButtonText: 'حسنًا' });
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./units/unit_actions.php =====
<?php
// units/unit_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';

header('Content-Type: application/json'); // استجابة AJAX

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id = get_current_user_id();
$property_id_for_redirect = null; // لعمليات إعادة التوجيه إذا لزم الأمر (عادة لا تستخدم مع AJAX الصريح)

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF). يرجى المحاولة مرة أخرى.'];
        echo json_encode($response);
        exit;
    }

    // --- Common Unit Fields ---
    $unit_id = isset($_POST['unit_id']) && !empty($_POST['unit_id']) ? filter_var($_POST['unit_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $property_id = isset($_POST['property_id_for_unit']) && filter_var($_POST['property_id_for_unit'], FILTER_VALIDATE_INT) ? (int)$_POST['property_id_for_unit'] : null;
    
    if($property_id) $property_id_for_redirect = $property_id;

    $unit_number = isset($_POST['unit_number']) ? sanitize_input($_POST['unit_number']) : null;
    $unit_type_id = isset($_POST['unit_type_id']) && $_POST['unit_type_id'] !== '' ? filter_var($_POST['unit_type_id'], FILTER_VALIDATE_INT) : null; // الحقل الجديد
    $unit_status = isset($_POST['unit_status']) ? sanitize_input($_POST['unit_status']) : 'Vacant';
    $floor_number_input = isset($_POST['floor_number']) ? trim($_POST['floor_number']) : null;
    $floor_number = ($floor_number_input !== '' && filter_var($floor_number_input, FILTER_VALIDATE_INT) !== false) ? (int)$floor_number_input : null;
    
    $size_sqm_input = isset($_POST['size_sqm']) ? trim($_POST['size_sqm']) : null;
    $size_sqm = ($size_sqm_input !== '' && filter_var($size_sqm_input, FILTER_VALIDATE_FLOAT, ['flags' => FILTER_FLAG_ALLOW_FRACTION]) !== false && (float)$size_sqm_input >= 0) ? (float)$size_sqm_input : null;
    
    $bedrooms_input = isset($_POST['bedrooms']) ? trim($_POST['bedrooms']) : null;
    $bedrooms = ($bedrooms_input !== '' && filter_var($bedrooms_input, FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]]) !== false) ? (int)$bedrooms_input : null;

    $bathrooms_input = isset($_POST['bathrooms']) ? trim($_POST['bathrooms']) : null;
    $bathrooms = ($bathrooms_input !== '' && filter_var($bathrooms_input, FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]]) !== false) ? (int)$bathrooms_input : null;

    $base_rent_price_input = isset($_POST['base_rent_price']) ? trim($_POST['base_rent_price']) : null;
    $base_rent_price = ($base_rent_price_input !== '' && filter_var($base_rent_price_input, FILTER_VALIDATE_FLOAT, ['flags' => FILTER_FLAG_ALLOW_FRACTION]) !== false && (float)$base_rent_price_input >= 0) ? (float)$base_rent_price_input : null;
    
    $unit_features = isset($_POST['unit_features']) ? sanitize_input($_POST['unit_features']) : null;
    $unit_notes = isset($_POST['unit_notes']) ? sanitize_input($_POST['unit_notes']) : null;

    // --- Basic Validations ---
    if ($property_id === null || empty($unit_number) || empty($unit_status)) {
        $response = ['success' => false, 'message' => 'الحقول المطلوبة (معرف العقار، رقم الوحدة، حالة الوحدة) يجب ملؤها.'];
        echo json_encode($response);
        exit;
    }

    $mysqli->begin_transaction();
    try {
        if ($action === 'add_unit') {
            $stmt_check_unit = $mysqli->prepare("SELECT id FROM units WHERE property_id = ? AND unit_number = ?");
            if(!$stmt_check_unit) throw new Exception("خطأ في تجهيز استعلام التحقق: " . $mysqli->error);
            $stmt_check_unit->bind_param("is", $property_id, $unit_number);
            $stmt_check_unit->execute();
            $stmt_check_unit->store_result();
            if ($stmt_check_unit->num_rows > 0) {
                throw new Exception("رقم/اسم الوحدة '" . esc_html($unit_number) . "' مستخدم بالفعل في هذا العقار.");
            }
            $stmt_check_unit->close();

            $sql = "INSERT INTO units (property_id, unit_number, unit_type_id, status, floor_number, size_sqm, 
                                      bedrooms, bathrooms, base_rent_price, features, notes, created_by_id) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception("خطأ في تجهيز استعلام إضافة الوحدة: " . $mysqli->error);
            
            // i s i s (property_id, unit_number, unit_type_id, status)
            // i d (floor_number, size_sqm)
            // i i d (bedrooms, bathrooms, base_rent_price)
            // s s i (features, notes, created_by_id)
            // isisid iidd ssi
            $stmt->bind_param("isisi diiddssi",  // تم تعديل النوع ليشمل unit_type_id كـ integer
                $property_id, $unit_number, $unit_type_id, $unit_status, $floor_number, $size_sqm,
                $bedrooms, $bathrooms, $base_rent_price, $unit_features, $unit_notes, $current_user_id
            );
            if (!$stmt->execute()) throw new Exception("خطأ في إضافة الوحدة: " . $stmt->error);
            $stmt->close();
            
            $response = ['success' => true, 'message' => 'تمت إضافة الوحدة بنجاح!'];

        } elseif ($action === 'edit_unit') {
            if ($unit_id === null) throw new Exception("معرف الوحدة مفقود للتعديل.");

            $stmt_check_edit_unit = $mysqli->prepare("SELECT id FROM units WHERE property_id = ? AND unit_number = ? AND id != ?");
            if(!$stmt_check_edit_unit) throw new Exception("خطأ في تجهيز استعلام التحقق (تعديل): " . $mysqli->error);
            $stmt_check_edit_unit->bind_param("isi", $property_id, $unit_number, $unit_id);
            $stmt_check_edit_unit->execute();
            $stmt_check_edit_unit->store_result();
            if ($stmt_check_edit_unit->num_rows > 0) {
                throw new Exception("رقم/اسم الوحدة '" . esc_html($unit_number) . "' مستخدم بالفعل لوحدة أخرى في هذا العقار.");
            }
            $stmt_check_edit_unit->close();

            $sql = "UPDATE units SET 
                        property_id = ?, unit_number = ?, unit_type_id = ?, status = ?, floor_number = ?, size_sqm = ?,
                        bedrooms = ?, bathrooms = ?, base_rent_price = ?, features = ?, notes = ?
                    WHERE id = ?";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception("خطأ في تجهيز استعلام تعديل الوحدة: " . $mysqli->error);

            // isisid iidd ssi
            $stmt->bind_param("isisi diiddssi", // تم تعديل النوع ليشمل unit_type_id
                $property_id, $unit_number, $unit_type_id, $unit_status, $floor_number, $size_sqm,
                $bedrooms, $bathrooms, $base_rent_price, $unit_features, $unit_notes, $unit_id
            );
            if (!$stmt->execute()) throw new Exception("خطأ في تعديل بيانات الوحدة: " . $stmt->error);
            $stmt->close();
            $response = ['success' => true, 'message' => 'تم تعديل بيانات الوحدة بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف.");
        }
        $mysqli->commit();

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Unit Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_unit') {
    // هذا الجزء للطلبات من نوع GET، عادةً بعد تأكيد من المستخدم
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('properties/index.php')); // توجيه عام
    }
    
    $property_id_for_redirect_get = isset($_GET['property_id']) ? (int)$_GET['property_id'] : null;
    $redirect_url_on_get = $property_id_for_redirect_get ? base_url('units/index.php?property_id=' . $property_id_for_redirect_get) : base_url('properties/index.php');

    $unit_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($unit_id_to_delete > 0) {
        $mysqli->begin_transaction(); // بدء معاملة للحذف
        try {
            $check_leases_sql = "SELECT COUNT(*) as count FROM leases WHERE unit_id = ?"; //  AND status = 'Active' -- قد ترغب في التحقق من العقود النشطة فقط
            $stmt_check_leases = $mysqli->prepare($check_leases_sql);
            if(!$stmt_check_leases) throw new Exception("خطأ في تجهيز فحص عقود الإيجار: " . $mysqli->error);
            
            $stmt_check_leases->bind_param("i", $unit_id_to_delete);
            $stmt_check_leases->execute();
            $leases_count_res = $stmt_check_leases->get_result()->fetch_assoc();
            $leases_count = $leases_count_res ? $leases_count_res['count'] : 0;
            $stmt_check_leases->close();

            if ($leases_count > 0) {
                throw new Exception("لا يمكن حذف هذه الوحدة لوجود (" . $leases_count . ") عقد/عقود إيجار مرتبطة بها. يرجى إنهاء/إلغاء العقود أولاً أو تغيير الوحدة المرتبطة بها.");
            }
            
            // ON DELETE CASCADE for utility_readings.unit_id will handle utility readings.
            $sql_delete = "DELETE FROM units WHERE id = ?";
            $stmt_delete = $mysqli->prepare($sql_delete);
            if (!$stmt_delete) throw new Exception("خطأ في تجهيز استعلام حذف الوحدة: " . $mysqli->error);
            
            $stmt_delete->bind_param("i", $unit_id_to_delete);
            if (!$stmt_delete->execute()) throw new Exception("خطأ في حذف الوحدة: " . $stmt_delete->error);
            $stmt_delete->close();

            $mysqli->commit();
            set_message("تم حذف الوحدة بنجاح!", "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Unit Delete Action Error: " . $e->getMessage());
        }
    } else {
        set_message("معرف الوحدة غير صحيح للحذف.", "danger");
    }
    redirect($redirect_url_on_get);
}

// إذا لم يكن الطلب POST أو GET للحذف بالشكل المتوقع
if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_unit')) {
     set_message("طلب غير صالح أو طريقة وصول غير مدعومة.", "danger");
     redirect(base_url('properties/index.php')); // توجيه عام
}
?>
===== ./units/index.php =====
<?php
$page_title = "إدارة وحدات العقار"; // Default title
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';

// Get property_id from URL
$property_id_for_page = isset($_GET['property_id']) ? (int)$_GET['property_id'] : 0;

if ($property_id_for_page <= 0) {
    set_message("معرف العقار غير صحيح أو مفقود لعرض الوحدات.", "danger");
    redirect(base_url('properties/index.php'));
}

// Fetch parent property data
$stmt_property = $mysqli->prepare("SELECT id, name, property_code FROM properties WHERE id = ?");
$property_data_for_page = null; // Initialize
if ($stmt_property) {
    $stmt_property->bind_param("i", $property_id_for_page);
    $stmt_property->execute();
    $result_property = $stmt_property->get_result();
    if ($result_property->num_rows > 0) {
        $property_data_for_page = $result_property->fetch_assoc();
        // Set page title to include property name
        $page_title = "وحدات العقار: " . esc_html($property_data_for_page['name']) . " (" . esc_html($property_data_for_page['property_code']) . ")";
    } else {
        set_message("العقار المحدد غير موجود.", "warning");
        redirect(base_url('properties/index.php'));
    }
    $stmt_property->close();
} else {
    error_log("Units Index: Failed to prepare property statement: " . $mysqli->error);
    set_message("خطأ في جلب بيانات العقار.", "danger");
    redirect(base_url('properties/index.php'));
}

// Include header and navigation AFTER fetching property data and setting $page_title
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// Pagination variables for units
$current_page_unit = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_unit = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_unit = ($current_page_unit - 1) * $items_per_page_unit;

// Filtering for units
$filter_unit_status_page = isset($_GET['status']) ? sanitize_input($_GET['status']) : '';
$filter_unit_type_id_page = isset($_GET['unit_type_id']) && filter_var($_GET['unit_type_id'], FILTER_VALIDATE_INT) ? (int)$_GET['unit_type_id'] : '';


// Define unit statuses array directly for this page's filter dropdown
$unit_statuses_for_page_filter_options = [
    '' => '-- الكل --', // Option for "All"
    'Vacant' => 'شاغرة',
    'Occupied' => 'مشغولة',
    'Under Maintenance' => 'تحت الصيانة',
    'Reserved' => 'محجوزة'
];
// This array is used for displaying status in the table
$unit_statuses_display_for_table = [
    'Vacant' => 'شاغرة', 'Occupied' => 'مشغولة', 'Under Maintenance' => 'تحت الصيانة', 'Reserved' => 'محجوزة'
];

// Fetch unit types for filter
$unit_types_filter_list_page = [];
$utypes_query_filter_page = "SELECT id, display_name_ar FROM unit_types ORDER BY display_name_ar ASC";
if($utypes_result_filter_page = $mysqli->query($utypes_query_filter_page)){
    while($utype_row_filter_page = $utypes_result_filter_page->fetch_assoc()){
        $unit_types_filter_list_page[] = $utype_row_filter_page;
    }
    $utypes_result_filter_page->free();
}


$where_clauses_unit_page = ["u.property_id = ?"];
$params_for_count_unit_page = [$property_id_for_page]; $types_for_count_unit_page = "i";
$params_for_data_unit_page = [$property_id_for_page];  $types_for_data_unit_page = "i";

if (!empty($filter_unit_status_page)) {
    $where_clauses_unit_page[] = "u.status = ?";
    $params_for_count_unit_page[] = $filter_unit_status_page; $types_for_count_unit_page .= "s";
    $params_for_data_unit_page[] = $filter_unit_status_page;  $types_for_data_unit_page .= "s";
}
if (!empty($filter_unit_type_id_page)) {
    $where_clauses_unit_page[] = "u.unit_type_id = ?";
    $params_for_count_unit_page[] = $filter_unit_type_id_page; $types_for_count_unit_page .= "i";
    $params_for_data_unit_page[] = $filter_unit_type_id_page;  $types_for_data_unit_page .= "i";
}

$where_sql_unit_page = " WHERE " . implode(" AND ", $where_clauses_unit_page);

// Total units for the current property with filters
$total_sql_unit = "SELECT COUNT(u.id) as total FROM units u" . $where_sql_unit_page;
$stmt_total_unit = $mysqli->prepare($total_sql_unit);
$total_units_for_property_page = 0; 
if ($stmt_total_unit) {
    // Only bind if there are parameters beyond the initial property_id
    if (count($params_for_count_unit_page) > 0 && !empty($types_for_count_unit_page)) {
        $stmt_total_unit->bind_param($types_for_count_unit_page, ...$params_for_count_unit_page);
    }
    $stmt_total_unit->execute();
    $total_result_unit = $stmt_total_unit->get_result();
    $total_units_for_property_page = ($total_result_unit && $total_result_unit->num_rows > 0) ? $total_result_unit->fetch_assoc()['total'] : 0;
    $stmt_total_unit->close();
} else {
    error_log("SQL Prepare Error counting units for property (index page): " . $mysqli->error);
}
$total_pages_unit = ceil($total_units_for_property_page / $items_per_page_unit);

// Fetch units for the current page
$sql_units_page = "SELECT u.id, u.unit_number, u.floor_number, u.size_sqm, u.bedrooms, u.bathrooms, u.status, 
                          u.base_rent_price, u.features, u.notes, u.unit_type_id, 
                          ut.display_name_ar as unit_type_name 
                   FROM units u
                   LEFT JOIN unit_types ut ON u.unit_type_id = ut.id"
                 . $where_sql_unit_page . " ORDER BY u.unit_number ASC LIMIT ? OFFSET ?";

$current_data_params_unit_page = $params_for_data_unit_page;
$current_data_params_unit_page[] = $items_per_page_unit;
$current_data_params_unit_page[] = $offset_unit;
$current_data_types_unit_page = $types_for_data_unit_page . 'ii';

$units_list_on_page = [];
$stmt_units_page = $mysqli->prepare($sql_units_page);
if ($stmt_units_page) {
    // Only bind if there are parameters to bind
    if (count($current_data_params_unit_page) > 0 && !empty($current_data_types_unit_page)) {
       $stmt_units_page->bind_param($current_data_types_unit_page, ...$current_data_params_unit_page);
    }
    $stmt_units_page->execute();
    $result_units_page = $stmt_units_page->get_result();
    $units_list_on_page = ($result_units_page && $result_units_page->num_rows > 0) ? $result_units_page->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_units_page->close();
} else {
    error_log("SQL Prepare Error fetching units for property (index page): " . $mysqli->error);
}

$csrf_token = generate_csrf_token(); 
?>

<div class="container-fluid">
    <div class="content-header">
        <div class="d-flex justify-content-between align-items-center">
            <h1><i class="bi bi-grid-3x3-gap-fill"></i> <?php echo esc_html($page_title); ?></h1>
            <a href="<?php echo base_url('properties/index.php'); ?>" class="btn btn-outline-light btn-sm"><i class="bi bi-arrow-left-circle"></i> العودة لقائمة العقارات</a>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
             <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة الوحدات (<?php echo $total_units_for_property_page; ?> وحدة)</h5>
                <button type="button" class="btn btn-success btn-sm" 
                        data-bs-toggle="modal" data-bs-target="#unitModal" 
                        onclick="prepareUnitModal('add_unit', null, '<?php echo $property_id_for_page; ?>', '<?php echo esc_js($property_data_for_page['name'] . ' (' . $property_data_for_page['property_code'] . ')'); ?>')">
                    <i class="bi bi-plus-circle"></i> إضافة وحدة جديدة
                </button>
            </div>
            <hr class="my-2">
             <form method="GET" action="<?php echo base_url('units/index.php'); ?>" class="row gx-2 gy-2 align-items-end">
                <input type="hidden" name="property_id" value="<?php echo $property_id_for_page; ?>">
                <div class="col-md-4">
                    <label for="filter_unit_type_id_page_filter" class="form-label form-label-sm">فلترة بنوع الوحدة</label>
                    <select id="filter_unit_type_id_page_filter" name="unit_type_id" class="form-select form-select-sm">
                        <option value="">-- الكل --</option>
                        <?php foreach($unit_types_filter_list_page as $utype_filter): ?>
                            <option value="<?php echo $utype_filter['id']; ?>" <?php echo ($filter_unit_type_id_page == $utype_filter['id']) ? 'selected' : ''; ?>>
                                <?php echo esc_html($utype_filter['display_name_ar']); ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="filter_unit_status_page_filter" class="form-label form-label-sm">الحالة</label>
                    <select id="filter_unit_status_page_filter" name="status" class="form-select form-select-sm">
                        <?php foreach ($unit_statuses_for_page_filter_options as $key => $value): ?>
                            <option value="<?php echo $key; ?>" <?php echo ($filter_unit_status_page === (string)$key && $filter_unit_status_page !== '') ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i> فلترة</button>
                </div>
                <div class="col-md-2">
                     <a href="<?php echo base_url('units/index.php?property_id=' . $property_id_for_page); ?>" class="btn btn-outline-secondary btn-sm w-100"><i class="bi bi-eraser-fill"></i> مسح</a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($units_list_on_page) && (!empty($filter_unit_status_page) || !empty($filter_unit_type_id_page))): ?>
                <div class="alert alert-warning text-center">لا توجد وحدات تطابق معايير الفلترة.</div>
            <?php elseif (empty($units_list_on_page)): ?>
                 <div class="alert alert-info text-center">لا توجد وحدات مضافة لهذا العقار بعد. يمكنك 
                    <a href="#" class="add-unit-btn" 
                       data-bs-toggle="modal" data-bs-target="#unitModal" 
                       onclick="prepareUnitModal('add_unit', null, '<?php echo $property_id_for_page; ?>', '<?php echo esc_js($property_data_for_page['name'] . ' (' . $property_data_for_page['property_code'] . ')'); ?>')">إضافة وحدة جديدة</a>.
                </div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>رقم/اسم الوحدة</th>
                            <th>النوع</th>
                            <th>الطابق</th>
                            <th>المساحة (م²)</th>
                            <th>غرف نوم</th>
                            <th>دورات مياه</th>
                            <th>الإيجار المقترح</th>
                            <th>الحالة</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_unit_page = ($current_page_unit - 1) * $items_per_page_unit + 1; ?>
                        <?php foreach ($units_list_on_page as $unit_item_page): ?>
                        <tr>
                            <td><?php echo $row_num_unit_page++; ?></td>
                            <td><?php echo esc_html($unit_item_page['unit_number']); ?></td>
                            <td><?php echo esc_html($unit_item_page['unit_type_name'] ?: '-'); // عرض اسم نوع الوحدة ?></td>
                            <td><?php echo ($unit_item_page['floor_number'] !== null) ? esc_html($unit_item_page['floor_number']) : '-'; ?></td>
                            <td><?php echo ($unit_item_page['size_sqm'] !== null) ? number_format($unit_item_page['size_sqm'], 2) : '-'; ?></td>
                            <td><?php echo ($unit_item_page['bedrooms'] !== null) ? esc_html($unit_item_page['bedrooms']) : '-'; ?></td>
                            <td><?php echo ($unit_item_page['bathrooms'] !== null) ? esc_html($unit_item_page['bathrooms']) : '-'; ?></td>
                            <td><?php echo ($unit_item_page['base_rent_price'] !== null) ? number_format($unit_item_page['base_rent_price'], 2) . ' ريال' : '-'; ?></td>
                            <td>
                                 <span class="badge bg-<?php echo ($unit_item_page['status'] === 'Vacant') ? 'success' : (($unit_item_page['status'] === 'Occupied') ? 'danger' : 'warning'); ?>">
                                    <?php echo esc_html($unit_statuses_display_for_table[$unit_item_page['status']] ?? $unit_item_page['status']); ?>
                                </span>
                            </td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareUnitModal('edit_unit', <?php echo htmlspecialchars(json_encode($unit_item_page), ENT_QUOTES, 'UTF-8'); ?>, '<?php echo $property_id_for_page; ?>', '<?php echo esc_js($property_data_for_page['name'] . ' (' . $property_data_for_page['property_code'] . ')'); ?>')"
                                        data-bs-toggle="modal" data-bs-target="#unitModal"
                                        title="تعديل الوحدة">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-unit-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $unit_item_page['id']; ?>"
                                        data-name="الوحدة <?php echo esc_attr($unit_item_page['unit_number']); ?> في العقار <?php echo esc_attr($property_data_for_page['name']); ?>"
                                        data-delete-url="<?php echo base_url('units/unit_actions.php?action=delete_unit&id=' . $unit_item_page['id'] . '&property_id=' . $property_id_for_page . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف الوحدة">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <a href="<?php echo base_url('leases/index.php?unit_id=' . $unit_item_page['id']); ?>" class="btn btn-sm btn-outline-info" title="عرض عقود الإيجار لهذه الوحدة">
                                    <i class="bi bi-file-earmark-text"></i>
                                </a>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_unit > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_unit_page = ['property_id' => $property_id_for_page];
            if (!empty($filter_unit_status_page)) $pagination_params_unit_page['status'] = $filter_unit_status_page;
            if (!empty($filter_unit_type_id_page)) $pagination_params_unit_page['unit_type_id'] = $filter_unit_type_id_page;
            echo generate_pagination_links($current_page_unit, $total_pages_unit, 'units/index.php', $pagination_params_unit_page);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/unit_modal.php';
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareUnitModal(action, unitData = null, propertyId, propertyName) {
    const unitModal = document.getElementById('unitModal');
    const modalTitle = unitModal.querySelector('#unitModalLabel_page');
    const unitForm = unitModal.querySelector('#unitFormModal');
    const unitIdInput = unitModal.querySelector('#unit_id_modal_units_page');
    const propertyIdInputModal = unitModal.querySelector('#property_id_for_unit_modal_page');
    const propertyNameDisplayModal = unitModal.querySelector('#property_name_for_unit_modal_display_page');
    const actionInput = unitModal.querySelector('#unit_form_action_modal_page');
    const submitButtonText = unitModal.querySelector('#unitSubmitButtonTextModalPage');
    const unitStatusWarning = document.getElementById('unit_status_warning_modal'); // افترض وجوده في modal.php الرئيسي

    unitForm.reset();
    unitIdInput.value = '';
    actionInput.value = action;
    
    if(propertyIdInputModal) propertyIdInputModal.value = propertyId;
    if(propertyNameDisplayModal) propertyNameDisplayModal.textContent = propertyName || 'العقار غير محدد';
    if(unitStatusWarning) unitStatusWarning.classList.add('d-none');


    const formUrl = '<?php echo base_url('units/unit_actions.php'); ?>';
    // unitForm.action = formUrl; // This line is not strictly needed if using AJAX/fetch for submission

    if (action === 'add_unit') {
        modalTitle.textContent = 'إضافة وحدة جديدة إلى: ' + propertyName;
        submitButtonText.textContent = 'إضافة الوحدة';
    } else if (action === 'edit_unit' && unitData) {
        modalTitle.textContent = 'تعديل بيانات الوحدة في: ' + propertyName;
        submitButtonText.textContent = 'حفظ التعديلات';
        unitIdInput.value = unitData.id;
        
        if(document.getElementById('unit_number_modal_page')) document.getElementById('unit_number_modal_page').value = unitData.unit_number || '';
        if(document.getElementById('unit_type_id_modal_page')) document.getElementById('unit_type_id_modal_page').value = unitData.unit_type_id || '';
        if(document.getElementById('unit_status_modal_page')) document.getElementById('unit_status_modal_page').value = unitData.status || 'Vacant';
        if(document.getElementById('floor_number_modal_page')) document.getElementById('floor_number_modal_page').value = unitData.floor_number === null ? '' : unitData.floor_number;
        if(document.getElementById('size_sqm_modal_page')) document.getElementById('size_sqm_modal_page').value = unitData.size_sqm === null ? '' : unitData.size_sqm;
        if(document.getElementById('bedrooms_modal_page')) document.getElementById('bedrooms_modal_page').value = unitData.bedrooms === null ? '' : unitData.bedrooms;
        if(document.getElementById('bathrooms_modal_page')) document.getElementById('bathrooms_modal_page').value = unitData.bathrooms === null ? '' : unitData.bathrooms;
        if(document.getElementById('base_rent_price_modal_page')) document.getElementById('base_rent_price_modal_page').value = unitData.base_rent_price === null ? '' : unitData.base_rent_price;
        if(document.getElementById('unit_features_modal_page')) document.getElementById('unit_features_modal_page').value = unitData.features || '';
        if(document.getElementById('unit_notes_modal_page')) document.getElementById('unit_notes_modal_page').value = unitData.notes || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalUnitPage = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalUnitPage) {
        confirmDeleteModalUnitPage.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-unit-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalUnitPage.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف ' + itemName + '؟';
                
                var additionalInfo = confirmDeleteModalUnitPage.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: حذف الوحدة لا يمكن التراجع عنه وقد يؤثر على عقود الإيجار المرتبطة (إذا لم يتم التعامل معها).';

                var confirmDeleteButton = confirmDeleteModalUnitPage.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButton = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButton, confirmDeleteButton);
                    
                    newConfirmDeleteButton.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButton.removeAttribute('href');
                    
                    newConfirmDeleteButton.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }
    
    const unitFormElement = document.getElementById('unitFormModal');
    if(unitFormElement) {
        unitFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(unitFormElement);
            // The action is already set on the form by prepareUnitModal
            const actionUrl = unitFormElement.getAttribute('action'); 

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var unitModalInstance = bootstrap.Modal.getInstance(document.getElementById('unitModal'));
                    if(unitModalInstance) unitModalInstance.hide();
                    // Reload page or update table dynamically
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); // Simple alert for now
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./dashboard.php =====
<?php
// dashboard.php
ini_set('display_errors', 1);
ini_set('log_errors', 1);
ini_set('error_log', __DIR__ . '/error.log');
error_reporting(E_ALL);

register_shutdown_function(function() {
    $error = error_get_last();
    if ($error && in_array($error['type'], [E_ERROR, E_PARSE, E_CORE_ERROR, E_COMPILE_ERROR])) {
        $msg = "[FATAL DASHBOARD] {$error['message']} in {$error['file']} on line {$error['line']}";
        error_log(date('[Y-m-d H:i:s] ') . $msg . "\n", 3, __DIR__ . '/error.log');
    }
});

$page_title = "لوحة القيادة";
require_once __DIR__ . '/db_connect.php';
require_once __DIR__ . '/includes/session_manager.php';
require_login();
require_once __DIR__ . '/includes/functions.php';
require_once __DIR__ . '/includes/header_resources.php';
require_once __DIR__ . '/includes/navigation.php';

// --- إعدادات الفترة الزمنية للتقارير ---
$selected_period = $_GET['period'] ?? 'current_month';
$date_filter_clause_invoices = "";
$date_filter_clause_payments = "";
$period_params = [];
$period_types = "";
$period_display_name = "";

switch ($selected_period) {
    case 'last_month':
        $start_date = date('Y-m-01', strtotime('first day of last month'));
        $end_date = date('Y-m-t', strtotime('last day of last month'));
        $period_display_name = "الشهر الماضي (" . format_date_custom($start_date, 'M Y') . ")";
        break;
    case 'current_year':
        $start_date = date('Y-01-01');
        $end_date = date('Y-12-31');
        $period_display_name = "السنة الحالية (" . date('Y') . ")";
        break;
    case 'all_time':
        $period_display_name = "كل الأوقات";
        break;
    case 'current_month':
    default:
        $selected_period = 'current_month';
        $start_date = date('Y-m-01');
        $end_date = date('Y-m-t');
        $period_display_name = "الشهر الحالي (" . format_date_custom($start_date, 'M Y') . ")";
        break;
}

if ($selected_period !== 'all_time') {
    $date_filter_clause_invoices = " AND i.invoice_date BETWEEN ? AND ? ";
    $date_filter_clause_payments = " AND p.payment_date BETWEEN ? AND ? ";
    $period_params = [$start_date, $end_date];
    $period_types = "ss";
}

// --- جلب البيانات للإحصائيات ---

// 1. عدد الملاك
$result_owners = $mysqli->query("SELECT COUNT(*) as total_owners FROM owners");
$total_owners = ($result_owners && $result_owners->num_rows > 0) ? $result_owners->fetch_assoc()['total_owners'] : 0;
if ($result_owners) $result_owners->free();

// 2. عدد العقارات
$result_properties = $mysqli->query("SELECT COUNT(*) as total_properties FROM properties");
$total_properties = ($result_properties && $result_properties->num_rows > 0) ? $result_properties->fetch_assoc()['total_properties'] : 0;
if ($result_properties) $result_properties->free();

// 3. عدد الوحدات
$result_units_total = $mysqli->query("SELECT COUNT(*) as total_units FROM units");
$total_units = ($result_units_total && $result_units_total->num_rows > 0) ? $result_units_total->fetch_assoc()['total_units'] : 0;
if ($result_units_total) $result_units_total->free();

$result_units_occupied = $mysqli->query("SELECT COUNT(*) as occupied_units FROM units WHERE status = 'Occupied'");
$occupied_units = ($result_units_occupied && $result_units_occupied->num_rows > 0) ? $result_units_occupied->fetch_assoc()['occupied_units'] : 0;
if ($result_units_occupied) $result_units_occupied->free();
$vacant_units_count = $total_units - $occupied_units;

// 4. عدد المستأجرين النشطين
$result_active_tenants = $mysqli->query("SELECT COUNT(DISTINCT t.id) as total_active_tenants FROM tenants t JOIN leases l ON t.id = l.tenant_id WHERE l.status = 'Active'");
$total_active_tenants = ($result_active_tenants && $result_active_tenants->num_rows > 0) ? $result_active_tenants->fetch_assoc()['total_active_tenants'] : 0;
if ($result_active_tenants) $result_active_tenants->free();

// 5. عدد عقود الإيجار النشطة
$result_active_leases = $mysqli->query("SELECT COUNT(*) as total_active_leases FROM leases WHERE status = 'Active'");
$total_active_leases = ($result_active_leases && $result_active_leases->num_rows > 0) ? $result_active_leases->fetch_assoc()['total_active_leases'] : 0;
if ($result_active_leases) $result_active_leases->free();

// 6. إجمالي الدخل المستلم (للفترة المحددة، بناءً على تاريخ الدفعة)
$sql_total_income = "SELECT SUM(p.amount_paid) as total_income 
                     FROM payments p 
                     WHERE 1=1";
if ($selected_period !== 'all_time') {
    $sql_total_income .= $date_filter_clause_payments;
}
$stmt_total_income = $mysqli->prepare($sql_total_income);
$total_income = 0;
if($stmt_total_income){
    if ($selected_period !== 'all_time') {
        $stmt_total_income->bind_param($period_types, ...$period_params);
    }
    $stmt_total_income->execute();
    $result_total_income = $stmt_total_income->get_result();
    $total_income_row = $result_total_income->fetch_assoc();
    $total_income = $total_income_row ? (float)$total_income_row['total_income'] : 0;
    $stmt_total_income->close();
} else { error_log("Dashboard: Failed to prepare total_income query: " . $mysqli->error); }


// 7. إجمالي المبالغ المستحقة للفواتير
$sql_total_due = "SELECT SUM(i.total_amount - i.paid_amount) as total_due
                  FROM invoices i
                  WHERE i.status IN ('Unpaid', 'Partially Paid', 'Overdue')";
if ($selected_period !== 'all_time') {
    $sql_total_due .= $date_filter_clause_invoices;
}
$stmt_total_due = $mysqli->prepare($sql_total_due);
$total_due_amount = 0;
if($stmt_total_due){
    if ($selected_period !== 'all_time') {
        $stmt_total_due->bind_param($period_types, ...$period_params);
    }
    $stmt_total_due->execute();
    $result_total_due = $stmt_total_due->get_result();
    $total_due_row = $result_total_due->fetch_assoc();
    $total_due_amount = $total_due_row ? (float)$total_due_row['total_due'] : 0;
    $stmt_total_due->close();
} else { error_log("Dashboard: Failed to prepare total_due_amount query: " . $mysqli->error); }


// 8. الوحدات الشاغرة
$vacant_units_sql = "SELECT u.id as unit_id_link, u.unit_number, u.base_rent_price, 
                            ut.display_name_ar as unit_type_name, 
                            p.name as property_name, p.property_code, p.address as property_address, p.id as property_id_link
                     FROM units u
                     JOIN properties p ON u.property_id = p.id
                     LEFT JOIN unit_types ut ON u.unit_type_id = ut.id
                     WHERE u.status = 'Vacant'
                     ORDER BY p.name, u.unit_number LIMIT 5";
$result_vacant_units = $mysqli->query($vacant_units_sql);
$vacant_units_list = [];
if ($result_vacant_units && $result_vacant_units->num_rows > 0) {
    $vacant_units_list = $result_vacant_units->fetch_all(MYSQLI_ASSOC);
    $result_vacant_units->free();
}

// بيانات للرسوم البيانية
$sql_chart_data = "SELECT 
                        COALESCE(SUM(i.total_amount), 0) as total_billed_period,
                        COALESCE(SUM(i.paid_amount), 0) as total_paid_period
                   FROM invoices i WHERE 1=1 ";
$params_chart_data = [];
$types_chart_data = "";
if ($selected_period !== 'all_time') {
    $sql_chart_data .= $date_filter_clause_invoices;
    $params_chart_data = $period_params;
    $types_chart_data = $period_types;
}

$stmt_chart_data = $mysqli->prepare($sql_chart_data);
$invoice_chart_data = ['total_billed_period' => 0, 'total_paid_period' => 0, 'total_pending_period' => 0];
if($stmt_chart_data){
    if(!empty($params_chart_data)) $stmt_chart_data->bind_param($types_chart_data, ...$params_chart_data);
    $stmt_chart_data->execute();
    $result_chart_data = $stmt_chart_data->get_result();
    if($result_chart_data && $result_chart_data->num_rows > 0){
        $fetched_chart_data = $result_chart_data->fetch_assoc();
        $invoice_chart_data['total_billed_period'] = (float)($fetched_chart_data['total_billed_period'] ?? 0);
        $invoice_chart_data['total_paid_period'] = (float)($fetched_chart_data['total_paid_period'] ?? 0);
    }
    $stmt_chart_data->close();
} else { error_log("Dashboard: Failed to prepare invoice_chart_data query: " . $mysqli->error); }

$invoice_chart_data['total_pending_period'] = max(0, $invoice_chart_data['total_billed_period'] - $invoice_chart_data['total_paid_period']);
$paid_percentage_chart = ($invoice_chart_data['total_billed_period'] > 0) ? round(($invoice_chart_data['total_paid_period'] / $invoice_chart_data['total_billed_period']) * 100) : 0;
$pending_percentage_chart = 100 - $paid_percentage_chart;

?>
<style>
    .stat-card { border-right: 5px solid var(--bs-primary); transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; }
    .stat-card:hover { transform: translateY(-5px); box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15)!important; }
    .stat-card .card-body { padding: 1.5rem; }
    .stat-card i { font-size: 2.8rem; opacity: 0.6; }
    .stat-card h5 { font-size: 0.95rem; font-weight: 600; color: #6c757d; margin-bottom: 0.25rem; }
    .stat-card .display-6 { font-weight: 700; color: var(--bs-primary-text-emphasis); }
    .chart-placeholder { height: 200px; background-color: #f8f9fa; display: flex; align-items: center; justify-content: center; border-radius: 0.25rem; text-align: center; color: #6c757d; border: 1px dashed #dee2e6;}
    .progress-bar-custom { height: 20px; font-size: 0.85rem; }
    .dashboard-filter .form-select, .dashboard-filter .btn { font-size: 0.875rem; }
</style>

<div class="container-fluid">
    <div class="content-header">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1><i class="bi bi-grid-1x2-fill"></i> <?php echo esc_html($page_title); ?></h1>
            <form method="GET" action="<?php echo base_url('dashboard.php'); ?>" class="d-flex dashboard-filter">
                <select name="period" class="form-select form-select-sm me-2" onchange="this.form.submit()">
                    <option value="current_month" <?php if ($selected_period == 'current_month') echo 'selected'; ?>>هذا الشهر</option>
                    <option value="last_month" <?php if ($selected_period == 'last_month') echo 'selected'; ?>>الشهر الماضي</option>
                    <option value="current_year" <?php if ($selected_period == 'current_year') echo 'selected'; ?>>هذه السنة</option>
                    <option value="all_time" <?php if ($selected_period == 'all_time') echo 'selected'; ?>>كل الأوقات</option>
                </select>
                <noscript><button type="submit" class="btn btn-sm btn-outline-primary">تطبيق</button></noscript>
            </form>
        </div>
    </div>

    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-md-6">
            <a href="<?php echo base_url('properties/index.php'); ?>" class="text-decoration-none">
            <div class="card shadow-sm stat-card border-primary h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h5>إجمالي العقارات</h5><p class="display-6 mb-0"><?php echo $total_properties; ?></p></div>
                    <i class="bi bi-buildings text-primary"></i>
                </div>
            </div>
            </a>
        </div>
        <div class="col-xl-3 col-md-6">
            <a href="<?php echo base_url('units/index.php'); ?>" class="text-decoration-none">
            <div class="card shadow-sm stat-card border-success h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h5>إجمالي الوحدات</h5><p class="display-6 mb-0"><?php echo $total_units; ?></p>
                        <small class="text-muted"><?php echo $occupied_units; ?> مشغولة / <?php echo $vacant_units_count; ?> شاغرة</small>
                    </div>
                    <i class="bi bi-door-open text-success"></i>
                </div>
            </div>
            </a>
        </div>
        <div class="col-xl-3 col-md-6">
            <a href="<?php echo base_url('leases/index.php?status=Active'); ?>" class="text-decoration-none">
            <div class="card shadow-sm stat-card border-info h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h5>العقود النشطة</h5><p class="display-6 mb-0"><?php echo $total_active_leases; ?></p></div>
                    <i class="bi bi-file-earmark-text text-info"></i>
                </div>
            </div>
            </a>
        </div>
        <div class="col-xl-3 col-md-6">
            <a href="<?php echo base_url('tenants/index.php'); ?>" class="text-decoration-none">
            <div class="card shadow-sm stat-card border-warning h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h5>المستأجرون النشطون</h5><p class="display-6 mb-0"><?php echo $total_active_tenants; ?></p></div>
                    <i class="bi bi-person-check text-warning"></i>
                </div>
            </div>
            </a>
        </div>
    </div>

    <div class="row g-4 mb-4">
        <div class="col-xl-4 col-md-6">
             <a href="<?php echo base_url('payments/index.php?status=Completed&period='.$selected_period); ?>" class="text-decoration-none">
            <div class="card shadow-sm stat-card border-danger h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h5>الدخل المستلم (<?php echo esc_html($period_display_name); ?>)</h5>
                        <p class="display-6 mb-0"><?php echo number_format($total_income, 2); ?> <small>ريال</small></p>
                    </div>
                    <i class="bi bi-cash-coin text-danger"></i>
                </div>
            </div>
            </a>
        </div>
        <div class="col-xl-4 col-md-6">
            <a href="<?php echo base_url('invoices/index.php?status_filter[]=Unpaid&status_filter[]=Partially Paid&status_filter[]=Overdue&period='.$selected_period); ?>" class="text-decoration-none">
            <div class="card shadow-sm stat-card border-secondary h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h5>المبالغ المستحقة (<?php echo esc_html($period_display_name); ?>)</h5>
                        <p class="display-6 mb-0"><?php echo number_format($total_due_amount, 2); ?> <small>ريال</small></p>
                    </div>
                    <i class="bi bi-hourglass-split text-secondary"></i>
                </div>
            </div>
            </a>
        </div>
         <div class="col-xl-4 col-md-6">
            <a href="<?php echo base_url('owners/index.php'); ?>" class="text-decoration-none">
            <div class="card shadow-sm stat-card border-dark h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h5>إجمالي الملاك</h5><p class="display-6 mb-0"><?php echo $total_owners; ?></p></div>
                    <i class="bi bi-person-rolodex text-dark"></i>
                </div>
            </div>
            </a>
        </div>
    </div>


    <div class="row g-4">
        <div class="col-lg-7">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0"><i class="bi bi-bar-chart-line-fill me-2"></i>نظرة عامة على الفواتير (<?php echo esc_html($period_display_name); ?>)</h5>
                </div>
                <div class="card-body">
                    <p class="mb-1">إجمالي الفواتير الصادرة: <strong class="text-primary"><?php echo number_format($invoice_chart_data['total_billed_period'], 2); ?> ريال</strong></p>
                    <div class="progress mb-2" style="height: 25px;">
                        <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" role="progressbar" style="width: <?php echo $paid_percentage_chart; ?>%" aria-valuenow="<?php echo $paid_percentage_chart; ?>" aria-valuemin="0" aria-valuemax="100" title="المدفوع: <?php echo $paid_percentage_chart; ?>%">
                           <?php if($paid_percentage_chart > 15) echo 'مدفوع: ' . number_format($invoice_chart_data['total_paid_period'], 0) . ' (' . $paid_percentage_chart . '%)'; ?>
                        </div>
                        <div class="progress-bar bg-warning text-dark progress-bar-striped progress-bar-animated" role="progressbar" style="width: <?php echo $pending_percentage_chart; ?>%" aria-valuenow="<?php echo $pending_percentage_chart; ?>" aria-valuemin="0" aria-valuemax="100" title="المتبقي: <?php echo $pending_percentage_chart; ?>%">
                           <?php if($pending_percentage_chart > 15) echo 'متبقي: ' . number_format($invoice_chart_data['total_pending_period'], 0) . ' (' . $pending_percentage_chart . '%)'; ?>
                        </div>
                    </div>
                     <div class="d-flex justify-content-between small mb-3">
                        <span>المدفوع: <strong class="text-success"><?php echo number_format($invoice_chart_data['total_paid_period'], 2); ?> ريال</strong></span>
                        <span>المتبقي: <strong class="text-danger"><?php echo number_format($invoice_chart_data['total_pending_period'], 2); ?> ريال</strong></span>
                    </div>
                    <div class="chart-placeholder mt-3" id="monthlyIncomeChartPlaceholder">
                        <canvas id="incomeExpenseChart"></canvas>
                        <small class="d-none" id="noChartDataMessage">لا توجد بيانات كافية لعرض الرسم البياني لهذه الفترة.</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-5">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0"><i class="bi bi-house-door me-2"></i>أحدث الوحدات الشاغرة (إجمالي: <?php echo $vacant_units_count; ?>)</h5>
                </div>
                <div class="card-body p-0">
                    <?php if (!empty($vacant_units_list)): ?>
                    <div class="table-responsive">
                        <table class="table table-hover table-sm mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>العقار</th>
                                    <th>الوحدة</th>
                                    <th>النوع</th>
                                    <th>الإيجار المقترح</th>
                                </tr>
                            </thead>
                            <tbody>
                                <?php foreach ($vacant_units_list as $unit): ?>
                                <tr>
                                    <td><a href="<?php echo base_url('properties/index.php?search=' . rawurlencode($unit['property_code'] ?? '')); ?>" title="<?php echo esc_attr($unit['property_address']); ?>"><?php echo esc_html($unit['property_name']); ?></a></td>
                                    <td><a href="<?php echo base_url('units/index.php?property_id=' . $unit['property_id_link'] . '&search_unit=' . rawurlencode($unit['unit_number'] ?? '')); ?>"><?php echo esc_html($unit['unit_number']); ?></a></td>
                                    <td><?php echo esc_html($unit['unit_type_name'] ?: '-'); ?></td>
                                    <td><?php echo $unit['base_rent_price'] ? number_format($unit['base_rent_price'], 2) . ' <small>ريال</small>' : '-'; ?></td>
                                </tr>
                                <?php endforeach; ?>
                            </tbody>
                        </table>
                    </div>
                    <?php if ($vacant_units_count > 5): ?>
                        <div class="card-footer text-center py-2">
                            <a href="<?php echo base_url('units/index.php?status=Vacant'); ?>">عرض جميع الوحدات الشاغرة (<?php echo $vacant_units_count; ?>)</a>
                        </div>
                    <?php endif; ?>
                    <?php else: ?>
                        <div class="alert alert-success m-3 text-center">لا توجد وحدات شاغرة حالياً.</div>
                    <?php endif; ?>
                </div>
            </div>
        </div>
    </div>

</div>
<script src="<?php echo base_url('assets/js/chart.min.js'); ?>"></script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const incomeDataForChart = <?php
        $income_chart_data_values_js = [];
        $income_chart_labels_js = [];
        for ($i = 5; $i >= 0; $i--) {
            $month_loop_start_js = date('Y-m-01', strtotime("-$i month"));
            $month_loop_end_js = date('Y-m-t', strtotime("-$i month"));
            $month_loop_label_js = format_date_custom($month_loop_start_js, 'M Y');
            $income_chart_labels_js[] = $month_loop_label_js;
            
            $sql_income_m_loop_js = "SELECT SUM(p.amount_paid) as total_income_month 
                                     FROM payments p 
                                     WHERE p.payment_date BETWEEN ? AND ?"; // تم إزالة شرط p.status
            $stmt_income_m_loop_js = $mysqli->prepare($sql_income_m_loop_js);
            if ($stmt_income_m_loop_js) {
                $stmt_income_m_loop_js->bind_param("ss", $month_loop_start_js, $month_loop_end_js);
                $stmt_income_m_loop_js->execute();
                $res_income_m_loop_js = $stmt_income_m_loop_js->get_result()->fetch_assoc();
                $income_chart_data_values_js[] = (float)($res_income_m_loop_js['total_income_month'] ?? 0);
                $stmt_income_m_loop_js->close();
            } else {
                 $income_chart_data_values_js[] = 0;
                 error_log("Dashboard Chart Data Error (JS block): Failed to prepare income query for month " . $month_loop_label_js . ": " . $mysqli->error);
            }
        }
        echo json_encode($income_chart_data_values_js);
    ?>;
    const monthLabelsForChart = <?php echo json_encode($income_chart_labels_js); ?>;

    var ctx = document.getElementById('incomeExpenseChart')?.getContext('2d');
    var noChartDataMsg = document.getElementById('noChartDataMessage');
    var chartCanvas = document.getElementById('incomeExpenseChart');

    if (ctx && incomeDataForChart.some(val => val > 0)) {
        if(noChartDataMsg) noChartDataMsg.classList.add('d-none');
        if(chartCanvas) chartCanvas.classList.remove('d-none');
        if(document.getElementById('monthlyIncomeChartPlaceholder')) document.getElementById('monthlyIncomeChartPlaceholder').classList.remove('d-flex');


        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: monthLabelsForChart,
                datasets: [{
                    label: 'الدخل المستلم شهريًا',
                    data: incomeDataForChart,
                    backgroundColor: 'rgba(40, 167, 69, 0.7)',
                    borderColor: 'rgba(40, 167, 69, 1)',
                    borderWidth: 1,
                    borderRadius: 5,
                    barPercentage: 0.7,
                    categoryPercentage: 0.8
                }]
            },
            options: { 
                responsive: true, maintainAspectRatio: false,
                scales: { y: { beginAtZero: true, ticks: { callback: function(value) { return value.toLocaleString('ar-SA', { style: 'currency', currency: 'SAR', minimumFractionDigits: 0, maximumFractionDigits: 0 }); } } }, x: { grid: { display: false } } },
                plugins: { legend: { position: 'top' }, tooltip: { callbacks: { label: function(context) { let label = context.dataset.label || ''; if (label) label += ': '; if (context.parsed.y !== null) { label += context.parsed.y.toLocaleString('ar-SA', { style: 'currency', currency: 'SAR' }); } return label; } } } }
            }
        });
    } else {
        if(noChartDataMsg) noChartDataMsg.classList.remove('d-none');
        if(chartCanvas) chartCanvas.classList.add('d-none');
        if(document.getElementById('monthlyIncomeChartPlaceholder')) document.getElementById('monthlyIncomeChartPlaceholder').classList.add('d-flex');
    }
});
</script>
<?php require_once __DIR__ . '/includes/footer_resources.php'; ?>
===== ./error.log =====
[2025-06-01 09:37:27] [FATAL] Uncaught mysqli_sql_exception: Access denied for user 'amrsam99_inventory_db'@'localhost' (using password: YES) in /opt/lampp/htdocs/pms/db_connect.php:8
Stack trace:
#0 /opt/lampp/htdocs/pms/db_connect.php(8): mysqli->__construct('localhost', 'amrsam99_invent...', Object(SensitiveParameterValue), 'amrsam99_invent...')
#1 /opt/lampp/htdocs/pms/dashboard.php(15): require_once('/opt/lampp/htdo...')
#2 {main}
  thrown in /opt/lampp/htdocs/pms/db_connect.php on line 8
[2025-06-01 09:38:07] [FATAL] Cannot redeclare set_message() (previously declared in /opt/lampp/htdocs/pms/includes/session_manager.php:154) in /opt/lampp/htdocs/pms/includes/functions.php on line 29
[2025-06-01 09:39:43] [FATAL] Cannot redeclare generate_csrf_token() (previously declared in /opt/lampp/htdocs/pms/includes/session_manager.php:23) in /opt/lampp/htdocs/pms/includes/functions.php on line 104
[2025-06-01 09:40:06] [FATAL] Cannot redeclare verify_csrf_token() (previously declared in /opt/lampp/htdocs/pms/includes/session_manager.php:29) in /opt/lampp/htdocs/pms/includes/functions.php on line 120
[01-Jun-2025 09:52:26 Asia/Riyadh] PHP Fatal error:  Uncaught mysqli_sql_exception: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'AND i.invoice_date BETWEEN ? AND ?' at line 1 in /opt/lampp/htdocs/pms/dashboard.php:54
Stack trace:
#0 /opt/lampp/htdocs/pms/dashboard.php(54): mysqli->prepare(' AND i.invoice_...')
#1 {main}
  thrown in /opt/lampp/htdocs/pms/dashboard.php on line 54
[2025-06-01 09:52:26] [FATAL DASHBOARD] Uncaught mysqli_sql_exception: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'AND i.invoice_date BETWEEN ? AND ?' at line 1 in /opt/lampp/htdocs/pms/dashboard.php:54
Stack trace:
#0 /opt/lampp/htdocs/pms/dashboard.php(54): mysqli->prepare(' AND i.invoice_...')
#1 {main}
  thrown in /opt/lampp/htdocs/pms/dashboard.php on line 54
[01-Jun-2025 09:54:50 Asia/Riyadh] PHP Fatal error:  Uncaught mysqli_sql_exception: Unknown column 'p.status' in 'where clause' in /opt/lampp/htdocs/pms/dashboard.php:101
Stack trace:
#0 /opt/lampp/htdocs/pms/dashboard.php(101): mysqli->prepare('SELECT SUM(p.am...')
#1 {main}
  thrown in /opt/lampp/htdocs/pms/dashboard.php on line 101
[2025-06-01 09:54:50] [FATAL DASHBOARD] Uncaught mysqli_sql_exception: Unknown column 'p.status' in 'where clause' in /opt/lampp/htdocs/pms/dashboard.php:101
Stack trace:
#0 /opt/lampp/htdocs/pms/dashboard.php(101): mysqli->prepare('SELECT SUM(p.am...')
#1 {main}
  thrown in /opt/lampp/htdocs/pms/dashboard.php on line 101
[01-Jun-2025 09:56:41 Asia/Riyadh] PHP Warning:  Undefined array key "property_code" in /opt/lampp/htdocs/pms/dashboard.php on line 346
[01-Jun-2025 09:56:41 Asia/Riyadh] PHP Deprecated:  rawurlencode(): Passing null to parameter #1 ($string) of type string is deprecated in /opt/lampp/htdocs/pms/dashboard.php on line 346

===== ./roles/actions.php =====
<?php
// roles/actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_role('admin'); 
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // <<--- تم الإضافة

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $role_id = isset($_POST['role_id']) ? filter_var($_POST['role_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $role_name = isset($_POST['role_name']) ? strtolower(sanitize_input(str_replace(' ', '_', trim($_POST['role_name'])))) : null;
    $display_name_ar = isset($_POST['display_name_ar']) ? sanitize_input(trim($_POST['display_name_ar'])) : null;
    $description = isset($_POST['description']) ? sanitize_input(trim($_POST['description'])) : null;

    if (empty($role_name) || empty($display_name_ar)) {
        $response = ['success' => false, 'message' => 'المعرف والاسم المعروض مطلوبان.'];
        echo json_encode($response); exit;
    }
    if (!preg_match('/^[a-z0-9_]+$/', $role_name)) {
        $response = ['success' => false, 'message' => 'المعرف يجب أن يحتوي على أحرف إنجليزية صغيرة وأرقام وشرطة سفلية فقط.'];
        echo json_encode($response); exit;
    }
    $protected_roles = ['admin', 'staff'];

    $mysqli->begin_transaction(); // <<--- بدء المعاملة
    try {
        if ($action === 'add_role') {
            if (in_array($role_name, $protected_roles)) {
                throw new Exception('لا يمكن إضافة دور بهذا الاسم المحجوز: ' . esc_html($role_name));
            }
            // ... (فحص التكرار كما في النسخة السابقة)
            $stmt_check = $mysqli->prepare("SELECT id FROM roles WHERE role_name = ?");
            if (!$stmt_check) throw new Exception('خطأ تجهيز فحص المعرف: ' . $mysqli->error);
            $stmt_check->bind_param("s", $role_name); $stmt_check->execute(); $stmt_check->store_result();
            if ($stmt_check->num_rows > 0) throw new Exception('المعرف "' . esc_html($role_name) . '" مستخدم بالفعل.');
            $stmt_check->close();

            $stmt_insert = $mysqli->prepare("INSERT INTO roles (role_name, display_name_ar, description) VALUES (?, ?, ?)");
            if (!$stmt_insert) throw new Exception('فشل في تحضير استعلام الإضافة: ' . $mysqli->error);
            $stmt_insert->bind_param("sss", $role_name, $display_name_ar, $description);
            if (!$stmt_insert->execute()) throw new Exception('فشل في إضافة الدور: ' . $stmt_insert->error);
            
            $new_role_id = $stmt_insert->insert_id;
            $stmt_insert->close();
            log_audit_action($mysqli, AUDIT_CREATE_ROLE, $new_role_id, 'roles', ['role_name' => $role_name, 'display_name_ar' => $display_name_ar]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تمت إضافة الدور بنجاح!'];

        } elseif ($action === 'edit_role' && $role_id) {
            // ... (منطق جلب الدور القديم وفحص الأدوار المحمية كما في النسخة السابقة)
            $stmt_old_role_info = $mysqli->prepare("SELECT role_name, display_name_ar, description FROM roles WHERE id = ?");
            $old_role_data = null;
            if ($stmt_old_role_info) {
                $stmt_old_role_info->bind_param("i", $role_id); $stmt_old_role_info->execute();
                $res_old_role = $stmt_old_role_info->get_result();
                if($res_old_role->num_rows > 0) $old_role_data = $res_old_role->fetch_assoc();
                $stmt_old_role_info->close();
            }
            if(!$old_role_data) throw new Exception("الدور المطلوب تعديله غير موجود.");
            if (in_array($old_role_data['role_name'], $protected_roles) && $old_role_data['role_name'] !== $role_name) {
                 throw new Exception('لا يمكن تغيير المعرف للأدوار المحمية.');
            }

            // ... (فحص التكرار عند التعديل كما في النسخة السابقة)
            $stmt_check_edit = $mysqli->prepare("SELECT id FROM roles WHERE role_name = ? AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص المعرف (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("si", $role_name, $role_id); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) throw new Exception('المعرف "' . esc_html($role_name) . '" مستخدم بالفعل لدور آخر.');
            $stmt_check_edit->close();

            $stmt_update = $mysqli->prepare("UPDATE roles SET role_name = ?, display_name_ar = ?, description = ? WHERE id = ?");
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام التحديث: ' . $mysqli->error);
            $stmt_update->bind_param("sssi", $role_name, $display_name_ar, $description, $role_id);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث الدور: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_role_data = compact('role_name', 'display_name_ar', 'description');
            log_audit_action($mysqli, AUDIT_EDIT_ROLE, $role_id, 'roles', ['old_data' => $old_role_data, 'new_data' => $new_role_data]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تم تحديث الدور بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف الدور مفقود.");
        }
        $mysqli->commit(); // <<--- تأكيد المعاملة

    } catch (Exception $e) {
        $mysqli->rollback(); // <<--- التراجع عن المعاملة
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Role Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_role') {
    // ... (منطق الحذف من GET request كما في النسخة السابقة مع إضافة سجل التدقيق والمعاملات)
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('roles/index.php'));
    }
    $role_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($role_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_role_del_info = $mysqli->prepare("SELECT role_name, display_name_ar FROM roles WHERE id = ?");
            $role_details_log = null;
            if($stmt_role_del_info){
                $stmt_role_del_info->bind_param("i", $role_id_to_delete);
                $stmt_role_del_info->execute();
                $res_role_del = $stmt_role_del_info->get_result();
                if($res_role_del->num_rows > 0) $role_details_log = $res_role_del->fetch_assoc();
                $stmt_role_del_info->close();
            }
            if(!$role_details_log) throw new Exception("الدور المطلوب حذفه غير موجود.");
            if (in_array($role_details_log['role_name'], ['admin', 'staff'])) {
                throw new Exception('لا يمكن حذف الأدوار المحمية (admin, staff).');
            }
            // ... (فحص استخدام الدور كما في النسخة السابقة)
            $stmt_check_usage_get = $mysqli->prepare("SELECT COUNT(*) as count FROM users WHERE role_id = ?");
            if (!$stmt_check_usage_get) throw new Exception('خطأ في فحص استخدام الدور: ' . $mysqli->error);
            $stmt_check_usage_get->bind_param("i", $role_id_to_delete); $stmt_check_usage_get->execute();
            $usage_result_get = $stmt_check_usage_get->get_result()->fetch_assoc();
            $stmt_check_usage_get->close();
            if ($usage_result_get && $usage_result_get['count'] > 0) {
                throw new Exception('لا يمكن حذف هذا الدور لأنه معين لمستخدمين.');
            }

            $stmt_delete_get = $mysqli->prepare("DELETE FROM roles WHERE id = ?");
            if (!$stmt_delete_get) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete_get->bind_param("i", $role_id_to_delete);
            if (!$stmt_delete_get->execute()) throw new Exception('فشل في حذف الدور: ' . $stmt_delete_get->error);
            $stmt_delete_get->close();
            
            log_audit_action($mysqli, AUDIT_DELETE_ROLE, $role_id_to_delete, 'roles', $role_details_log); // <<--- تسجيل الحدث
            $mysqli->commit();
            set_message('تم حذف الدور بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Role Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف الدور غير صحيح للحذف.", "danger");
    }
    redirect(base_url('roles/index.php'));
}

// ... (بقية الكود)
if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_role')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./roles/index.php =====
<?php
$page_title = "إدارة أدوار المستخدمين";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_role('admin'); // فقط المسؤول يمكنه إدارة الأدوار
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page_role = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_role = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_role = ($current_page_role - 1) * $items_per_page_role;

// البحث
$search_term_role = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part_role = '';
$params_for_count_role = []; $types_for_count_role = "";
$params_for_data_role = [];  $types_for_data_role = "";

if (!empty($search_term_role)) {
    $search_query_part_role = " WHERE role_name LIKE ? OR display_name_ar LIKE ? OR description LIKE ?";
    $search_like_role = "%" . $search_term_role . "%";
    for($i=0; $i<3; $i++){
        $params_for_count_role[] = $search_like_role; $types_for_count_role .= "s";
        $params_for_data_role[] = $search_like_role;  $types_for_data_role .= "s";
    }
}

// العدد الإجمالي للأدوار
$total_sql_role = "SELECT COUNT(*) as total FROM roles" . $search_query_part_role;
$stmt_total_role = $mysqli->prepare($total_sql_role);
$total_roles = 0;
if ($stmt_total_role) {
    if (!empty($params_for_count_role)) $stmt_total_role->bind_param($types_for_count_role, ...$params_for_count_role);
    $stmt_total_role->execute();
    $total_result_role = $stmt_total_role->get_result();
    $total_roles = ($total_result_role && $total_result_role->num_rows > 0) ? $total_result_role->fetch_assoc()['total'] : 0;
    $stmt_total_role->close();
} else { error_log("SQL Prepare Error counting roles: " . $mysqli->error); }
$total_pages_role = ceil($total_roles / $items_per_page_role);

// جلب الأدوار للصفحة الحالية
$sql_role = "SELECT * FROM roles" . $search_query_part_role . " ORDER BY display_name_ar ASC LIMIT ? OFFSET ?";
$current_data_params_role = $params_for_data_role;
$current_data_params_role[] = $items_per_page_role;
$current_data_params_role[] = $offset_role;
$current_data_types_role = $types_for_data_role . 'ii';

$roles_list_page = [];
$stmt_role = $mysqli->prepare($sql_role);
if ($stmt_role) {
    if (!empty($current_data_params_role)) $stmt_role->bind_param($current_data_types_role, ...$current_data_params_role);
    else $stmt_role->bind_param('ii', $items_per_page_role, $offset_role);
    $stmt_role->execute();
    $result_role = $stmt_role->get_result();
    $roles_list_page = ($result_role && $result_role->num_rows > 0) ? $result_role->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_role->close();
} else { error_log("SQL Prepare Error fetching roles: " . $mysqli->error); }

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-person-rolodex"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة الأدوار (<?php echo $total_roles; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#roleModal" onclick="prepareRoleModal('add_role')">
                    <i class="bi bi-plus-circle"></i> إضافة دور جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('roles/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                     <label for="search_roles_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_roles_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالمعرف، الاسم المعروض، أو الوصف..." value="<?php echo esc_attr($search_term_role); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($roles_list_page) && !empty($search_term_role)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term_role); ?>".</div>
            <?php elseif (empty($roles_list_page)): ?>
                <div class="alert alert-info text-center">لا توجد أدوار مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#roleModal" onclick="prepareRoleModal('add_role')">إضافة دور جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>المعرف (<code>role_name</code>)</th>
                            <th>الاسم المعروض (بالعربية)</th>
                            <th>الوصف</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_role = ($current_page_role - 1) * $items_per_page_role + 1; ?>
                        <?php foreach ($roles_list_page as $role_item): ?>
                        <tr>
                            <td><?php echo $row_num_role++; ?></td>
                            <td><code><?php echo esc_html($role_item['role_name']); ?></code></td>
                            <td><?php echo esc_html($role_item['display_name_ar']); ?></td>
                            <td style="max-width: 300px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="<?php echo esc_attr($role_item['description']); ?>"><?php echo esc_html($role_item['description'] ?: '-'); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareRoleModal('edit_role', <?php echo htmlspecialchars(json_encode($role_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#roleModal"
                                        title="تعديل الدور">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <?php if (!in_array($role_item['role_name'], ['admin', 'staff'])): // لا يمكن حذف الأدوار المحمية ?>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-role-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $role_item['id']; ?>"
                                        data-name="<?php echo esc_attr($role_item['display_name_ar']); ?>"
                                        data-delete-url="<?php echo base_url('roles/actions.php?action=delete_role&id=' . $role_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف الدور">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <?php else: ?>
                                    <button type="button" class="btn btn-sm btn-outline-secondary" disabled title="لا يمكن حذف هذا الدور المحمي"><i class="bi bi-trash"></i></button>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_role > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_role = [];
            if (!empty($search_term_role)) $pagination_params_role['search'] = $search_term_role;
            echo generate_pagination_links($current_page_role, $total_pages_role, 'roles/index.php', $pagination_params_role);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/role_modal.php';
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareRoleModal(action, roleData = null) {
    const roleModal = document.getElementById('roleModal');
    const modalTitle = roleModal.querySelector('#roleModalLabel_roles_page');
    const roleForm = roleModal.querySelector('#roleFormModal');
    const roleIdInput = roleModal.querySelector('#role_id_modal_roles_page');
    const actionInput = roleModal.querySelector('#role_form_action_modal_roles_page');
    const submitButton = roleModal.querySelector('#roleSubmitButtonTextModalRolesPage');
    const roleNameInput = roleModal.querySelector('#role_name_modal_roles_page');


    roleForm.reset();
    if(roleIdInput) roleIdInput.value = '';
    actionInput.value = action;
    roleNameInput.readOnly = false; // Allow editing by default

    if (action === 'add_role') {
        modalTitle.textContent = 'إضافة دور جديد';
        if(submitButton) submitButton.textContent = 'إضافة الدور';
    } else if (action === 'edit_role' && roleData) {
        modalTitle.textContent = 'تعديل الدور: ' + roleData.display_name_ar;
        if(submitButton) submitButton.textContent = 'حفظ التعديلات';
        if(roleIdInput) roleIdInput.value = roleData.id;
        
        if(roleNameInput) roleNameInput.value = roleData.role_name || '';
        if(document.getElementById('role_display_name_ar_modal_roles_page')) document.getElementById('role_display_name_ar_modal_roles_page').value = roleData.display_name_ar || '';
        if(document.getElementById('role_description_modal_roles_page')) document.getElementById('role_description_modal_roles_page').value = roleData.description || '';

        // Prevent editing role_name for protected roles
        if (roleData.role_name === 'admin' || roleData.role_name === 'staff') {
            roleNameInput.readOnly = true;
            let smallHelp = roleNameInput.nextElementSibling;
            if(smallHelp && smallHelp.tagName === 'SMALL'){
                smallHelp.textContent = 'لا يمكن تعديل المعرف لهذا الدور المحمي.';
            }
        } else {
            let smallHelp = roleNameInput.nextElementSibling;
             if(smallHelp && smallHelp.tagName === 'SMALL'){
                smallHelp.textContent = 'يستخدم داخليياً في النظام، يجب أن يكون فريداً (أحرف إنجليزية، أرقام، وشرطة سفلية).';
            }
        }
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalRole = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalRole) {
        confirmDeleteModalRole.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-role-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalRole.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف الدور "' + itemName + '"؟';
                
                var additionalInfo = confirmDeleteModalRole.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: لا يمكن حذف الدور إذا كان معيناً لأي مستخدمين.';

                var confirmDeleteButton = confirmDeleteModalRole.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonRole = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonRole, confirmDeleteButton);
                    
                    newConfirmDeleteButtonRole.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonRole.removeAttribute('href');
                    
                    newConfirmDeleteButtonRole.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    const roleFormElement = document.getElementById('roleFormModal');
    if(roleFormElement) {
        roleFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(roleFormElement);
            const actionUrl = '<?php echo base_url('roles/actions.php'); ?>';

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var roleModalInstance = bootstrap.Modal.getInstance(document.getElementById('roleModal'));
                    if(roleModalInstance) roleModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./lease_types/actions.php =====
<?php
// lease_types/actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // إذا كانت هذه الوظيفة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // <<--- تم الإضافة

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $lease_type_id = isset($_POST['lease_type_id']) ? filter_var($_POST['lease_type_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $type_name = isset($_POST['type_name']) ? strtolower(sanitize_input(str_replace(' ', '_', trim($_POST['type_name'])))) : null;
    $display_name_ar = isset($_POST['display_name_ar']) ? sanitize_input(trim($_POST['display_name_ar'])) : null;

    if (empty($type_name) || empty($display_name_ar)) {
        $response = ['success' => false, 'message' => 'المعرف والاسم المعروض مطلوبان.'];
        echo json_encode($response); exit;
    }
    if (!preg_match('/^[a-z0-9_]+$/', $type_name)) {
        $response = ['success' => false, 'message' => 'المعرف يجب أن يحتوي على أحرف إنجليزية صغيرة وأرقام وشرطة سفلية فقط.'];
        echo json_encode($response); exit;
    }

    $mysqli->begin_transaction(); // <<--- بدء المعاملة
    try {
        if ($action === 'add_lease_type') {
            $stmt_check = $mysqli->prepare("SELECT id FROM lease_types WHERE type_name = ?");
            if (!$stmt_check) throw new Exception('خطأ تجهيز فحص المعرف: ' . $mysqli->error);
            $stmt_check->bind_param("s", $type_name); $stmt_check->execute(); $stmt_check->store_result();
            if ($stmt_check->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل.');
            $stmt_check->close();

            $stmt_insert = $mysqli->prepare("INSERT INTO lease_types (type_name, display_name_ar) VALUES (?, ?)");
            if (!$stmt_insert) throw new Exception('فشل في تحضير استعلام الإضافة: ' . $mysqli->error);
            $stmt_insert->bind_param("ss", $type_name, $display_name_ar);
            if (!$stmt_insert->execute()) throw new Exception('فشل في إضافة النوع: ' . $stmt_insert->error);
            
            $new_ltype_id = $stmt_insert->insert_id;
            $stmt_insert->close();
            // افترض أن AUDIT_CREATE_LEASE_TYPE معرف
            log_audit_action($mysqli, 'CREATE_LEASE_TYPE', $new_ltype_id, 'lease_types', ['type_name' => $type_name, 'display_name_ar' => $display_name_ar]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تمت إضافة نوع عقد الإيجار بنجاح!'];

        } elseif ($action === 'edit_lease_type' && $lease_type_id) {
            $stmt_old_ltype = $mysqli->prepare("SELECT type_name, display_name_ar FROM lease_types WHERE id = ?");
            $old_ltype_data = null;
            if($stmt_old_ltype){
                $stmt_old_ltype->bind_param("i", $lease_type_id); $stmt_old_ltype->execute();
                $res_old_ltype = $stmt_old_ltype->get_result();
                if($res_old_ltype->num_rows > 0) $old_ltype_data = $res_old_ltype->fetch_assoc();
                $stmt_old_ltype->close();
            }
            if(!$old_ltype_data) throw new Exception("نوع عقد الإيجار المطلوب تعديله غير موجود.");

            $stmt_check_edit = $mysqli->prepare("SELECT id FROM lease_types WHERE type_name = ? AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص المعرف (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("si", $type_name, $lease_type_id); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل لنوع آخر.');
            $stmt_check_edit->close();

            $stmt_update = $mysqli->prepare("UPDATE lease_types SET type_name = ?, display_name_ar = ? WHERE id = ?");
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام التحديث: ' . $mysqli->error);
            $stmt_update->bind_param("ssi", $type_name, $display_name_ar, $lease_type_id);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث النوع: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_ltype_data = compact('type_name', 'display_name_ar');
            // افترض أن AUDIT_EDIT_LEASE_TYPE معرف
            log_audit_action($mysqli, 'EDIT_LEASE_TYPE', $lease_type_id, 'lease_types', ['old_data' => $old_ltype_data, 'new_data' => $new_ltype_data]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تم تحديث نوع عقد الإيجار بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف النوع مفقود.");
        }
        $mysqli->commit(); // <<--- تأكيد المعاملة

    } catch (Exception $e) {
        $mysqli->rollback(); // <<--- التراجع عن المعاملة
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Lease Type Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_lease_type') {
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('lease_types/index.php'));
    }
    $lt_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($lt_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_ltype_del_info = $mysqli->prepare("SELECT type_name, display_name_ar FROM lease_types WHERE id = ?");
            $ltype_details_log = null;
            if($stmt_ltype_del_info){
                $stmt_ltype_del_info->bind_param("i", $lt_id_to_delete); $stmt_ltype_del_info->execute();
                $res_ltype_del = $stmt_ltype_del_info->get_result();
                if($res_ltype_del->num_rows > 0) $ltype_details_log = $res_ltype_del->fetch_assoc();
                $stmt_ltype_del_info->close();
            }
            if(!$ltype_details_log) throw new Exception("نوع عقد الإيجار المطلوب حذفه غير موجود.");

            $stmt_check_usage_get = $mysqli->prepare("SELECT COUNT(*) as count FROM leases WHERE lease_type_id = ?");
            if (!$stmt_check_usage_get) throw new Exception('خطأ في فحص استخدام نوع العقد: ' . $mysqli->error);
            $stmt_check_usage_get->bind_param("i", $lt_id_to_delete); $stmt_check_usage_get->execute();
            $usage_result_get = $stmt_check_usage_get->get_result()->fetch_assoc();
            $stmt_check_usage_get->close();
            if ($usage_result_get && $usage_result_get['count'] > 0) {
                throw new Exception('لا يمكن حذف هذا النوع لأنه مستخدم في (' . $usage_result_get['count'] . ') عقد/عقود إيجار.');
            }

            $stmt_delete_get = $mysqli->prepare("DELETE FROM lease_types WHERE id = ?");
            if (!$stmt_delete_get) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete_get->bind_param("i", $lt_id_to_delete);
            if (!$stmt_delete_get->execute()) throw new Exception('فشل في حذف النوع: ' . $stmt_delete_get->error);
            $stmt_delete_get->close();
            
            // افترض أن AUDIT_DELETE_LEASE_TYPE معرف
            log_audit_action($mysqli, 'DELETE_LEASE_TYPE', $lt_id_to_delete, 'lease_types', $ltype_details_log); // <<--- تسجيل الحدث
            $mysqli->commit();
            set_message('تم حذف نوع عقد الإيجار بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Lease Type Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف نوع عقد الإيجار غير صحيح للحذف.", "danger");
    }
    redirect(base_url('lease_types/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_lease_type')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./lease_types/index.php =====
<?php
$page_title = "إدارة أنواع عقود الإيجار";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // يمكنك إضافة هذا إذا كانت هذه الصفحة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page_ltype = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_ltype = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_ltype = ($current_page_ltype - 1) * $items_per_page_ltype;

// وظيفة البحث (بسيطة للاسم المعروض أو المعرف)
$search_term_ltype = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part_ltype = '';
$params_for_count_ltype = [];
$types_for_count_ltype = "";
$params_for_data_ltype = [];
$types_for_data_ltype = "";

if (!empty($search_term_ltype)) {
    $search_query_part_ltype = " WHERE type_name LIKE ? OR display_name_ar LIKE ?";
    $search_like_ltype = "%" . $search_term_ltype . "%";
    $params_for_count_ltype = [$search_like_ltype, $search_like_ltype];
    $types_for_count_ltype = "ss";
    $params_for_data_ltype = $params_for_count_ltype; // نفس المعلمات بدون LIMIT/OFFSET
    $types_for_data_ltype = $types_for_count_ltype;
}

// الحصول على العدد الإجمالي لأنواع العقود
$total_sql_ltype = "SELECT COUNT(*) as total FROM lease_types" . $search_query_part_ltype;
$stmt_total_ltype = $mysqli->prepare($total_sql_ltype);
$total_lease_types = 0;
if ($stmt_total_ltype) {
    if (!empty($params_for_count_ltype)) {
        $stmt_total_ltype->bind_param($types_for_count_ltype, ...$params_for_count_ltype);
    }
    $stmt_total_ltype->execute();
    $total_result_ltype = $stmt_total_ltype->get_result();
    $total_lease_types = ($total_result_ltype && $total_result_ltype->num_rows > 0) ? $total_result_ltype->fetch_assoc()['total'] : 0;
    $stmt_total_ltype->close();
} else {
    error_log("SQL Prepare Error for counting lease types: " . $mysqli->error);
}
$total_pages_ltype = ceil($total_lease_types / $items_per_page_ltype);

// جلب أنواع العقود للصفحة الحالية
$sql_ltype = "SELECT * FROM lease_types" . $search_query_part_ltype . " ORDER BY display_name_ar ASC LIMIT ? OFFSET ?";
$current_data_params_ltype = $params_for_data_ltype;
$current_data_params_ltype[] = $items_per_page_ltype;
$current_data_params_ltype[] = $offset_ltype;
$current_data_types_ltype = $types_for_data_ltype . 'ii';

$lease_types_list_page = []; // تم تغيير الاسم
$stmt_ltype = $mysqli->prepare($sql_ltype);
if ($stmt_ltype) {
    if (!empty($current_data_params_ltype)) {
        $stmt_ltype->bind_param($current_data_types_ltype, ...$current_data_params_ltype);
    } else {
        $stmt_ltype->bind_param('ii', $items_per_page_ltype, $offset_ltype);
    }
    $stmt_ltype->execute();
    $result_ltype = $stmt_ltype->get_result();
    $lease_types_list_page = ($result_ltype && $result_ltype->num_rows > 0) ? $result_ltype->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_ltype->close();
} else {
    error_log("SQL Prepare Error for fetching lease types: " . $mysqli->error);
}

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-tags-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة أنواع عقود الإيجار (<?php echo $total_lease_types; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#leaseTypeModal" onclick="prepareLeaseTypeModal('add_lease_type')">
                    <i class="bi bi-plus-circle"></i> إضافة نوع جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('lease_types/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                     <label for="search_lease_types_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_lease_types_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالمعرف أو الاسم المعروض..." value="<?php echo esc_attr($search_term_ltype); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($lease_types_list_page) && !empty($search_term_ltype)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term_ltype); ?>".</div>
            <?php elseif (empty($lease_types_list_page)): ?>
                <div class="alert alert-info text-center">لا توجد أنواع عقود إيجار مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#leaseTypeModal" onclick="prepareLeaseTypeModal('add_lease_type')">إضافة نوع جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>المعرف (<code>type_name</code>)</th>
                            <th>الاسم المعروض (بالعربية)</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_ltype = ($current_page_ltype - 1) * $items_per_page_ltype + 1; ?>
                        <?php foreach ($lease_types_list_page as $ltype_item): ?>
                        <tr>
                            <td><?php echo $row_num_ltype++; ?></td>
                            <td><code><?php echo esc_html($ltype_item['type_name']); ?></code></td>
                            <td><?php echo esc_html($ltype_item['display_name_ar']); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareLeaseTypeModal('edit_lease_type', <?php echo htmlspecialchars(json_encode($ltype_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#leaseTypeModal"
                                        title="تعديل نوع العقد">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-lease-type-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $ltype_item['id']; ?>"
                                        data-name="<?php echo esc_attr($ltype_item['display_name_ar']); ?>"
                                        data-delete-url="<?php echo base_url('lease_types/actions.php?action=delete_lease_type&id=' . $ltype_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف نوع العقد">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_ltype > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_ltype = [];
            if (!empty($search_term_ltype)) $pagination_params_ltype['search'] = $search_term_ltype;
            echo generate_pagination_links($current_page_ltype, $total_pages_ltype, 'lease_types/index.php', $pagination_params_ltype);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
// تضمين نافذة إضافة/تعديل نوع عقد الإيجار
require_once __DIR__ . '/../includes/modals/lease_type_modal.php';
// تضمين نافذة تأكيد الحذف
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareLeaseTypeModal(action, leaseTypeData = null) {
    const leaseTypeModal = document.getElementById('leaseTypeModal');
    const modalTitle = leaseTypeModal.querySelector('#leaseTypeModalLabel_ltypes');
    const leaseTypeForm = leaseTypeModal.querySelector('#leaseTypeFormModal');
    const leaseTypeIdInput = leaseTypeModal.querySelector('#lease_type_id_modal_ltypes');
    const actionInput = leaseTypeModal.querySelector('#lease_type_form_action_modal_ltypes');
    const submitButton = leaseTypeModal.querySelector('#leaseTypeSubmitButtonTextModalLtypes');

    leaseTypeForm.reset();
    leaseTypeIdInput.value = '';
    actionInput.value = action;

    // const formUrl = '<?php echo base_url('lease_types/actions.php'); ?>'; // Not needed for fetch

    if (action === 'add_lease_type') {
        modalTitle.textContent = 'إضافة نوع عقد إيجار جديد';
        submitButton.textContent = 'إضافة النوع';
    } else if (action === 'edit_lease_type' && leaseTypeData) {
        modalTitle.textContent = 'تعديل نوع عقد الإيجار: ' + leaseTypeData.display_name_ar;
        submitButton.textContent = 'حفظ التعديلات';
        leaseTypeIdInput.value = leaseTypeData.id;
        
        if(document.getElementById('lease_type_name_modal_ltypes')) document.getElementById('lease_type_name_modal_ltypes').value = leaseTypeData.type_name || '';
        if(document.getElementById('lease_type_display_name_ar_modal_ltypes')) document.getElementById('lease_type_display_name_ar_modal_ltypes').value = leaseTypeData.display_name_ar || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalLeaseType = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalLeaseType) {
        confirmDeleteModalLeaseType.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-lease-type-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalLeaseType.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف نوع العقد "' + itemName + '"؟';
                
                var additionalInfo = confirmDeleteModalLeaseType.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: لا يمكن حذف نوع العقد إذا كان مستخدماً في أي عقود إيجار حالية.';

                var confirmDeleteButton = confirmDeleteModalLeaseType.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonLType = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonLType, confirmDeleteButton);
                    
                    newConfirmDeleteButtonLType.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonLType.removeAttribute('href');
                    
                    newConfirmDeleteButtonLType.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    const leaseTypeFormElement = document.getElementById('leaseTypeFormModal');
    if(leaseTypeFormElement) {
        leaseTypeFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(leaseTypeFormElement);
            // Action is set in the hidden input within the form
            const actionUrl = '<?php echo base_url('lease_types/actions.php'); ?>';


            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var leaseTypeModalInstance = bootstrap.Modal.getInstance(document.getElementById('leaseTypeModal'));
                    if(leaseTypeModalInstance) leaseTypeModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./pms.sql =====
-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: localhost
-- Generation Time: Jun 03, 2025 at 05:44 AM
-- Server version: 10.4.32-MariaDB
-- PHP Version: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `pms`
--

-- --------------------------------------------------------

--
-- Table structure for table `amenities`
--

CREATE TABLE `amenities` (
  `id` int(11) NOT NULL,
  `amenity_name` varchar(100) NOT NULL,
  `display_name_ar` varchar(150) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `app_settings`
--

CREATE TABLE `app_settings` (
  `setting_key` varchar(100) NOT NULL,
  `setting_value` text DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `last_updated` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `app_settings`
--

INSERT INTO `app_settings` (`setting_key`, `setting_value`, `description`, `last_updated`) VALUES
('APP_NAME', 'نظام إدارة العقارات', 'اسم التطبيق', '2025-05-29 16:27:11'),
('ITEMS_PER_PAGE', '10', 'عدد العناصر المعروضة في كل صفحة للتصفح', '2025-05-29 16:27:11'),
('VAT_PERCENTAGE', '15.00', 'النسبة المئوية لضريبة القيمة المضافة الافتراضية (مثال: 15.00 لـ 15%)', '2025-05-29 16:27:11'),
('ZATCA_API_URL_PRODUCTION_CLEARANCE', 'https://gw-fatoora.zatca.gov.sa/e-invoicing/core/invoices/clearance/single', 'رابط ZATCA API (بيئة إنتاج للتصريح المسبق للفواتير)', '2025-05-29 16:27:11'),
('ZATCA_API_URL_PRODUCTION_COMPLIANCE_INVOICE', 'https://gw-fatoora.zatca.gov.sa/e-invoicing/core/compliance/invoices', 'رابط ZATCA API (بيئة إنتاج لفحص امتثال الفواتير للـ CSID)', '2025-05-29 16:27:11'),
('ZATCA_API_URL_PRODUCTION_REPORTING', 'https://gw-fatoora.zatca.gov.sa/e-invoicing/core/invoices/reporting/single', 'رابط ZATCA API (بيئة إنتاج للإبلاغ عن الفواتير)', '2025-05-29 16:27:11'),
('ZATCA_API_URL_SANDBOX_PORTAL', 'https://gw-fatoora.zatca.gov.sa/e-invoicing/developer-portal', 'رابط بوابة مطوري الفاتورة الإلكترونية (بيئة تجريبية)', '2025-05-29 16:27:11'),
('ZATCA_API_URL_SIMULATION_CLEARANCE', 'https://gw-fatoora.zatca.gov.sa/e-invoicing/simulation/invoices/clearance/single', 'رابط ZATCA API (بيئة محاكاة للتصريح المسبق للفواتير)', '2025-05-29 16:27:11'),
('ZATCA_API_URL_SIMULATION_COMPLIANCE_INVOICE', 'https://gw-fatoora.zatca.gov.sa/e-invoicing/simulation/compliance/invoices', 'رابط ZATCA API (بيئة محاكاة لفحص امتثال الفواتير للـ CSID)', '2025-05-29 16:27:11'),
('ZATCA_API_URL_SIMULATION_REPORTING', 'https://gw-fatoora.zatca.gov.sa/e-invoicing/simulation/invoices/reporting/single', 'رابط ZATCA API (بيئة محاكاة للإبلاغ عن الفواتير)', '2025-05-29 16:27:11'),
('ZATCA_CERTIFICATE_PATH', '/opt/zatca_sdk/cert/certificate.pem', 'المسار الكامل لملف شهادة التشفير (للتوقيع أو SDK)', '2025-05-29 16:27:11'),
('ZATCA_CLIENT_ID', 'YOUR_ZATCA_CLIENT_ID_HERE', 'معرف عميل ZATCA (يُحصل عليه من بوابة هيئة الزكاة)', '2025-05-29 16:27:11'),
('ZATCA_CLIENT_SECRET', 'YOUR_ZATCA_CLIENT_SECRET_HERE', 'كلمة سر عميل ZATCA (يُحصل عليه من بوابة هيئة الزكاة)', '2025-05-29 16:27:11'),
('ZATCA_COMPLIANCE_OTP', '123345', 'OTP لعملية فحص الامتثال للـ CSID (لبيئة المحاكاة، يُحصل عليه من بوابة هيئة الزكاة)', '2025-05-29 16:27:11'),
('ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED', '388', 'رمز نوع الفاتورة للفواتير المبسطة (عادة 388)', '2025-05-29 16:27:11'),
('ZATCA_INVOICE_TYPE_CODE_STANDARD', '388', 'رمز نوع الفاتورة للفواتير القياسية (عادة 388, يمكن أن يختلف)', '2025-05-29 16:27:11'),
('ZATCA_PAYMENT_MEANS_CODE_BANK', '42', 'رمز وسيلة الدفع (تحويل بنكي) حسب متطلبات ZATCA', '2025-05-29 16:27:11'),
('ZATCA_PAYMENT_MEANS_CODE_CARD', '48', 'رمز وسيلة الدفع (بطاقة) حسب متطلبات ZATCA', '2025-05-29 16:27:11'),
('ZATCA_PAYMENT_MEANS_CODE_CASH', '10', 'رمز وسيلة الدفع (نقدًا) حسب متطلبات ZATCA', '2025-05-29 16:27:11'),
('ZATCA_PRIVATE_KEY_PASSWORD', '', 'كلمة مرور المفتاح الخاص (إذا كان محميًا)', '2025-05-29 16:27:11'),
('ZATCA_PRIVATE_KEY_PATH', '/opt/zatca_sdk/cert/privatekey.pem', 'المسار الكامل لملف المفتاح الخاص (للتوقيع أو SDK)', '2025-05-29 16:27:11'),
('ZATCA_SELLER_ADDITIONAL_NO', '5678', 'الرقم الإضافي لعنوان البائع (إذا وجد)', '2025-05-29 16:27:11'),
('ZATCA_SELLER_BUILDING_NO', '1234', 'رقم مبنى البائع', '2025-05-29 16:27:11'),
('ZATCA_SELLER_CITY_NAME', 'اسم المدينة', 'اسم مدينة البائع', '2025-05-29 16:27:11'),
('ZATCA_SELLER_COUNTRY_CODE', 'SA', 'رمز البلد للبائع (مثل SA للمملكة العربية السعودية)', '2025-05-29 16:27:11'),
('ZATCA_SELLER_DISTRICT_NAME', 'اسم الحي', 'اسم حي البائع', '2025-05-29 16:27:11'),
('ZATCA_SELLER_NAME', 'اسم شركتك المسجل', 'اسم البائع (شركتك) كما هو مسجل لدى هيئة الزكاة', '2025-05-29 16:27:11'),
('ZATCA_SELLER_POSTAL_CODE', '12345', 'الرمز البريدي لعنوان البائع', '2025-05-29 16:27:11'),
('ZATCA_SELLER_STREET_NAME', 'اسم الشارع', 'اسم شارع البائع', '2025-05-29 16:27:11'),
('ZATCA_SELLER_VAT_NUMBER', '300000000000003', 'رقم تسجيل ضريبة القيمة المضافة للبائع', '2025-05-29 16:27:11'),
('ZATCA_SOLUTION_NAME', 'YourCustomSolutionName', 'اسم الحل التقني المسجل لدى هيئة الزكاة والضريبة والجمارك', '2025-05-29 16:27:11');

-- --------------------------------------------------------

--
-- Table structure for table `audit_log`
--

CREATE TABLE `audit_log` (
  `id` bigint(20) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `action_type` varchar(100) NOT NULL COMMENT 'e.g., CREATE_OWNER, LOGIN_SUCCESS, UPDATE_INVOICE_STATUS',
  `target_table` varchar(50) DEFAULT NULL,
  `target_id` int(11) DEFAULT NULL,
  `details` text DEFAULT NULL,
  `ip_address` varchar(45) DEFAULT NULL,
  `user_agent` varchar(255) DEFAULT NULL,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `billing_periods`
--

CREATE TABLE `billing_periods` (
  `id` int(11) NOT NULL,
  `period_name` varchar(100) NOT NULL COMMENT 'e.g., January 2025, Q1 2025',
  `start_date` date NOT NULL,
  `end_date` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `invoices`
--

CREATE TABLE `invoices` (
  `id` int(11) NOT NULL,
  `lease_id` int(11) DEFAULT NULL,
  `tenant_id` int(11) DEFAULT NULL COMMENT 'قد تكون الفاتورة مباشرة للمستأجر دون عقد إيجار محدد',
  `invoice_number` varchar(50) NOT NULL COMMENT 'رقم الفاتورة الداخلي للنظام',
  `invoice_sequence_number` int(11) NOT NULL COMMENT 'ICV - Invoice Counter Value (متسلسل لكل مصدر فاتورة/جهاز)',
  `previous_invoice_hash` varchar(255) DEFAULT NULL COMMENT 'تجزئة الفاتورة المبسطة السابقة (PIH)',
  `invoice_date` date NOT NULL,
  `invoice_time` time NOT NULL DEFAULT current_timestamp(),
  `due_date` date NOT NULL,
  `invoice_type_zatca` enum('Invoice','SimplifiedInvoice','DebitNote','CreditNote') DEFAULT 'SimplifiedInvoice' COMMENT 'نوع الفاتورة حسب ZATCA (فاتورة ضريبية، فاتورة مبسطة، إشعار مدين، إشعار دائن)',
  `transaction_type_code` varchar(3) DEFAULT '388' COMMENT 'ZATCA BT-3: رمز نوع الفاتورة (e.g. 388 for Tax Invoice, 381 for Credit Note)',
  `notes_zatca` text DEFAULT NULL COMMENT 'ملاحظات ZATCA (مثل سبب الإشعار المدين/الدائن)',
  `purchase_order_id` varchar(50) DEFAULT NULL COMMENT 'ZATCA BT-13: رقم أمر الشراء',
  `contract_id` varchar(50) DEFAULT NULL COMMENT 'ZATCA BT-12: رقم العقد',
  `sub_total_amount` decimal(12,2) NOT NULL DEFAULT 0.00 COMMENT 'المجموع الفرعي (بدون ضريبة القيمة المضافة أو الخصومات)',
  `discount_amount` decimal(12,2) DEFAULT 0.00 COMMENT 'إجمالي مبلغ الخصم على مستوى الفاتورة',
  `vat_percentage` decimal(5,2) DEFAULT 15.00,
  `vat_amount` decimal(12,2) GENERATED ALWAYS AS (round((`sub_total_amount` - ifnull(`discount_amount`,0)) * `vat_percentage` / 100,2)) STORED,
  `total_amount` decimal(12,2) GENERATED ALWAYS AS (`sub_total_amount` - ifnull(`discount_amount`,0) + round((`sub_total_amount` - ifnull(`discount_amount`,0)) * `vat_percentage` / 100,2)) STORED,
  `paid_amount` decimal(12,2) DEFAULT 0.00,
  `status` enum('Draft','Unpaid','Partially Paid','Paid','Overdue','Cancelled','Void') DEFAULT 'Unpaid',
  `zatca_status` enum('Not Sent','Sent','Generating','Compliance Check Pending','Compliance Check Failed','Compliance Check Passed','Clearance Pending','Cleared','Reporting Pending','Reported','Rejected','Error') DEFAULT 'Not Sent',
  `zatca_uuid` varchar(100) DEFAULT NULL COMMENT 'المعرف الفريد للفاتورة من ZATCA',
  `zatca_qr_code_data` text DEFAULT NULL,
  `zatca_invoice_hash` varchar(255) DEFAULT NULL,
  `zatca_signed_xml` mediumtext DEFAULT NULL COMMENT 'ملف XML الموقّع والمرسل إلى ZATCA',
  `zatca_submission_response` text DEFAULT NULL,
  `zatca_compliance_csid` text DEFAULT NULL COMMENT 'معلومات CSID المستخدمة (إذا تم الحصول عليها بنجاح)',
  `notes` text DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `invoice_items`
--

CREATE TABLE `invoice_items` (
  `id` int(11) NOT NULL,
  `invoice_id` int(11) NOT NULL,
  `item_name` varchar(255) NOT NULL COMMENT 'اسم أو وصف البند',
  `item_description` varchar(255) DEFAULT NULL,
  `quantity` decimal(10,2) NOT NULL DEFAULT 1.00,
  `unit_price_before_vat` decimal(10,2) NOT NULL COMMENT 'سعر الوحدة قبل الضريبة والخصم',
  `item_discount_amount` decimal(10,2) DEFAULT 0.00 COMMENT 'مبلغ الخصم على هذا البند (لكل وحدة أو إجمالي للبند)',
  `item_taxable_amount` decimal(12,2) GENERATED ALWAYS AS (round(`quantity` * `unit_price_before_vat` - ifnull(`item_discount_amount`,0),2)) STORED COMMENT 'المبلغ الخاضع للضريبة للبند',
  `item_vat_category_code` varchar(5) DEFAULT 'S' COMMENT 'رمز فئة ضريبة القيمة المضافة (S=Standard, Z=Zero-rated, E=Exempt, O=Out of scope)',
  `item_vat_percentage` decimal(5,2) DEFAULT 15.00,
  `item_vat_amount` decimal(12,2) GENERATED ALWAYS AS (round(round(`quantity` * `unit_price_before_vat` - ifnull(`item_discount_amount`,0),2) * `item_vat_percentage` / 100,2)) STORED,
  `item_sub_total_with_vat` decimal(12,2) GENERATED ALWAYS AS (round(`quantity` * `unit_price_before_vat` - ifnull(`item_discount_amount`,0),2) + round(round(`quantity` * `unit_price_before_vat` - ifnull(`item_discount_amount`,0),2) * `item_vat_percentage` / 100,2)) STORED
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `leases`
--

CREATE TABLE `leases` (
  `id` int(11) NOT NULL,
  `unit_id` int(11) NOT NULL,
  `tenant_id` int(11) NOT NULL,
  `lease_type_id` int(11) DEFAULT NULL,
  `lease_contract_number` varchar(50) NOT NULL,
  `lease_start_date` date NOT NULL,
  `lease_end_date` date NOT NULL,
  `rent_amount` decimal(10,2) NOT NULL,
  `payment_frequency` enum('Monthly','Quarterly','Semi-Annually','Annually','Custom') DEFAULT 'Monthly',
  `payment_due_day` tinyint(4) DEFAULT 1,
  `deposit_amount` decimal(10,2) DEFAULT 0.00,
  `grace_period_days` int(11) DEFAULT 0,
  `status` enum('Active','Expired','Terminated','Pending','Draft') DEFAULT 'Pending',
  `next_billing_date` date DEFAULT NULL,
  `last_billed_on` date DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `contract_document_path` varchar(255) DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `lease_types`
--

CREATE TABLE `lease_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(50) NOT NULL,
  `display_name_ar` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `lease_types`
--

INSERT INTO `lease_types` (`id`, `type_name`, `display_name_ar`) VALUES
(1, 'residential', 'سكني'),
(2, 'commercial', 'تجاري');

-- --------------------------------------------------------

--
-- Table structure for table `owners`
--

CREATE TABLE `owners` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `email` varchar(100) DEFAULT NULL,
  `phone` varchar(20) DEFAULT NULL,
  `national_id_iqama` varchar(20) DEFAULT NULL,
  `address` text DEFAULT NULL,
  `registration_date` date DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `owners`
--

INSERT INTO `owners` (`id`, `name`, `email`, `phone`, `national_id_iqama`, `address`, `registration_date`, `notes`, `created_by_id`, `created_at`, `updated_at`) VALUES
(1, 'eng ahmed', 'test@test.com', '0505050505050', '7896523589', 'test address', NULL, NULL, 1, '2025-05-29 18:24:02', '2025-05-29 18:24:02');

-- --------------------------------------------------------

--
-- Table structure for table `owner_documents`
--

CREATE TABLE `owner_documents` (
  `id` int(11) NOT NULL,
  `owner_id` int(11) NOT NULL,
  `document_path` varchar(255) NOT NULL,
  `document_name` varchar(255) DEFAULT NULL,
  `uploaded_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `payments`
--

CREATE TABLE `payments` (
  `id` int(11) NOT NULL,
  `invoice_id` int(11) DEFAULT NULL,
  `tenant_id` int(11) DEFAULT NULL,
  `payment_method_id` int(11) NOT NULL,
  `status` enum('Pending','Completed','Failed','Cancelled','Refunded') DEFAULT 'Pending',
  `payment_date` date NOT NULL,
  `amount_paid` decimal(10,2) NOT NULL,
  `reference_number` varchar(100) DEFAULT NULL,
  `attachment_path` varchar(255) DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `received_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `payment_methods`
--

CREATE TABLE `payment_methods` (
  `id` int(11) NOT NULL,
  `method_name` varchar(50) NOT NULL COMMENT 'e.g., Cash, BankTransfer, Card',
  `display_name_ar` varchar(100) NOT NULL,
  `zatca_code` varchar(2) DEFAULT NULL COMMENT 'ZATCA payment means code (e.g., 10, 42, 48)',
  `is_active` tinyint(1) DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `payment_methods`
--

INSERT INTO `payment_methods` (`id`, `method_name`, `display_name_ar`, `zatca_code`, `is_active`) VALUES
(1, 'Cash', 'نقداً', '10', 1),
(2, 'BankTransfer', 'تحويل بنكي', '42', 1),
(3, 'Card', 'بطاقة', '48', 1),
(4, 'Cheque', 'شيك', '30', 1),
(5, 'OnlinePayment', 'دفع إلكتروني', NULL, 1);

-- --------------------------------------------------------

--
-- Table structure for table `permissions`
--

CREATE TABLE `permissions` (
  `id` int(11) NOT NULL,
  `permission_key` varchar(100) NOT NULL COMMENT 'e.g., view_invoices, edit_settings',
  `display_name_ar` varchar(150) NOT NULL,
  `module` varchar(50) DEFAULT NULL COMMENT 'e.g., invoices, settings, users'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `permission_role`
--

CREATE TABLE `permission_role` (
  `role_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `properties`
--

CREATE TABLE `properties` (
  `id` int(11) NOT NULL,
  `owner_id` int(11) DEFAULT NULL,
  `property_code` varchar(50) NOT NULL,
  `name` varchar(255) NOT NULL,
  `address` text NOT NULL,
  `city` varchar(100) DEFAULT NULL,
  `property_type_id` int(11) DEFAULT NULL,
  `number_of_units` int(11) DEFAULT 0,
  `construction_year` year(4) DEFAULT NULL,
  `land_area_sqm` decimal(10,2) DEFAULT NULL,
  `latitude` decimal(10,8) DEFAULT NULL,
  `longitude` decimal(11,8) DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `properties`
--

INSERT INTO `properties` (`id`, `owner_id`, `property_code`, `name`, `address`, `city`, `property_type_id`, `number_of_units`, `construction_year`, `land_area_sqm`, `latitude`, `longitude`, `notes`, `created_by_id`, `created_at`, `updated_at`) VALUES
(1, 1, 'bld001', 'borg el kawsar', 'el rayida test address', 'test4545', 1, 1, NULL, 150.00, NULL, NULL, 'new notes', 1, '2025-05-29 18:27:07', '2025-05-29 18:27:07');

-- --------------------------------------------------------

--
-- Table structure for table `property_types`
--

CREATE TABLE `property_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(100) NOT NULL,
  `display_name_ar` varchar(150) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `property_types`
--

INSERT INTO `property_types` (`id`, `type_name`, `display_name_ar`) VALUES
(1, 'residential_building', 'مبنى سكني'),
(2, 'commercial_building', 'مبنى تجاري'),
(3, 'villa_complex', 'مجمع فلل'),
(4, 'land', 'أرض');

-- --------------------------------------------------------

--
-- Table structure for table `roles`
--

CREATE TABLE `roles` (
  `id` int(11) NOT NULL,
  `role_name` varchar(50) NOT NULL COMMENT 'Internal key for the role, e.g., admin, staff',
  `display_name_ar` varchar(100) NOT NULL COMMENT 'Arabic display name for the role',
  `description` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `roles`
--

INSERT INTO `roles` (`id`, `role_name`, `display_name_ar`, `description`) VALUES
(1, 'admin', 'مسؤول نظام', 'يمتلك كافة الصلاحيات على النظام'),
(2, 'staff', 'موظف', 'يمتلك صلاحيات محددة لإدارة البيانات');

-- --------------------------------------------------------

--
-- Table structure for table `tenants`
--

CREATE TABLE `tenants` (
  `id` int(11) NOT NULL,
  `tenant_type_id` int(11) DEFAULT NULL,
  `full_name` varchar(255) NOT NULL,
  `national_id_iqama` varchar(20) NOT NULL,
  `phone_primary` varchar(20) NOT NULL,
  `phone_secondary` varchar(20) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `current_address` text DEFAULT NULL,
  `occupation` varchar(100) DEFAULT NULL,
  `nationality` varchar(100) DEFAULT NULL,
  `gender` enum('Male','Female','Other') DEFAULT NULL,
  `date_of_birth` date DEFAULT NULL,
  `buyer_vat_number` varchar(20) DEFAULT NULL COMMENT 'رقم تسجيل ضريبة القيمة المضافة للمشتري (إذا كان مسجلاً)',
  `buyer_street_name` varchar(100) DEFAULT NULL,
  `buyer_building_no` varchar(10) DEFAULT NULL,
  `buyer_additional_no` varchar(10) DEFAULT NULL,
  `buyer_district_name` varchar(100) DEFAULT NULL,
  `buyer_city_name` varchar(100) DEFAULT NULL,
  `buyer_postal_code` varchar(10) DEFAULT NULL,
  `buyer_country_code` varchar(2) DEFAULT 'SA',
  `emergency_contact_name` varchar(150) DEFAULT NULL,
  `emergency_contact_phone` varchar(20) DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `tenants`
--

INSERT INTO `tenants` (`id`, `tenant_type_id`, `full_name`, `national_id_iqama`, `phone_primary`, `phone_secondary`, `email`, `current_address`, `occupation`, `nationality`, `gender`, `date_of_birth`, `buyer_vat_number`, `buyer_street_name`, `buyer_building_no`, `buyer_additional_no`, `buyer_district_name`, `buyer_city_name`, `buyer_postal_code`, `buyer_country_code`, `emergency_contact_name`, `emergency_contact_phone`, `notes`, `created_by_id`, `created_at`, `updated_at`) VALUES
(1, 1, 'test tents', '20202336669', '025896321', '9595962000', 'test2@test.com', 'test addresxs tent', 'function getAttribute() { [native code] }', NULL, NULL, NULL, '300000000000123', 'شارع الملك عبدالعزيز', '125', '859696', 'hfgfhghfgh', 'الرياض', '12345', 'EG', NULL, NULL, NULL, 1, '2025-05-29 18:41:24', '2025-05-29 18:48:43');

-- --------------------------------------------------------

--
-- Table structure for table `tenant_documents`
--

CREATE TABLE `tenant_documents` (
  `id` int(11) NOT NULL,
  `tenant_id` int(11) NOT NULL,
  `document_path` varchar(255) NOT NULL,
  `document_name` varchar(255) DEFAULT NULL,
  `uploaded_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `tenant_types`
--

CREATE TABLE `tenant_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(50) NOT NULL,
  `display_name_ar` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `tenant_types`
--

INSERT INTO `tenant_types` (`id`, `type_name`, `display_name_ar`) VALUES
(1, 'individual', 'فرد'),
(2, 'company', 'شركة/مؤسسة');

-- --------------------------------------------------------

--
-- Table structure for table `units`
--

CREATE TABLE `units` (
  `id` int(11) NOT NULL,
  `property_id` int(11) NOT NULL,
  `unit_number` varchar(50) NOT NULL,
  `unit_type_id` int(11) DEFAULT NULL,
  `floor_number` int(11) DEFAULT NULL,
  `size_sqm` decimal(8,2) DEFAULT NULL,
  `bedrooms` int(11) DEFAULT NULL,
  `bathrooms` int(11) DEFAULT NULL,
  `features` text DEFAULT NULL,
  `status` enum('Vacant','Occupied','Under Maintenance','Reserved') DEFAULT 'Vacant',
  `base_rent_price` decimal(10,2) DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `units`
--

INSERT INTO `units` (`id`, `property_id`, `unit_number`, `unit_type_id`, `floor_number`, `size_sqm`, `bedrooms`, `bathrooms`, `features`, `status`, `base_rent_price`, `notes`, `created_by_id`, `created_at`, `updated_at`) VALUES
(1, 1, '101', 1, 2, 100.00, 2, 1, '0', 'Vacant', 5000.00, 'test', 1, '2025-05-29 18:40:18', '2025-05-29 18:40:18');

-- --------------------------------------------------------

--
-- Table structure for table `unit_amenities`
--

CREATE TABLE `unit_amenities` (
  `unit_id` int(11) NOT NULL,
  `amenity_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `unit_types`
--

CREATE TABLE `unit_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(100) NOT NULL,
  `display_name_ar` varchar(150) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `unit_types`
--

INSERT INTO `unit_types` (`id`, `type_name`, `display_name_ar`) VALUES
(1, 'apartment_2br', 'شقة غرفتين نوم'),
(2, 'apartment_3br', 'شقة ثلاث غرف نوم'),
(3, 'shop', 'محل تجاري'),
(4, 'office', 'مكتب');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `full_name` varchar(150) NOT NULL,
  `username` varchar(50) NOT NULL,
  `email` varchar(100) NOT NULL,
  `password_hash` varchar(255) NOT NULL,
  `role_id` int(11) DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `is_active` tinyint(1) DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `full_name`, `username`, `email`, `password_hash`, `role_id`, `created_by_id`, `created_at`, `is_active`) VALUES
(1, 'Admin User', 'admin', 'admin@example.com', '$2y$10$wGWTYbQmvd8Gn.iY9IzV.u4xFp6I9dC9fa3iyExVPh3ULsPOJizFq', 1, NULL, '2025-05-29 16:27:11', 1);

-- --------------------------------------------------------

--
-- Table structure for table `utility_readings`
--

CREATE TABLE `utility_readings` (
  `id` int(11) NOT NULL,
  `unit_id` int(11) NOT NULL,
  `utility_type_id` int(11) NOT NULL,
  `reading_date` date NOT NULL,
  `previous_reading_value` decimal(10,2) DEFAULT 0.00,
  `current_reading_value` decimal(10,2) NOT NULL,
  `consumption` decimal(10,2) GENERATED ALWAYS AS (`current_reading_value` - `previous_reading_value`) STORED,
  `rate_per_unit` decimal(8,4) DEFAULT NULL,
  `amount_due` decimal(10,2) GENERATED ALWAYS AS (round((`current_reading_value` - `previous_reading_value`) * `rate_per_unit`,2)) STORED,
  `billed_status` enum('Pending','Billed','Paid') DEFAULT 'Pending',
  `invoice_id` int(11) DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `utility_types`
--

CREATE TABLE `utility_types` (
  `id` int(11) NOT NULL,
  `name` varchar(100) NOT NULL,
  `unit_of_measure` varchar(20) DEFAULT 'kWh'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `utility_types`
--

INSERT INTO `utility_types` (`id`, `name`, `unit_of_measure`) VALUES
(1, 'كهرباء', 'kWh'),
(2, 'ماء', 'm³'),
(3, 'غاز', 'm³');

-- --------------------------------------------------------

--
-- Table structure for table `vacation_notices`
--

CREATE TABLE `vacation_notices` (
  `id` int(11) NOT NULL,
  `lease_id` int(11) NOT NULL,
  `tenant_id` int(11) NOT NULL,
  `notice_date` date NOT NULL COMMENT 'تاريخ استلام الإشعار',
  `vacating_date` date NOT NULL COMMENT 'التاريخ المتوقع للإخلاء',
  `reason` text DEFAULT NULL,
  `status` enum('Pending','Approved','Cancelled') DEFAULT 'Pending',
  `created_by_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Indexes for dumped tables
--

--
-- Indexes for table `amenities`
--
ALTER TABLE `amenities`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `amenity_name_unique` (`amenity_name`);

--
-- Indexes for table `app_settings`
--
ALTER TABLE `app_settings`
  ADD PRIMARY KEY (`setting_key`);

--
-- Indexes for table `audit_log`
--
ALTER TABLE `audit_log`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_auditlog_user` (`user_id`);

--
-- Indexes for table `billing_periods`
--
ALTER TABLE `billing_periods`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `period_name_unique` (`period_name`);

--
-- Indexes for table `invoices`
--
ALTER TABLE `invoices`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `invoice_number_internal` (`invoice_number`),
  ADD UNIQUE KEY `idx_invoice_sequence_number_unique` (`invoice_sequence_number`),
  ADD KEY `idx_invoices_lease_id` (`lease_id`),
  ADD KEY `idx_invoices_tenant_id` (`tenant_id`),
  ADD KEY `fk_invoices_created_by_idx` (`created_by_id`),
  ADD KEY `idx_invoice_status` (`status`),
  ADD KEY `idx_invoice_due_date` (`due_date`),
  ADD KEY `idx_invoice_type_zatca` (`invoice_type_zatca`);

--
-- Indexes for table `invoice_items`
--
ALTER TABLE `invoice_items`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idx_invoice_items_invoice_id` (`invoice_id`);

--
-- Indexes for table `leases`
--
ALTER TABLE `leases`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `lease_contract_number` (`lease_contract_number`),
  ADD UNIQUE KEY `lease_contract_number_unique` (`lease_contract_number`),
  ADD KEY `fk_leases_lease_type` (`lease_type_id`),
  ADD KEY `idx_leases_unit_id` (`unit_id`),
  ADD KEY `idx_leases_tenant_id` (`tenant_id`),
  ADD KEY `fk_leases_created_by_idx` (`created_by_id`),
  ADD KEY `idx_lease_status` (`status`),
  ADD KEY `idx_lease_end_date` (`lease_end_date`);

--
-- Indexes for table `lease_types`
--
ALTER TABLE `lease_types`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `type_name_lease_unique` (`type_name`);

--
-- Indexes for table `owners`
--
ALTER TABLE `owners`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `idx_owner_email_unique` (`email`),
  ADD UNIQUE KEY `idx_owner_phone_unique` (`phone`),
  ADD UNIQUE KEY `idx_owner_national_id_unique` (`national_id_iqama`),
  ADD UNIQUE KEY `idx_owner_email_unique_new` (`email`),
  ADD UNIQUE KEY `idx_owner_phone_unique_new` (`phone`),
  ADD UNIQUE KEY `idx_owner_national_id_unique_new` (`national_id_iqama`),
  ADD KEY `fk_owners_created_by_idx` (`created_by_id`),
  ADD KEY `idx_owner_name` (`name`);

--
-- Indexes for table `owner_documents`
--
ALTER TABLE `owner_documents`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_ownerdoc_owner` (`owner_id`);

--
-- Indexes for table `payments`
--
ALTER TABLE `payments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idx_payments_payment_method_id` (`payment_method_id`),
  ADD KEY `idx_payments_invoice_id` (`invoice_id`),
  ADD KEY `idx_payments_tenant_id` (`tenant_id`),
  ADD KEY `fk_payments_received_by_idx` (`received_by_id`),
  ADD KEY `idx_payment_date` (`payment_date`);

--
-- Indexes for table `payment_methods`
--
ALTER TABLE `payment_methods`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `method_name_unique` (`method_name`);

--
-- Indexes for table `permissions`
--
ALTER TABLE `permissions`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `permission_key_unique` (`permission_key`);

--
-- Indexes for table `permission_role`
--
ALTER TABLE `permission_role`
  ADD PRIMARY KEY (`role_id`,`permission_id`),
  ADD KEY `fk_permissionrole_role` (`role_id`),
  ADD KEY `fk_permissionrole_permission` (`permission_id`);

--
-- Indexes for table `properties`
--
ALTER TABLE `properties`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `property_code` (`property_code`),
  ADD UNIQUE KEY `property_code_unique` (`property_code`),
  ADD KEY `fk_properties_property_type` (`property_type_id`),
  ADD KEY `idx_properties_owner_id` (`owner_id`),
  ADD KEY `fk_properties_created_by_idx` (`created_by_id`),
  ADD KEY `idx_property_name` (`name`),
  ADD KEY `idx_property_type_filter` (`property_type_id`);

--
-- Indexes for table `property_types`
--
ALTER TABLE `property_types`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `type_name_unique` (`type_name`);

--
-- Indexes for table `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `role_name_unique` (`role_name`);

--
-- Indexes for table `tenants`
--
ALTER TABLE `tenants`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `idx_tenant_national_id_unique` (`national_id_iqama`),
  ADD UNIQUE KEY `idx_tenant_phone_unique` (`phone_primary`),
  ADD UNIQUE KEY `idx_tenant_national_id_unique_new` (`national_id_iqama`),
  ADD UNIQUE KEY `idx_tenant_phone_unique_new` (`phone_primary`),
  ADD UNIQUE KEY `idx_tenant_email_unique` (`email`),
  ADD UNIQUE KEY `idx_tenant_email_unique_new` (`email`),
  ADD KEY `fk_tenants_tenant_type` (`tenant_type_id`),
  ADD KEY `fk_tenants_created_by_idx` (`created_by_id`),
  ADD KEY `idx_tenant_name` (`full_name`);

--
-- Indexes for table `tenant_documents`
--
ALTER TABLE `tenant_documents`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_tenantdoc_tenant` (`tenant_id`);

--
-- Indexes for table `tenant_types`
--
ALTER TABLE `tenant_types`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `type_name_tenant_unique` (`type_name`);

--
-- Indexes for table `units`
--
ALTER TABLE `units`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `property_id_unit_number` (`property_id`,`unit_number`),
  ADD UNIQUE KEY `property_id_unit_number_unique` (`property_id`,`unit_number`),
  ADD KEY `fk_units_unit_type` (`unit_type_id`),
  ADD KEY `fk_units_created_by_idx` (`created_by_id`),
  ADD KEY `idx_unit_status` (`status`),
  ADD KEY `idx_unit_type_filter` (`unit_type_id`);

--
-- Indexes for table `unit_amenities`
--
ALTER TABLE `unit_amenities`
  ADD PRIMARY KEY (`unit_id`,`amenity_id`),
  ADD KEY `fk_unitamenities_unit` (`unit_id`),
  ADD KEY `fk_unitamenities_amenity` (`amenity_id`);

--
-- Indexes for table `unit_types`
--
ALTER TABLE `unit_types`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `type_name_unique_unit` (`type_name`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `username` (`username`),
  ADD UNIQUE KEY `email` (`email`),
  ADD UNIQUE KEY `username_unique` (`username`),
  ADD UNIQUE KEY `email_unique` (`email`),
  ADD KEY `fk_users_role_id` (`role_id`),
  ADD KEY `fk_users_created_by` (`created_by_id`),
  ADD KEY `idx_user_role_filter` (`role_id`);

--
-- Indexes for table `utility_readings`
--
ALTER TABLE `utility_readings`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idx_utility_readings_unit_id` (`unit_id`),
  ADD KEY `idx_utility_readings_utility_type_id` (`utility_type_id`),
  ADD KEY `idx_utility_readings_invoice_id` (`invoice_id`),
  ADD KEY `fk_utility_readings_created_by_idx` (`created_by_id`),
  ADD KEY `idx_util_reading_date` (`reading_date`),
  ADD KEY `idx_util_billed_status` (`billed_status`);

--
-- Indexes for table `utility_types`
--
ALTER TABLE `utility_types`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `name` (`name`),
  ADD UNIQUE KEY `name_unique_utiltype` (`name`);

--
-- Indexes for table `vacation_notices`
--
ALTER TABLE `vacation_notices`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_vacation_lease` (`lease_id`),
  ADD KEY `fk_vacation_tenant` (`tenant_id`),
  ADD KEY `fk_vacation_created_by` (`created_by_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `amenities`
--
ALTER TABLE `amenities`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `audit_log`
--
ALTER TABLE `audit_log`
  MODIFY `id` bigint(20) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `billing_periods`
--
ALTER TABLE `billing_periods`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `invoices`
--
ALTER TABLE `invoices`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `invoice_items`
--
ALTER TABLE `invoice_items`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `leases`
--
ALTER TABLE `leases`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `lease_types`
--
ALTER TABLE `lease_types`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `owners`
--
ALTER TABLE `owners`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `owner_documents`
--
ALTER TABLE `owner_documents`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `payments`
--
ALTER TABLE `payments`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `payment_methods`
--
ALTER TABLE `payment_methods`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `permissions`
--
ALTER TABLE `permissions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `properties`
--
ALTER TABLE `properties`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `property_types`
--
ALTER TABLE `property_types`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `roles`
--
ALTER TABLE `roles`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `tenants`
--
ALTER TABLE `tenants`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `tenant_documents`
--
ALTER TABLE `tenant_documents`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `tenant_types`
--
ALTER TABLE `tenant_types`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `units`
--
ALTER TABLE `units`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `unit_types`
--
ALTER TABLE `unit_types`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `utility_readings`
--
ALTER TABLE `utility_readings`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `utility_types`
--
ALTER TABLE `utility_types`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `vacation_notices`
--
ALTER TABLE `vacation_notices`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `audit_log`
--
ALTER TABLE `audit_log`
  ADD CONSTRAINT `fk_auditlog_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Constraints for table `leases`
--
ALTER TABLE `leases`
  ADD CONSTRAINT `fk_leases_lease_type` FOREIGN KEY (`lease_type_id`) REFERENCES `lease_types` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Constraints for table `owner_documents`
--
ALTER TABLE `owner_documents`
  ADD CONSTRAINT `fk_ownerdoc_owner` FOREIGN KEY (`owner_id`) REFERENCES `owners` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `payments`
--
ALTER TABLE `payments`
  ADD CONSTRAINT `fk_payments_payment_method` FOREIGN KEY (`payment_method_id`) REFERENCES `payment_methods` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `permission_role`
--
ALTER TABLE `permission_role`
  ADD CONSTRAINT `fk_permissionrole_permission` FOREIGN KEY (`permission_id`) REFERENCES `permissions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `fk_permissionrole_role` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `properties`
--
ALTER TABLE `properties`
  ADD CONSTRAINT `fk_properties_property_type` FOREIGN KEY (`property_type_id`) REFERENCES `property_types` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Constraints for table `tenants`
--
ALTER TABLE `tenants`
  ADD CONSTRAINT `fk_tenants_tenant_type` FOREIGN KEY (`tenant_type_id`) REFERENCES `tenant_types` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Constraints for table `tenant_documents`
--
ALTER TABLE `tenant_documents`
  ADD CONSTRAINT `fk_tenantdoc_tenant` FOREIGN KEY (`tenant_id`) REFERENCES `tenants` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `units`
--
ALTER TABLE `units`
  ADD CONSTRAINT `fk_units_unit_type` FOREIGN KEY (`unit_type_id`) REFERENCES `unit_types` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Constraints for table `unit_amenities`
--
ALTER TABLE `unit_amenities`
  ADD CONSTRAINT `fk_unitamenities_amenity` FOREIGN KEY (`amenity_id`) REFERENCES `amenities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `fk_unitamenities_unit` FOREIGN KEY (`unit_id`) REFERENCES `units` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `users`
--
ALTER TABLE `users`
  ADD CONSTRAINT `fk_users_created_by` FOREIGN KEY (`created_by_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  ADD CONSTRAINT `fk_users_role_id` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Constraints for table `vacation_notices`
--
ALTER TABLE `vacation_notices`
  ADD CONSTRAINT `fk_vacation_created_by` FOREIGN KEY (`created_by_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  ADD CONSTRAINT `fk_vacation_lease` FOREIGN KEY (`lease_id`) REFERENCES `leases` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `fk_vacation_tenant` FOREIGN KEY (`tenant_id`) REFERENCES `tenants` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;

===== ./config.php =====
<?php
// config.php

// --- Database Credentials ---
// Replace these with your actual database credentials
// define('DB_HOST', 'localhost');
// define('DB_USERNAME', 'amrsam99_inventory_db'); // Your database username
// define('DB_PASSWORD', 'Z123456z@');            // Your database password
// define('DB_NAME', 'amrsam99_inventory_db');    // Your database name
// define('DB_CHARSET', 'utf8mb4');               // Character encoding for the database

//Replace these with your actual database credentials
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'root'); // Your database username
define('DB_PASSWORD', '');            // Your database password
define('DB_NAME', 'pms');    // Your database name
define('DB_CHARSET', 'utf8mb4');               // Character encoding for the database

// --- Application Base URL ---
// This should be the root URL of your application on the web.
// Example: http://localhost/pms or https://yourdomain.com/app
// Ensure this path is correct for your environment.
if (!defined('APP_BASE_URL')) {
    $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || (isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] == 443)) ? "https://" : "http://";
    $host = isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : 'localhost';

    // __DIR__ is the directory of the current file (config.php).
    // $_SERVER['DOCUMENT_ROOT'] is the web server's document root.
    // We calculate the project's path relative to the document root.
    // This assumes config.php is in the project's root directory (e.g., /pms/config.php).
    $project_path_from_doc_root = str_replace(rtrim($_SERVER['DOCUMENT_ROOT'], '/\\'), '', str_replace('\\', '/', __DIR__));
    
    define('APP_BASE_URL', rtrim($protocol . $host . $project_path_from_doc_root, '/'));
}

// --- Timezone Setting ---
date_default_timezone_set('Asia/Riyadh'); // Set your desired timezone

// --- Error Reporting ---
// For Development: Display all errors
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// For Production, you might want to log errors to a file instead of displaying them:
/*
ini_set('display_errors', 0);
ini_set('display_startup_errors', 0);
error_reporting(0); // Report no errors to the screen
ini_set('log_errors', 1); // Enable error logging
// Ensure this path is correct and writable by the server.
// It's best if this log file is outside the public web root or in a protected logs/ directory.
$log_path = __DIR__ . '/../logs/php-error.log'; // Example: logs directory one level above config.php's directory
if (!file_exists(dirname($log_path))) {
    if (!mkdir(dirname($log_path), 0775, true) && !is_dir(dirname($log_path))) {
        // Fallback if logs directory cannot be created
        $log_path = __DIR__ . '/php-error.log'; // Log in the same directory as config.php (less secure)
    }
}
ini_set('error_log', $log_path);
*/

// Note: Constants like APP_NAME, ITEMS_PER_PAGE, and ZATCA settings
// will be loaded from the database in db_connect.php and defined there.
?>

===== ./users/user_actions.php =====
<?php
// users/user_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_role('admin'); // فقط المسؤول يمكنه إدارة المستخدمين
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // تضمين ملف سجل التدقيق

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id_performing_action = get_current_user_id();

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $user_id_from_post = isset($_POST['user_id']) ? filter_var($_POST['user_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $user_full_name = isset($_POST['user_full_name']) ? sanitize_input(trim($_POST['user_full_name'])) : null;
    $user_username = isset($_POST['user_username']) ? sanitize_input(trim(strtolower($_POST['user_username']))) : null; // Username to lowercase
    $user_email_input = isset($_POST['user_email']) ? trim($_POST['user_email']) : null;
    $user_email = ($user_email_input === '' || $user_email_input === null) ? null : filter_var(sanitize_input($user_email_input), FILTER_SANITIZE_EMAIL);
    $user_password = $_POST['user_password'] ?? ''; // لا تقم بعمل trim لكلمة المرور هنا
    $user_confirm_password = $_POST['user_confirm_password'] ?? '';
    $user_role_id = isset($_POST['role_id']) && filter_var($_POST['role_id'], FILTER_VALIDATE_INT) ? (int)$_POST['role_id'] : null;
    $user_is_active = isset($_POST['is_active']) ? (int)$_POST['is_active'] : 0; // Default to inactive if not set or invalid

    if (!in_array($user_is_active, [0, 1])) {
        $user_is_active = 0; // Default to inactive if value is unexpected
    }
    
    // Validations
    if (empty($user_full_name) || empty($user_username) || empty($user_email) || $user_role_id === null) {
        $response = ['success' => false, 'message' => 'الحقول (الاسم الكامل، اسم المستخدم، البريد الإلكتروني، الدور) مطلوبة.'];
        echo json_encode($response); exit;
    }
    if (!preg_match('/^[a-z0-9_]{3,50}$/', $user_username)) {
        $response = ['success' => false, 'message' => 'اسم المستخدم يجب أن يتكون من 3 إلى 50 حرفًا إنجليزيًا صغيرًا أو أرقامًا أو شرطة سفلية فقط.'];
        echo json_encode($response); exit;
    }
    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {
        $response = ['success' => false, 'message' => 'صيغة البريد الإلكتروني غير صحيحة.'];
        echo json_encode($response); exit;
    }
    
    $mysqli->begin_transaction();
    try {
        if ($action === 'add_user') {
            if (empty($user_password)) {
                throw new Exception('كلمة المرور مطلوبة عند إضافة مستخدم جديد.');
            }
            if (strlen($user_password) < 8) { // Basic password length check
                throw new Exception('يجب أن تتكون كلمة المرور من 8 أحرف على الأقل.');
            }
            if ($user_password !== $user_confirm_password) {
                throw new Exception('كلمتا المرور غير متطابقتين.');
            }

            // Check for duplicate username or email
            $stmt_check_add = $mysqli->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
            if(!$stmt_check_add) throw new Exception('خطأ تجهيز فحص التكرار: ' . $mysqli->error);
            $stmt_check_add->bind_param("ss", $user_username, $user_email);
            $stmt_check_add->execute();
            $stmt_check_add->store_result();
            if ($stmt_check_add->num_rows > 0) {
                throw new Exception('اسم المستخدم أو البريد الإلكتروني مستخدم بالفعل.');
            }
            $stmt_check_add->close();

            $password_hash = password_hash($user_password, PASSWORD_DEFAULT);
            $stmt_add = $mysqli->prepare("INSERT INTO users (full_name, username, email, password_hash, role_id, is_active, created_at) VALUES (?, ?, ?, ?, ?, ?, NOW())");
            if (!$stmt_add) throw new Exception('فشل في تحضير استعلام إضافة المستخدم: ' . $mysqli->error);
            
            $stmt_add->bind_param("ssssii", $user_full_name, $user_username, $user_email, $password_hash, $user_role_id, $user_is_active);
            if (!$stmt_add->execute()) throw new Exception('فشل في إضافة المستخدم: ' . $stmt_add->error);
            
            $new_user_id = $stmt_add->insert_id;
            $stmt_add->close();
            log_audit_action($mysqli, AUDIT_CREATE_USER, $new_user_id, 'users', ['username' => $user_username, 'role_id' => $user_role_id]);
            $response = ['success' => true, 'message' => 'تمت إضافة المستخدم بنجاح!'];

        } elseif ($action === 'edit_user' && $user_id_from_post) {
            if ($user_username === 'admin' && $user_id_from_post != 1) { // Assuming admin user has ID 1 and cannot be renamed by others
                 throw new Exception('لا يمكن تعيين اسم المستخدم "admin" لمستخدم آخر.');
            }
             // Prevent changing username of admin (ID 1) or current logged in user if they are admin
            $stmt_get_user_info = $mysqli->prepare("SELECT username, role_id FROM users WHERE id = ?");
            $original_username_db = null;
            $original_role_id_db = null;
            if($stmt_get_user_info) {
                $stmt_get_user_info->bind_param("i", $user_id_from_post);
                $stmt_get_user_info->execute();
                $res_user_info = $stmt_get_user_info->get_result();
                if($res_user_info->num_rows > 0) {
                    $user_info_row = $res_user_info->fetch_assoc();
                    $original_username_db = $user_info_row['username'];
                    $original_role_id_db = $user_info_row['role_id'];
                }
                $stmt_get_user_info->close();
            }
            if (!$original_username_db) throw new Exception("المستخدم المطلوب تعديله غير موجود.");


            if ($original_username_db === 'admin' && $user_username !== 'admin') {
                 throw new Exception('لا يمكن تغيير اسم المستخدم الخاص بالمسؤول الرئيسي (admin).');
            }
             // Prevent deactivating or changing role of the main admin user (ID 1) if attempted by someone other than admin ID 1
             // Or prevent admin ID 1 from deactivating self or changing own role to non-admin
            if ($user_id_from_post == 1 && ($user_is_active == 0 || $user_role_id != 1 /* Assuming admin role_id is 1 */)) {
                 if ($current_user_id_performing_action != 1 || $user_is_active == 0 || ($user_role_id != 1 && $original_role_id_db == 1) ) {
                     throw new Exception('لا يمكن تعطيل حساب المسؤول الرئيسي أو تغيير دوره إلى دور غير مسؤول.');
                 }
            }


            $stmt_check_edit = $mysqli->prepare("SELECT id FROM users WHERE (username = ? OR email = ?) AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص التكرار (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("ssi", $user_username, $user_email, $user_id_from_post);
            $stmt_check_edit->execute();
            $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) {
                throw new Exception('اسم المستخدم أو البريد الإلكتروني مستخدم بالفعل لمستخدم آخر.');
            }
            $stmt_check_edit->close();

            $old_user_data_for_log = $mysqli->query("SELECT * FROM users WHERE id = " . (int)$user_id_from_post)->fetch_assoc();


            $sql_update_user = "UPDATE users SET full_name = ?, username = ?, email = ?, role_id = ?, is_active = ?";
            $types_update_user = "sssii";
            $params_update_user = [$user_full_name, $user_username, $user_email, $user_role_id, $user_is_active];

            if (!empty($user_password)) {
                if (strlen($user_password) < 8) {
                    throw new Exception('يجب أن تتكون كلمة المرور من 8 أحرف على الأقل.');
                }
                if ($user_password !== $user_confirm_password) {
                    throw new Exception('كلمتا المرور غير متطابقتين.');
                }
                $password_hash_update = password_hash($user_password, PASSWORD_DEFAULT);
                $sql_update_user .= ", password_hash = ?";
                $types_update_user .= "s";
                $params_update_user[] = $password_hash_update;
            }
            $sql_update_user .= " WHERE id = ?";
            $types_update_user .= "i";
            $params_update_user[] = $user_id_from_post;

            $stmt_update = $mysqli->prepare($sql_update_user);
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام تعديل المستخدم: ' . $mysqli->error);
            
            $stmt_update->bind_param($types_update_user, ...$params_update_user);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث بيانات المستخدم: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_user_data_for_log = $mysqli->query("SELECT * FROM users WHERE id = " . (int)$user_id_from_post)->fetch_assoc();
            // Remove password hash from logs
            unset($old_user_data_for_log['password_hash']);
            unset($new_user_data_for_log['password_hash']);
            log_audit_action($mysqli, AUDIT_EDIT_USER, $user_id_from_post, 'users', ['old_data' => $old_user_data_for_log, 'new_data' => $new_user_data_for_log]);
            $response = ['success' => true, 'message' => 'تم تحديث بيانات المستخدم بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف المستخدم مفقود.");
        }
        $mysqli->commit();

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("User Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_user') {
    if (!is_logged_in() || !user_has_role('admin')) { // Double check role for GET delete
        set_message("ليس لديك الصلاحية لحذف المستخدمين.", "danger");
        redirect(base_url('users/index.php'));
    }
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('users/index.php'));
    }

    $user_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($user_id_to_delete > 0) {
        if ($user_id_to_delete == 1 || $user_id_to_delete == $current_user_id_performing_action) { // لا يمكن حذف المستخدم admin أو المستخدم الحالي
            set_message("لا يمكن حذف حساب المسؤول الرئيسي أو حسابك الحالي.", "warning");
            redirect(base_url('users/index.php'));
        }
        
        $mysqli->begin_transaction();
        try {
            $stmt_user_del_info = $mysqli->prepare("SELECT username, full_name FROM users WHERE id = ?");
            $user_details_log = null;
            if($stmt_user_del_info){
                $stmt_user_del_info->bind_param("i", $user_id_to_delete);
                $stmt_user_del_info->execute();
                $res_user_del = $stmt_user_del_info->get_result();
                if($res_user_del->num_rows > 0) $user_details_log = $res_user_del->fetch_assoc();
                $stmt_user_del_info->close();
            }
            if(!$user_details_log) throw new Exception("المستخدم المطلوب حذفه غير موجود.");

            // ملاحظة: يجب عليك تحديد ماذا تفعل بالحقول created_by_id في الجداول الأخرى
            // التي تشير إلى هذا المستخدم. حالياً، هي ON DELETE SET NULL.

            $stmt_delete = $mysqli->prepare("DELETE FROM users WHERE id = ?");
            if (!$stmt_delete) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            
            $stmt_delete->bind_param("i", $user_id_to_delete);
            if (!$stmt_delete->execute()) throw new Exception('فشل في حذف المستخدم: ' . $stmt_delete->error);
            $stmt_delete->close();
            
            log_audit_action($mysqli, AUDIT_DELETE_USER, $user_id_to_delete, 'users', $user_details_log);
            $mysqli->commit();
            set_message("تم حذف المستخدم بنجاح!", "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("User Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف المستخدم غير صحيح للحذف.", "danger");
    }
    redirect(base_url('users/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_user')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./users/index.php =====
<?php
$page_title = "إدارة المستخدمين";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_role('admin'); // فقط المسؤول يمكنه الوصول لهذه الصفحة
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset = ($current_page - 1) * $items_per_page;

// وظيفة البحث والفلترة
$search_term_user = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$filter_role_id_user = isset($_GET['role_id']) && filter_var($_GET['role_id'], FILTER_VALIDATE_INT) ? (int)$_GET['role_id'] : '';
$filter_active_user = isset($_GET['is_active']) ? sanitize_input($_GET['is_active']) : ''; // '0', '1', or ''

$where_clauses_user = [];
$params_for_count_user = []; $types_for_count_user = "";
$params_for_data_user = [];  $types_for_data_user = "";

if (!empty($search_term_user)) {
    $where_clauses_user[] = "(u.full_name LIKE ? OR u.username LIKE ? OR u.email LIKE ?)";
    $search_like_user = "%" . $search_term_user . "%";
    for ($k=0; $k<3; $k++) {
        $params_for_count_user[] = $search_like_user; $types_for_count_user .= "s";
        $params_for_data_user[] = $search_like_user;  $types_for_data_user .= "s";
    }
}
if (!empty($filter_role_id_user)) {
    $where_clauses_user[] = "u.role_id = ?";
    $params_for_count_user[] = $filter_role_id_user; $types_for_count_user .= "i";
    $params_for_data_user[] = $filter_role_id_user;  $types_for_data_user .= "i";
}
if ($filter_active_user !== '') {
    $where_clauses_user[] = "u.is_active = ?";
    $params_for_count_user[] = (int)$filter_active_user; $types_for_count_user .= "i";
    $params_for_data_user[] = (int)$filter_active_user;  $types_for_data_user .= "i";
}

$where_sql_user = "";
if (!empty($where_clauses_user)) {
    $where_sql_user = " WHERE " . implode(" AND ", $where_clauses_user);
}

// الحصول على العدد الإجمالي للمستخدمين
$total_sql_user = "SELECT COUNT(u.id) as total FROM users u" . $where_sql_user;
$stmt_total_user = $mysqli->prepare($total_sql_user);
if ($stmt_total_user) {
    if (!empty($params_for_count_user)) {
        $stmt_total_user->bind_param($types_for_count_user, ...$params_for_count_user);
    }
    $stmt_total_user->execute();
    $total_result_user = $stmt_total_user->get_result();
    $total_users = ($total_result_user && $total_result_user->num_rows > 0) ? $total_result_user->fetch_assoc()['total'] : 0;
    $stmt_total_user->close();
} else {
    $total_users = 0;
    error_log("SQL Prepare Error for counting users: " . $mysqli->error);
}
$total_pages_user = ceil($total_users / $items_per_page);

// جلب المستخدمين للصفحة الحالية مع اسم الدور
$sql_user = "SELECT u.id, u.full_name, u.username, u.email, u.created_at, u.is_active, u.role_id, r.display_name_ar as role_display_name, r.role_name as role_name_system
             FROM users u
             LEFT JOIN roles r ON u.role_id = r.id"
           . $where_sql_user . " ORDER BY u.full_name ASC LIMIT ? OFFSET ?";

$current_data_params_user = $params_for_data_user;
$current_data_params_user[] = $items_per_page;
$current_data_params_user[] = $offset;
$current_data_types_user = $types_for_data_user . 'ii';

$users_list = [];
$stmt_user = $mysqli->prepare($sql_user);
if ($stmt_user) {
    if (!empty($current_data_params_user)) { // Check if array is not empty before spread
        $stmt_user->bind_param($current_data_types_user, ...$current_data_params_user);
    } else { // Only limit and offset if no filter params
        $stmt_user->bind_param('ii', $items_per_page, $offset);
    }
    $stmt_user->execute();
    $result_user = $stmt_user->get_result();
    $users_list = ($result_user && $result_user->num_rows > 0) ? $result_user->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_user->close();
} else {
    error_log("SQL Prepare Error for fetching users: " . $mysqli->error);
}

// جلب قائمة الأدوار للفلتر
$roles_filter_list = [['id' => '', 'display_name_ar' => '-- الكل --']]; // Add "All" option
$roles_query_filter_page = "SELECT id, display_name_ar FROM roles ORDER BY display_name_ar ASC";
$roles_result_filter_page = $mysqli->query($roles_query_filter_page);
if ($roles_result_filter_page) {
    while ($role_row_filter_page = $roles_result_filter_page->fetch_assoc()) {
        $roles_filter_list[] = $role_row_filter_page;
    }
    $roles_result_filter_page->free();
}

$user_active_filter_options = [ // Renamed to avoid conflict if modal defines similarly
    '' => '-- الكل --',
    '1' => 'نشط',
    '0' => 'غير نشط'
];

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-person-lines-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة المستخدمين (<?php echo $total_users; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#userModal" onclick="prepareUserModal('add_user')">
                    <i class="bi bi-person-plus-fill"></i> إضافة مستخدم جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('users/index.php'); ?>" class="row gx-2 gy-2 align-items-end">
                <div class="col-md-4 col-lg-4">
                    <label for="search_users_page" class="form-label form-label-sm">بحث عام</label>
                    <input type="text" id="search_users_page" name="search" class="form-control form-control-sm" placeholder="الاسم، اسم المستخدم، البريد..." value="<?php echo esc_attr($search_term_user); ?>">
                </div>
                <div class="col-md-3 col-lg-3">
                    <label for="filter_role_id_user_page" class="form-label form-label-sm">الدور</label>
                    <select id="filter_role_id_user_page" name="role_id" class="form-select form-select-sm">
                        <?php foreach ($roles_filter_list as $role_filter_item): ?>
                            <option value="<?php echo $role_filter_item['id']; ?>" <?php echo ($filter_role_id_user == $role_filter_item['id']) ? 'selected' : ''; ?>><?php echo esc_html($role_filter_item['display_name_ar']); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-3 col-lg-3">
                    <label for="filter_active_user_page" class="form-label form-label-sm">الحالة</label>
                    <select id="filter_active_user_page" name="is_active" class="form-select form-select-sm">
                         <?php foreach ($user_active_filter_options as $key => $value): ?>
                            <option value="<?php echo $key; ?>" <?php echo ($filter_active_user === (string)$key && $filter_active_user !== '') ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i></button>
                </div>
                 <div class="col-md-1">
                     <a href="<?php echo base_url('users/index.php'); ?>" class="btn btn-outline-secondary btn-sm w-100" title="مسح الفلاتر"><i class="bi bi-eraser-fill"></i></a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($users_list) && (!empty($search_term_user) || !empty($filter_role_id_user) || $filter_active_user !== '')): ?>
                <div class="alert alert-warning text-center">لا يوجد مستخدمون يطابقون معايير البحث أو الفلترة.</div>
            <?php elseif (empty($users_list)): ?>
                <div class="alert alert-info text-center">لا يوجد مستخدمون مسجلون حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#userModal" onclick="prepareUserModal('add_user')">إضافة مستخدم جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>الاسم الكامل</th>
                            <th>اسم المستخدم</th>
                            <th>البريد الإلكتروني</th>
                            <th>الدور</th>
                            <th>تاريخ الإنشاء</th>
                            <th>الحالة</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_user = ($current_page - 1) * $items_per_page + 1; ?>
                        <?php foreach ($users_list as $user_item): ?>
                        <tr>
                            <td><?php echo $row_num_user++; ?></td>
                            <td><?php echo esc_html($user_item['full_name']); ?></td>
                            <td><?php echo esc_html($user_item['username']); ?></td>
                            <td><?php echo esc_html($user_item['email']); ?></td>
                            <td><span class="badge bg-<?php echo ($user_item['role_name_system'] === 'admin') ? 'primary' : 'secondary'; ?>"><?php echo esc_html($user_item['role_display_name'] ?? $user_item['role_name_system']); ?></span></td>
                            <td><?php echo format_date_custom($user_item['created_at'], 'Y-m-d H:i'); ?></td>
                            <td>
                                <span class="badge bg-<?php echo $user_item['is_active'] ? 'success' : 'danger'; ?>">
                                    <?php echo $user_item['is_active'] ? 'نشط' : 'غير نشط'; ?>
                                </span>
                            </td>
                            <td class="text-center">
                                <?php if ($user_item['id'] != get_current_user_id()): ?>
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareUserModal('edit_user', <?php echo htmlspecialchars(json_encode($user_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#userModal"
                                        title="تعديل المستخدم">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <?php if ($user_item['username'] !== 'admin'): // لا يمكن حذف المستخدم 'admin' الافتراضي ?>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-user-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $user_item['id']; ?>"
                                        data-name="المستخدم <?php echo esc_attr($user_item['username']); ?>"
                                        data-delete-url="<?php echo base_url('users/user_actions.php?action=delete_user&id=' . $user_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف المستخدم">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <?php else: ?>
                                    <button type="button" class="btn btn-sm btn-outline-secondary" disabled title="لا يمكن حذف المستخدم المسؤول الرئيسي"><i class="bi bi-trash"></i></button>
                                <?php endif; ?>
                                 <?php else: ?>
                                    <small class="text-muted">(حسابك الحالي)</small>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_user > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_user = [];
            if (!empty($search_term_user)) $pagination_params_user['search'] = $search_term_user;
            if (!empty($filter_role_id_user)) $pagination_params_user['role_id'] = $filter_role_id_user; // تم التغيير إلى role_id
            if ($filter_active_user !== '') $pagination_params_user['is_active'] = $filter_active_user;
            echo generate_pagination_links($current_page, $total_pages_user, 'users/index.php', $pagination_params_user);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/user_modal.php';
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareUserModal(action, userData = null) {
    const userModal = document.getElementById('userModal'); // معرف النافذة المنبثقة
    const modalTitle = userModal.querySelector('.modal-title');
    const userForm = userModal.querySelector('#userFormModal'); // معرف النموذج داخل النافذة المنبثقة
    const userIdInput = userModal.querySelector('#user_id_modal_users');
    const actionInput = userModal.querySelector('#user_form_action_modal');
    const submitButton = userModal.querySelector('#userSubmitButtonTextModal'); // معرف زر الإرسال
    const passwordInput = userModal.querySelector('#user_password_modal');
    const confirmPasswordInput = userModal.querySelector('#user_confirm_password_modal');
    const passwordHelpBlock = userModal.querySelector('#passwordHelpBlock_modal');
    const usernameInput = userModal.querySelector('#user_username_modal');


    userForm.reset();
    userIdInput.value = '';
    actionInput.value = action;
    passwordInput.removeAttribute('required');
    confirmPasswordInput.removeAttribute('required');
    usernameInput.removeAttribute('readonly');


    const formUrl = '<?php echo base_url('users/user_actions.php'); ?>';
    userForm.action = formUrl; // لم يعد ضرورياً إذا كنت تستخدم fetch

    if (action === 'add_user') {
        modalTitle.textContent = 'إضافة مستخدم جديد';
        submitButton.textContent = 'إضافة المستخدم';
        passwordInput.setAttribute('required', 'required');
        confirmPasswordInput.setAttribute('required', 'required');
        passwordHelpBlock.textContent = 'كلمة المرور مطلوبة عند إضافة مستخدم جديد.';
    } else if (action === 'edit_user' && userData) {
        modalTitle.textContent = 'تعديل بيانات المستخدم: ' + userData.full_name;
        submitButton.textContent = 'حفظ التعديلات';
        passwordHelpBlock.textContent = 'اتركه فارغًا لعدم تغيير كلمة المرور الحالية.';
        
        userIdInput.value = userData.id;
        userModal.querySelector('#user_full_name_modal').value = userData.full_name || '';
        userModal.querySelector('#user_username_modal').value = userData.username || '';
        userModal.querySelector('#user_email_modal').value = userData.email || '';
        userModal.querySelector('#user_role_id_modal').value = userData.role_id || ''; // role_id الآن
        userModal.querySelector('#user_is_active_modal').value = String(userData.is_active); // تأكد أنه سلسلة نصية للقيمة '0' أو '1'

        if (userData.username === 'admin') {
            usernameInput.setAttribute('readonly', 'readonly');
        }
    }
}

document.addEventListener('DOMContentLoaded', function () {
    // التعامل مع نافذة تأكيد الحذف
    var confirmDeleteModalUser = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalUser) {
        confirmDeleteModalUser.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-user-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalUser.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف ' + itemName + '؟';
                
                var additionalInfo = confirmDeleteModalUser.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'سيتم حذف المستخدم بشكل نهائي ولا يمكن استعادته.';

                var confirmDeleteButton = confirmDeleteModalUser.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    // Remove previous event listener to avoid multiple fires due to cloning/replacing
                    var newConfirmDeleteButton = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButton, confirmDeleteButton);
                    
                    newConfirmDeleteButton.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButton.removeAttribute('href');
                    
                    newConfirmDeleteButton.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if (urlToDelete) {
                            window.location.href = urlToDelete; // For GET-based delete
                        }
                    });
                }
            }
        });
    }

    // Handle AJAX form submission for userForm
    const userFormElement = document.getElementById('userFormModal'); // تم تغيير ID
    if(userFormElement) {
        userFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(userFormElement);
            const actionUrl = userFormElement.getAttribute('action');

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var userModalInstance = bootstrap.Modal.getInstance(document.getElementById('userModal'));
                    if(userModalInstance) userModalInstance.hide();
                    window.location.reload();
                } else {
                    alert('خطأ: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./includes/modals/lease_type_modal.php =====
<?php
// includes/modals/lease_type_modal.php

if (!isset($csrf_token)) {
    // عادةً ما يتم تضمين هذا الملف في سياق حيث $csrf_token معرف بالفعل.
    // إذا لم يكن كذلك، يجب على الصفحة المتضمنة تعريفه.
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_lease_type_modal';
    if ($csrf_token === 'fallback_csrf_lease_type_modal') {
        error_log("Warning: CSRF token was not set by the parent page for lease_type_modal.php.");
    }
}
?>
<div class="modal fade" id="leaseTypeModal" tabindex="-1" aria-labelledby="leaseTypeModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="leaseTypeFormModal"> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="lease_type_id" id="lease_type_id_modal_ltypes" value=""> <input type="hidden" name="action" id="lease_type_form_action_modal_ltypes" value=""> <div class="modal-header">
                    <h5 class="modal-title" id="leaseTypeModalLabel_ltypes">تفاصيل نوع عقد الإيجار</h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="lease_type_name_modal_ltypes" class="form-label">المعرف (بالانجليزية - بدون مسافات) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="lease_type_name_modal_ltypes" name="type_name" required placeholder="مثال: residential, commercial">
                        <small class="form-text text-muted">يستخدم داخلياً في النظام، يجب أن يكون فريداً.</small>
                    </div>
                    <div class="mb-3">
                        <label for="lease_type_display_name_ar_modal_ltypes" class="form-label">الاسم المعروض (بالعربية) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="lease_type_display_name_ar_modal_ltypes" name="display_name_ar" required placeholder="مثال: عقد سكني، عقد تجاري">
                    </div>
                    
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="leaseTypeSubmitButtonTextModalLtypes">حفظ البيانات</span> </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/utility_type_modal.php =====
<?php
// includes/modals/utility_type_modal.php
if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_utility_type_modal';
}
?>
<div class="modal fade" id="utilityTypeModal" tabindex="-1" aria-labelledby="utilityTypeModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="utilityTypeFormModal">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="utility_type_id" id="utility_type_id_modal_utypes_page" value="">
                <input type="hidden" name="action" id="utility_type_form_action_modal_utypes_page" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="utilityTypeModalLabel">تفاصيل نوع المرفق</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="utility_type_name_modal" class="form-label">اسم نوع المرفق <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="utility_type_name_modal" name="utility_type_name_modal" required placeholder="مثال: كهرباء, ماء, غاز">
                    </div>
                    <div class="mb-3">
                        <label for="unit_of_measure_modal" class="form-label">وحدة القياس <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="unit_of_measure_modal" name="unit_of_measure_modal" required placeholder="مثال: kWh, m³, وحدة">
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="utilityTypeSubmitButtonText">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/invoice_modal.php =====
<?php
// includes/modals/invoice_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : '';
}

// --- جلب قائمة عقود الإيجار النشطة لاختيارها ---
$active_leases_list_for_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $leases_query_modal = "SELECT l.id as lease_id, l.lease_contract_number, t.full_name as tenant_name, p.name as property_name, u.unit_number
                           FROM leases l
                           JOIN tenants t ON l.tenant_id = t.id
                           JOIN units u ON l.unit_id = u.id
                           JOIN properties p ON u.property_id = p.id
                           WHERE l.status = 'Active' OR l.status = 'Pending'
                           ORDER BY t.full_name ASC, l.lease_start_date DESC";
    $leases_result_modal = $mysqli->query($leases_query_modal);
    if ($leases_result_modal) {
        while ($lease_row_modal = $leases_result_modal->fetch_assoc()) {
            $active_leases_list_for_modal[] = $lease_row_modal;
        }
        $leases_result_modal->free();
    }
}
// --- جلب قائمة المستأجرين (إذا كانت الفاتورة لا ترتبط بعقد محدد) ---
$tenants_list_for_invoice_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $tenants_q_inv_modal = "SELECT id, full_name, national_id_iqama FROM tenants ORDER BY full_name ASC";
    if($tenants_r_inv_modal = $mysqli->query($tenants_q_inv_modal)){
        while($tenant_r_inv_modal = $tenants_r_inv_modal->fetch_assoc()){ $tenants_list_for_invoice_modal[] = $tenant_r_inv_modal; }
        $tenants_r_inv_modal->free();
    }
}


$invoice_types_zatca_display = [ // لأنواع الفواتير حسب ZATCA
    'SimplifiedInvoice' => 'فاتورة ضريبية مبسطة (B2C)',
    'Invoice' => 'فاتورة ضريبية (B2B)',
    'DebitNote' => 'إشعار مدين',
    'CreditNote' => 'إشعار دائن'
];

$invoice_statuses_display = [ // حالات الفاتورة الداخلية
    'Draft' => 'مسودة', 'Unpaid' => 'غير مدفوعة', 'Partially Paid' => 'مدفوعة جزئياً',
    'Paid' => 'مدفوعة', 'Overdue' => 'متأخرة', 'Cancelled' => 'ملغاة', 'Void' => 'لاغية'
];

$default_vat_percentage = defined('VAT_PERCENTAGE') ? VAT_PERCENTAGE : 15.00;

$zatca_vat_categories = [ // حسب دليل مطوري ZATCA
    'S' => 'خاضع للنسبة الأساسية (Standard rated)',
    'Z' => 'خاضع لنسبة الصفر (Zero rated goods/services)',
    'E' => 'معفى من الضريبة (Exempt from VAT)',
    'O' => 'خارج نطاق الضريبة (Services outside scope of VAT / Not subject to VAT)'
];

?>
<div class="modal fade" id="invoiceModal" tabindex="-1" aria-labelledby="invoiceModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content shadow-lg">
            <form id="invoiceForm" method="POST" action=""> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="invoice_id" id="invoice_id_modal" value="">
                <input type="hidden" name="action" id="invoice_form_action_modal" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="invoiceModalLabel">تفاصيل الفاتورة</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <h6 class="mb-3 text-primary">المعلومات الأساسية للفاتورة:</h6>
                    <div class="row gx-3">
                        <div class="col-md-3 mb-3">
                            <label for="invoice_number_modal" class="form-label">رقم الفاتورة (داخلي) <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="invoice_number_modal" name="invoice_number" required placeholder="مثال: INV-2025-001">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="invoice_sequence_number_modal" class="form-label">رقم تسلسل الفاتورة (ICV) <span class="text-danger">*</span></label>
                            <input type="number" class="form-control form-control-sm" id="invoice_sequence_number_modal" name="invoice_sequence_number" required min="1" placeholder="لـ ZATCA">
                             <small class="form-text text-muted">يجب أن يكون متسلسلاً لكل جهاز/نظام.</small>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="invoice_date_modal" class="form-label">تاريخ إصدار الفاتورة <span class="text-danger">*</span></label>
                            <input type="date" class="form-control form-control-sm" id="invoice_date_modal" name="invoice_date" value="<?php echo date('Y-m-d'); ?>" required>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="invoice_time_modal" class="form-label">وقت إصدار الفاتورة <span class="text-danger">*</span></label>
                            <input type="time" class="form-control form-control-sm" id="invoice_time_modal" name="invoice_time" value="<?php echo date('H:i:s'); ?>" required>
                        </div>
                    </div>
                    <div class="row gx-3">
                        <div class="col-md-3 mb-3">
                            <label for="due_date_modal" class="form-label">تاريخ الاستحقاق <span class="text-danger">*</span></label>
                            <input type="date" class="form-control form-control-sm" id="due_date_modal" name="due_date" value="<?php echo date('Y-m-d'); ?>" required>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="invoice_type_zatca_modal" class="form-label">نوع الفاتورة (ZATCA) <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="invoice_type_zatca_modal" name="invoice_type_zatca" required>
                                <?php foreach ($invoice_types_zatca_display as $key => $value): ?>
                                    <option value="<?php echo $key; ?>" <?php echo ($key === 'SimplifiedInvoice') ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                         <div class="col-md-3 mb-3">
                            <label for="transaction_type_code_modal" class="form-label">رمز نوع المعاملة (ZATCA BT-3)</label>
                            <input type="text" class="form-control form-control-sm" id="transaction_type_code_modal" name="transaction_type_code" value="388" placeholder="388">
                        </div>
                         <div class="col-md-3 mb-3">
                            <label for="invoice_status_modal" class="form-label">حالة الفاتورة (داخلي) <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="invoice_status_modal" name="invoice_status" required>
                                <?php foreach ($invoice_statuses_display as $key => $value): ?>
                                    <option value="<?php echo $key; ?>" <?php echo ($key === 'Unpaid') ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>
                     <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="lease_id_modal" class="form-label">مرتبطة بعقد إيجار (اختياري)</label>
                            <select class="form-select form-select-sm" id="lease_id_modal" name="lease_id">
                                <option value="">-- لا يوجد عقد محدد --</option>
                                <?php foreach ($active_leases_list_for_modal as $lease_item): ?>
                                    <option value="<?php echo $lease_item['lease_id']; ?>" data-tenant-id="<?php echo $lease_item['tenant_id_for_lease_in_invoice_modal'] ?? ''; /* JS will need to populate this tenant id */ ?>">
                                        <?php echo esc_html($lease_item['lease_contract_number'] . ' (' . $lease_item['tenant_name'] . ' - ' . $lease_item['property_name'] . '/' . $lease_item['unit_number'] . ')'); ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="tenant_id_invoice_modal" class="form-label">المستأجر/العميل (إذا لم يتم اختيار عقد) <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="tenant_id_invoice_modal" name="tenant_id_invoice_direct" required>
                                <option value="">-- اختر المستأجر/العميل --</option>
                                 <?php foreach ($tenants_list_for_invoice_modal as $tenant_inv_item): ?>
                                    <option value="<?php echo $tenant_inv_item['id']; ?>">
                                        <?php echo esc_html($tenant_inv_item['full_name'] . ' (هوية: ' . $tenant_inv_item['national_id_iqama'] . ')'); ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>
                     <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="purchase_order_id_modal" class="form-label">رقم أمر الشراء (ZATCA BT-13)</label>
                            <input type="text" class="form-control form-control-sm" id="purchase_order_id_modal" name="purchase_order_id" placeholder="PO12345">
                        </div>
                        <div class="col-md-6 mb-3">
                             <label for="contract_id_modal_invoice" class="form-label">رقم العقد المرجعي (ZATCA BT-12)</label>
                            <input type="text" class="form-control form-control-sm" id="contract_id_modal_invoice" name="contract_id_invoice" placeholder="CON987">
                        </div>
                    </div>
                     <div class="mb-3">
                        <label for="invoice_description_modal" class="form-label">وصف عام للفاتورة</label>
                        <textarea class="form-control form-control-sm" id="invoice_description_modal" name="invoice_description" rows="2" placeholder="مثال: فاتورة إيجار شهر مايو، خدمات صيانة"></textarea>
                    </div>
                     <div class="mb-3">
                        <label for="zatca_notes_modal" class="form-label">ملاحظات ZATCA (لإشعارات المدين/الدائن)</label>
                        <textarea class="form-control form-control-sm" id="zatca_notes_modal" name="zatca_notes" rows="2" placeholder="سبب إصدار الإشعار المدين أو الدائن"></textarea>
                    </div>


                    <hr class="my-4">
                    <h6 class="mb-3 text-primary">بنود الفاتورة:</h6>
                    <div id="invoiceItemsContainerModal">
                        <div class="row gx-2 gy-2 align-items-center invoice-item-row-modal mb-2" style="display:none;" id="invoiceItemTemplateModal">
                            <div class="col-md-3">
                                <input type="text" name="item_name[]" class="form-control form-control-sm item-name" placeholder="اسم/وصف البند" >
                            </div>
                            <div class="col-md-1">
                                <input type="number" name="item_quantity[]" class="form-control form-control-sm item-quantity" value="1" min="0.01" step="0.01" >
                            </div>
                            <div class="col-md-2">
                                <input type="number" name="item_unit_price[]" class="form-control form-control-sm item-unit-price" value="0.00" min="0" step="0.01" >
                            </div>
                            <div class="col-md-2">
                                <select name="item_vat_category_code[]" class="form-select form-select-sm item-vat-category">
                                    <?php foreach($zatca_vat_categories as $code => $desc): ?>
                                    <option value="<?php echo $code; ?>" <?php echo ($code === 'S') ? 'selected' : ''; ?>><?php echo esc_html($desc); ?></option>
                                    <?php endforeach; ?>
                                </select>
                            </div>
                             <div class="col-md-1">
                                <input type="number" name="item_vat_percentage[]" class="form-control form-control-sm item-vat-percentage" value="<?php echo $default_vat_percentage; ?>" min="0" max="100" step="0.01" >
                            </div>
                            <div class="col-md-2">
                                <input type="number" name="item_discount_amount[]" class="form-control form-control-sm item-discount" value="0.00" min="0" step="0.01" placeholder="خصم البند">
                            </div>
                            <div class="col-md-1 text-end">
                                <button type="button" class="btn btn-sm btn-outline-danger removeItemBtnModal"><i class="bi bi-trash"></i></button>
                            </div>
                        </div>
                    </div>
                    <button type="button" id="addItemBtnModal" class="btn btn-sm btn-outline-success mt-2"><i class="bi bi-plus-circle"></i> إضافة بند جديد</button>

                    <hr class="my-4">
                    <h6 class="mb-3 text-primary">ملخص الفاتورة:</h6>
                     <div class="row gx-3">
                        <div class="col-md-3 mb-3">
                            <label for="invoice_sub_total_amount_modal" class="form-label">المجموع الفرعي (قبل الضريبة والخصم الكلي)</label>
                            <input type="text" class="form-control form-control-sm" id="invoice_sub_total_amount_modal" name="invoice_sub_total_amount" value="0.00" readonly>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="invoice_total_discount_modal" class="form-label">إجمالي الخصم على الفاتورة</label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="invoice_total_discount_modal" name="invoice_total_discount" value="0.00" min="0">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="invoice_vat_percentage_modal_header" class="form-label">نسبة ضريبة القيمة المضافة (%) (للفاتورة ككل)</label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="invoice_vat_percentage_modal_header" name="invoice_vat_percentage_header" value="<?php echo $default_vat_percentage; ?>" min="0" max="100">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="invoice_total_vat_amount_modal" class="form-label">إجمالي ضريبة القيمة المضافة</label>
                            <input type="text" class="form-control form-control-sm" id="invoice_total_vat_amount_modal" name="invoice_total_vat_amount" value="0.00" readonly>
                        </div>
                    </div>
                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="invoice_total_amount_modal" class="form-label fw-bold fs-5">المبلغ الإجمالي المستحق</label>
                            <input type="text" class="form-control form-control-sm fw-bold fs-5" id="invoice_total_amount_modal" name="invoice_total_amount" value="0.00" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="invoice_paid_amount_modal" class="form-label">المبلغ المدفوع مسبقاً (إذا وجد)</label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="invoice_paid_amount_modal" name="invoice_paid_amount" value="0.00" min="0">
                        </div>
                    </div>

                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="invoiceSubmitButtonText">حفظ الفاتورة</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// JavaScript for Invoice Modal (Item Management & Calculations)
document.addEventListener('DOMContentLoaded', function() {
    var invoiceModal = document.getElementById('invoiceModal');
    if (!invoiceModal) return;

    var itemsContainer = invoiceModal.querySelector('#invoiceItemsContainerModal');
    var addItemBtn = invoiceModal.querySelector('#addItemBtnModal');
    var itemTemplate = invoiceModal.querySelector('#invoiceItemTemplateModal');

    // Function to add a new item row
    function addNewItemRow() {
        if (!itemTemplate) return;
        var newItemRow = itemTemplate.cloneNode(true);
        newItemRow.removeAttribute('id');
        newItemRow.style.display = 'flex'; // or 'grid' or 'block' depending on your row layout

        // Clear input values in the new row (template might have default values)
        newItemRow.querySelectorAll('input[type="text"], input[type="number"]').forEach(function(input) {
            if (!input.classList.contains('item-quantity') && !input.classList.contains('item-vat-percentage') && !input.classList.contains('item-discount')) {
                 input.value = '';
            }
            if (input.classList.contains('item-quantity')) input.value = '1';
            if (input.classList.contains('item-vat-percentage')) input.value = '<?php echo $default_vat_percentage; ?>';
            if (input.classList.contains('item-discount')) input.value = '0.00';

        });
        newItemRow.querySelectorAll('select.item-vat-category option[value="S"]').forEach(function(opt){ opt.selected = true; });


        // Add event listener to the new remove button
        var removeBtn = newItemRow.querySelector('.removeItemBtnModal');
        if (removeBtn) {
            removeBtn.addEventListener('click', function() {
                this.closest('.invoice-item-row-modal').remove();
                calculateInvoiceTotals();
            });
        }
        // Add event listeners for calculation on change
        newItemRow.querySelectorAll('.item-quantity, .item-unit-price, .item-vat-percentage, .item-discount').forEach(function(input) {
            input.addEventListener('change', calculateInvoiceTotals);
            input.addEventListener('keyup', calculateInvoiceTotals);
        });

        if (itemsContainer) {
            itemsContainer.appendChild(newItemRow);
        }
        calculateInvoiceTotals(); // Recalculate after adding
    }

    if (addItemBtn) {
        addItemBtn.addEventListener('click', addNewItemRow);
    }

    // Function to calculate totals
    function calculateInvoiceTotals() {
        if (!invoiceModal) return;
        var itemRows = itemsContainer.querySelectorAll('.invoice-item-row-modal:not(#invoiceItemTemplateModal)'); // Exclude template
        var subTotal = 0;
        var totalVAT = 0;

        itemRows.forEach(function(row) {
            var quantity = parseFloat(row.querySelector('.item-quantity').value) || 0;
            var unitPrice = parseFloat(row.querySelector('.item-unit-price').value) || 0;
            var itemDiscount = parseFloat(row.querySelector('.item-discount').value) || 0;
            var vatPercentage = parseFloat(row.querySelector('.item-vat-percentage').value) || 0;

            var itemSubTotalBeforeDiscount = quantity * unitPrice;
            var itemTaxableAmount = itemSubTotalBeforeDiscount - itemDiscount;
            if(itemTaxableAmount < 0) itemTaxableAmount = 0; // Cannot be negative

            var itemVAT = (itemTaxableAmount * vatPercentage) / 100;

            subTotal += itemTaxableAmount; // This subtotal is after item discounts, before invoice-level discount and VAT
            totalVAT += itemVAT;
        });

        var invoiceSubTotalInput = invoiceModal.querySelector('#invoice_sub_total_amount_modal');
        var invoiceTotalDiscountInput = invoiceModal.querySelector('#invoice_total_discount_modal');
        var invoiceHeaderVatPercentageInput = invoiceModal.querySelector('#invoice_vat_percentage_modal_header');
        var invoiceTotalVATInput = invoiceModal.querySelector('#invoice_total_vat_amount_modal');
        var invoiceTotalAmountInput = invoiceModal.querySelector('#invoice_total_amount_modal');

        if (invoiceSubTotalInput) invoiceSubTotalInput.value = subTotal.toFixed(2);

        var invoiceLevelDiscount = parseFloat(invoiceTotalDiscountInput.value) || 0;
        var finalTaxableAmount = subTotal - invoiceLevelDiscount;
        if(finalTaxableAmount < 0) finalTaxableAmount = 0;

        // VAT calculation preference:
        // 1. Sum of item-level calculated VATs (more accurate for ZATCA if items have different rates)
        // 2. Or, calculate based on invoice-level subtotal (after discount) and header VAT rate.
        // For ZATCA, item-level is usually preferred. Let's use sum of item VATs.
        var finalTotalVAT = totalVAT; // Using sum of item VATs.

        // If you prefer to use header VAT rate on the net amount after invoice discount:
        // var headerVatRate = parseFloat(invoiceHeaderVatPercentageInput.value) || <?php echo $default_vat_percentage; ?>;
        // finalTotalVAT = (finalTaxableAmount * headerVatRate) / 100;


        if (invoiceTotalVATInput) invoiceTotalVATInput.value = finalTotalVAT.toFixed(2);
        if (invoiceTotalAmountInput) invoiceTotalAmountInput.value = (finalTaxableAmount + finalTotalVAT).toFixed(2);
    }

    // Event listeners for invoice-level discount and VAT rate changes
    var invDiscountInput = invoiceModal.querySelector('#invoice_total_discount_modal');
    var invVatHeaderInput = invoiceModal.querySelector('#invoice_vat_percentage_modal_header');
    if(invDiscountInput) {
        invDiscountInput.addEventListener('change', calculateInvoiceTotals);
        invDiscountInput.addEventListener('keyup', calculateInvoiceTotals);
    }
    if(invVatHeaderInput) {
        // If using header VAT to recalculate total VAT, uncomment these.
        // invVatHeaderInput.addEventListener('change', calculateInvoiceTotals);
        // invVatHeaderInput.addEventListener('keyup', calculateInvoiceTotals);
    }


    // Initial calculation when modal is shown (especially for edit)
    invoiceModal.addEventListener('shown.bs.modal', function () {
        // If in edit mode, item rows should be populated by server-side PHP/JS when modal data is set.
        // After populating, call calculateInvoiceTotals().
        // For now, if items are dynamically added, calculate.
        var existingItemRows = itemsContainer.querySelectorAll('.invoice-item-row-modal:not(#invoiceItemTemplateModal)');
        existingItemRows.forEach(function(row) {
             row.querySelectorAll('.item-quantity, .item-unit-price, .item-vat-percentage, .item-discount').forEach(function(input) {
                input.addEventListener('change', calculateInvoiceTotals);
                input.addEventListener('keyup', calculateInvoiceTotals);
            });
            row.querySelector('.removeItemBtnModal').addEventListener('click', function() {
                this.closest('.invoice-item-row-modal').remove();
                calculateInvoiceTotals();
            });
        });
        calculateInvoiceTotals();
    });

    // Handle lease selection to auto-populate tenant if possible
    var leaseSelect = invoiceModal.querySelector('#lease_id_modal');
    var tenantDirectSelect = invoiceModal.querySelector('#tenant_id_invoice_modal');
    if(leaseSelect && tenantDirectSelect){
        leaseSelect.addEventListener('change', function(){
            if(this.value !== ""){
                var selectedLeaseOption = this.options[this.selectedIndex];
                var tenantIdForLease = selectedLeaseOption.getAttribute('data-tenant-id');
                if(tenantIdForLease){
                    tenantDirectSelect.value = tenantIdForLease;
                    tenantDirectSelect.setAttribute('disabled', 'disabled'); // Disable direct tenant selection
                } else {
                     tenantDirectSelect.removeAttribute('disabled');
                }
            } else {
                tenantDirectSelect.removeAttribute('disabled');
                tenantDirectSelect.value = ""; // Clear tenant if lease is unselected
            }
        });
    }


    // Add at least one item row when the modal is prepared for 'add_invoice'
    // This is typically done when the 'Add Invoice' button is clicked and modal 'show.bs.modal' is triggered
    // See the part in index.php that handles modal show for 'add_invoice'
});
</script>
===== ./includes/modals/lease_modal.php =====
<?php
// includes/modals/lease_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : '';
}

// --- جلب قائمة الوحدات ---
$units_list_for_lease_modal = []; // تم تغيير الاسم
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $units_query_lease_modal = "SELECT u.id as unit_id, u.unit_number, u.status as unit_status, p.name as property_name, p.property_code
                          FROM units u
                          JOIN properties p ON u.property_id = p.id
                          ORDER BY p.name ASC, u.unit_number ASC";
    $units_result_lease_modal = $mysqli->query($units_query_lease_modal);
    if ($units_result_lease_modal) {
        while ($unit_row_lease_modal = $units_result_lease_modal->fetch_assoc()) {
            $units_list_for_lease_modal[] = $unit_row_lease_modal;
        }
        $units_result_lease_modal->free();
    } else {
        error_log("Lease Modal: Failed to fetch units: " . $mysqli->error);
    }
}

// --- جلب قائمة المستأجرين ---
$tenants_list_for_lease_modal = []; // تم تغيير الاسم
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $tenants_query_lease_modal = "SELECT id, full_name, national_id_iqama FROM tenants ORDER BY full_name ASC";
    $tenants_result_lease_modal = $mysqli->query($tenants_query_lease_modal);
    if ($tenants_result_lease_modal) {
        while ($tenant_row_lease_modal = $tenants_result_lease_modal->fetch_assoc()) {
            $tenants_list_for_lease_modal[] = $tenant_row_lease_modal;
        }
        $tenants_result_lease_modal->free();
    } else {
        error_log("Lease Modal: Failed to fetch tenants: " . $mysqli->error);
    }
}

// --- جلب قائمة أنواع عقود الإيجار ---
$lease_types_list_for_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $ltypes_query_modal = "SELECT id, display_name_ar FROM lease_types ORDER BY display_name_ar ASC";
    $ltypes_result_modal = $mysqli->query($ltypes_query_modal);
    if ($ltypes_result_modal) {
        while ($ltype_row_modal = $ltypes_result_modal->fetch_assoc()) {
            $lease_types_list_for_modal[] = $ltype_row_modal;
        }
        $ltypes_result_modal->free();
    } else {
        error_log("Lease Modal: Failed to fetch lease types: " . $mysqli->error);
    }
}


$payment_frequencies_lease_modal_options = [ // تم تغيير الاسم
    'Monthly' => 'شهري',
    'Quarterly' => 'ربع سنوي',
    'Semi-Annually' => 'نصف سنوي',
    'Annually' => 'سنوي',
    'Custom' => 'مخصص'
];

$lease_statuses_lease_modal_options = [ // تم تغيير الاسم
    'Pending' => 'معلق',
    'Active' => 'نشط',
    'Expired' => 'منتهي الصلاحية',
    'Terminated' => 'ملغي',
    'Draft' => 'مسودة'
];

?>
<div class="modal fade" id="leaseModal" tabindex="-1" aria-labelledby="leaseModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="leaseFormModal"> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="lease_id" id="lease_id_modal_leases" value=""> <input type="hidden" name="action" id="lease_form_action_modal_leases" value=""> <div class="modal-header">
                    <h5 class="modal-title" id="leaseModalLabel_leases">تفاصيل عقد الإيجار</h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="lease_contract_number_modal_leases" class="form-label">رقم عقد الإيجار <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="lease_contract_number_modal_leases" name="lease_contract_number" required placeholder="مثال: LEASE-2025-001">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="unit_id_modal_leases" class="form-label">الوحدة المستأجرة <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="unit_id_modal_leases" name="unit_id" required>
                                <option value="">-- اختر الوحدة --</option>
                                <?php foreach ($units_list_for_lease_modal as $unit_item_lease): ?>
                                    <option value="<?php echo $unit_item_lease['unit_id']; ?>" data-unit-status="<?php echo esc_attr($unit_item_lease['unit_status']); ?>">
                                        <?php echo esc_html($unit_item_lease['property_name'] . ' (كود: ' . $unit_item_lease['property_code'] . ') - وحدة: ' . $unit_item_lease['unit_number'] . ' [' . $unit_item_lease['unit_status'] . ']'); ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                             <small id="unit_status_warning_modal_leases" class="text-danger d-none">تحذير: هذه الوحدة ليست شاغرة حاليًا.</small>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="tenant_id_modal_leases" class="form-label">المستأجر <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="tenant_id_modal_leases" name="tenant_id" required>
                                <option value="">-- اختر المستأجر --</option>
                                <?php foreach ($tenants_list_for_lease_modal as $tenant_item_lease): ?>
                                    <option value="<?php echo $tenant_item_lease['id']; ?>">
                                        <?php echo esc_html($tenant_item_lease['full_name'] . ' (هوية: ' . $tenant_item_lease['national_id_iqama'] . ')'); ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="lease_type_id_modal_leases" class="form-label">نوع العقد</label>
                            <select class="form-select form-select-sm" id="lease_type_id_modal_leases" name="lease_type_id">
                                <option value="">-- اختر نوع العقد --</option>
                                <?php foreach ($lease_types_list_for_modal as $ltype_item_modal): ?>
                                    <option value="<?php echo $ltype_item_modal['id']; ?>"><?php echo esc_html($ltype_item_modal['display_name_ar']); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="lease_start_date_modal_leases" class="form-label">تاريخ بدء العقد <span class="text-danger">*</span></label>
                            <input type="date" class="form-control form-control-sm" id="lease_start_date_modal_leases" name="lease_start_date" required>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="lease_end_date_modal_leases" class="form-label">تاريخ انتهاء العقد <span class="text-danger">*</span></label>
                            <input type="date" class="form-control form-control-sm" id="lease_end_date_modal_leases" name="lease_end_date" required>
                        </div>
                    </div>
                     <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="rent_amount_modal_leases" class="form-label">مبلغ الإيجار <span class="text-danger">*</span></label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="rent_amount_modal_leases" name="rent_amount" required min="0" placeholder="0.00">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="payment_frequency_modal_leases" class="form-label">دورية السداد <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="payment_frequency_modal_leases" name="payment_frequency" required>
                                <?php foreach ($payment_frequencies_lease_modal_options as $key => $value): ?>
                                    <option value="<?php echo $key; ?>"><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="payment_due_day_modal_leases" class="form-label">يوم استحقاق الدفعة</label>
                            <input type="number" class="form-control form-control-sm" id="payment_due_day_modal_leases" name="payment_due_day" min="1" max="31" placeholder="مثال: 1">
                            <small class="form-text text-muted">يوم من الشهر/الفترة تستحق فيه الدفعة.</small>
                        </div>
                    </div>

                    <div class="row gx-3">
                         <div class="col-md-4 mb-3">
                            <label for="deposit_amount_modal_leases" class="form-label">مبلغ التأمين</label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="deposit_amount_modal_leases" name="deposit_amount" min="0" placeholder="0.00">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="grace_period_days_modal_leases" class="form-label">فترة سماح (أيام)</label>
                            <input type="number" class="form-control form-control-sm" id="grace_period_days_modal_leases" name="grace_period_days" min="0" value="0">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="lease_status_modal_leases" class="form-label">حالة العقد <span class="text-danger">*</span></label>
                             <select class="form-select form-select-sm" id="lease_status_modal_leases" name="lease_status" required>
                                <?php foreach ($lease_statuses_lease_modal_options as $key => $value): ?>
                                    <option value="<?php echo $key; ?>"><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>
                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="next_billing_date_modal_leases" class="form-label">تاريخ الفاتورة التالية</label>
                            <input type="date" class="form-control form-control-sm" id="next_billing_date_modal_leases" name="next_billing_date">
                             <small class="form-text text-muted">اختياري، يمكن تحديثه تلقائياً.</small>
                        </div>
                         <div class="col-md-4 mb-3">
                            <label for="last_billed_on_modal_leases" class="form-label">تاريخ آخر فاتورة صدرت</label>
                            <input type="date" class="form-control form-control-sm" id="last_billed_on_modal_leases" name="last_billed_on">
                             <small class="form-text text-muted">اختياري، يمكن تحديثه تلقائياً.</small>
                        </div>
                         <div class="col-md-4 mb-3">
                            <label for="contract_document_modal_leases" class="form-label">مستند العقد (PDF)</label>
                            <input type="file" class="form-control form-control-sm" id="contract_document_modal_leases" name="contract_document" accept=".pdf">
                            <small id="current_contract_document_modal_leases" class="form-text text-muted"></small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="lease_notes_modal_leases" class="form-label">ملاحظات على العقد</label>
                        <textarea class="form-control form-control-sm" id="lease_notes_modal_leases" name="lease_notes" rows="3" placeholder="شروط خاصة، ملاحظات إضافية..."></textarea>
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="leaseSubmitButtonTextModalLeases">حفظ البيانات</span> </button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
// Script to handle unit status warning in the lease modal
document.addEventListener('DOMContentLoaded', function() {
    var unitSelectLeaseModal = document.getElementById('unit_id_modal_leases'); // تم تغيير ID
    var unitStatusWarningLeaseModal = document.getElementById('unit_status_warning_modal_leases'); // تم تغيير ID

    if (unitSelectLeaseModal && unitStatusWarningLeaseModal) {
        unitSelectLeaseModal.addEventListener('change', function() {
            var selectedOption = this.options[this.selectedIndex];
            if (selectedOption) { // Ensure an option is actually selected
                var unitStatus = selectedOption.getAttribute('data-unit-status');
                if (unitStatus && unitStatus.toLowerCase() !== 'vacant') {
                    unitStatusWarningLeaseModal.classList.remove('d-none');
                    // يمكنك تحديث النص ليكون أكثر وضوحًا إذا أردت
                    unitStatusWarningLeaseModal.textContent = 'تحذير: هذه الوحدة حاليًا "' + unitStatus + '".'; 
                } else {
                    unitStatusWarningLeaseModal.classList.add('d-none');
                }
            } else {
                unitStatusWarningLeaseModal.classList.add('d-none'); // No option selected, hide warning
            }
        });
    }
});
</script>
===== ./includes/modals/property_type_modal.php =====
<?php
// includes/modals/property_type_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_prop_type_modal';
}
?>
<div class="modal fade" id="propertyTypeModal" tabindex="-1" aria-labelledby="propertyTypeModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="propertyTypeFormModal">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="property_type_id" id="property_type_id_modal_ptypes" value="">
                <input type="hidden" name="action" id="property_type_form_action_modal_ptypes" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="propertyTypeModalLabel_ptypes">تفاصيل نوع العقار</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="property_type_name_modal_ptypes" class="form-label">المعرف (بالانجليزية - بدون مسافات) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="property_type_name_modal_ptypes" name="type_name" required placeholder="مثال: residential, commercial_building">
                        <small class="form-text text-muted">يستخدم داخلياً في النظام، يجب أن يكون فريداً (أحرف إنجليزية، أرقام، وشرطة سفلية).</small>
                    </div>
                    <div class="mb-3">
                        <label for="property_type_display_name_ar_modal_ptypes" class="form-label">الاسم المعروض (بالعربية) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="property_type_display_name_ar_modal_ptypes" name="display_name_ar" required placeholder="مثال: عقار سكني، مبنى تجاري">
                    </div>
                    
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="propertyTypeSubmitButtonTextModalPtypes">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/role_modal.php =====
<?php
// includes/modals/role_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_role_modal';
}
?>
<div class="modal fade" id="roleModal" tabindex="-1" aria-labelledby="roleModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="roleFormModal">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="role_id" id="role_id_modal_roles_page" value="">
                <input type="hidden" name="action" id="role_form_action_modal_roles_page" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="roleModalLabel_roles_page">تفاصيل الدور</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="role_name_modal_roles_page" class="form-label">المعرف (بالانجليزية - بدون مسافات) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="role_name_modal_roles_page" name="role_name" required placeholder="مثال: admin, staff, accountant">
                        <small class="form-text text-muted">يستخدم داخلياً في النظام، يجب أن يكون فريداً (أحرف إنجليزية، أرقام، وشرطة سفلية).</small>
                    </div>
                    <div class="mb-3">
                        <label for="role_display_name_ar_modal_roles_page" class="form-label">الاسم المعروض (بالعربية) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="role_display_name_ar_modal_roles_page" name="display_name_ar" required placeholder="مثال: مسؤول نظام، موظف، محاسب">
                    </div>
                    <div class="mb-3">
                        <label for="role_description_modal_roles_page" class="form-label">الوصف (اختياري)</label>
                        <textarea class="form-control form-control-sm" id="role_description_modal_roles_page" name="description" rows="3" placeholder="وصف موجز لصلاحيات هذا الدور"></textarea>
                    </div>
                    
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="roleSubmitButtonTextModalRolesPage">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/confirm_delete_modal.php =====
<?php
// includes/modals/confirm_delete_modal.php
?>
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="confirmDeleteModalLabel"><i class="bi bi-exclamation-triangle-fill me-2"></i> تأكيد عملية الحذف</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="إغلاق"></button>
            </div>
            <div class="modal-body">
                <p class="modal-body-text lead">هل أنت متأكد أنك تريد حذف هذا العنصر؟</p>
                <p class="text-muted small">لا يمكن التراجع عن هذا الإجراء بعد التأكيد.</p>
                <div id="additionalDeleteInfo" class="mt-2 text-muted small"></div> </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> إلغاء
                </button>
                <a href="#" id="confirmDeleteButton" class="btn btn-sm btn-danger">
                    <i class="bi bi-trash-fill"></i> نعم، قم بالحذف
                </a>
            </div>
        </div>
    </div>
</div>
===== ./includes/modals/owner_modal.php =====
<?php
// includes/modals/owner_modal.php

// التأكد من وجود توكن CSRF، مع قيمة احتياطية إذا لم يتم تعيينه بواسطة الصفحة المتضمنة
if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : '';
    if (empty($csrf_token)) {
        // إذا لم يتمكن من توليد التوكن، فهذه مشكلة أمنية محتملة
        error_log("تحذير: توكن CSRF فارغ في owner_modal.php. يجب أن يتم توليده بواسطة الصفحة المتضمنة.");
        // يمكن وضع قيمة عشوائية لمنع أخطاء PHP لكن هذا ليس آمنًا حقًا
        // $csrf_token = bin2hex(random_bytes(4));
    }
}
?>
<div class="modal fade" id="ownerModal" tabindex="-1" aria-labelledby="ownerModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="ownerForm" method="POST" action="">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="owner_id" id="owner_id" value="">
                <input type="hidden" name="action" id="form_action" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="ownerModalLabel">بيانات المالك</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="owner_name" class="form-label">اسم المالك <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="owner_name" name="owner_name" required placeholder="مثال: شركة العقارات المتحدة">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="owner_email" class="form-label">البريد الإلكتروني</label>
                            <input type="email" class="form-control form-control-sm" id="owner_email" name="owner_email" placeholder="example@domain.com">
                            <small class="form-text text-muted">اختياري، ولكن يفضل إدخاله للتواصل الرسمي.</small>
                        </div>
                    </div>
                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="owner_phone" class="form-label">رقم الهاتف</label>
                            <input type="tel" class="form-control form-control-sm" id="owner_phone" name="owner_phone" placeholder="مثال: 05XXXXXXXX">
                        </div>
                         <div class="col-md-6 mb-3">
                            <label for="owner_national_id" class="form-label">رقم الهوية/الإقامة/السجل التجاري</label>
                            <input type="text" class="form-control form-control-sm" id="owner_national_id" name="owner_national_id" placeholder="1XXXXXXXXX أو 7XXXXXXXXX">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="owner_address" class="form-label">العنوان</label>
                        <textarea class="form-control form-control-sm" id="owner_address" name="owner_address" rows="3" placeholder="مثال: الرياض، حي العليا، شارع الملك فهد"></textarea>
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="submitButtonText">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/user_modal.php =====
<?php
// includes/modals/user_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : '';
}

// --- جلب قائمة الأدوار ---
$roles_list_for_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $roles_query_modal = "SELECT id, display_name_ar FROM roles ORDER BY display_name_ar ASC";
    $roles_result_modal = $mysqli->query($roles_query_modal);
    if ($roles_result_modal) {
        while ($role_row_modal = $roles_result_modal->fetch_assoc()) {
            $roles_list_for_modal[] = $role_row_modal;
        }
        $roles_result_modal->free();
    } else {
        // خطأ في جلب الأدوار، يمكن تسجيله أو عرض رسالة
        error_log("User Modal: Failed to fetch roles: " . $mysqli->error);
    }
}


$user_is_active_options_modal = [ // تم تغيير الاسم ليكون فريداً داخل نطاق النافذة المنبثقة
    '1' => 'نشط',
    '0' => 'غير نشط (معطل)'
];
?>
<div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="userFormModal"> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="user_id" id="user_id_modal_users" value=""> <input type="hidden" name="action" id="user_form_action_modal" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="userModalLabel">بيانات المستخدم</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="user_full_name_modal" class="form-label">الاسم الكامل <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="user_full_name_modal" name="user_full_name" required placeholder="مثال: أحمد خالد المحمد">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="user_username_modal" class="form-label">اسم المستخدم (للدخول) <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="user_username_modal" name="user_username" required placeholder="english_letters_numbers_underscores">
                            <small class="form-text text-muted">أحرف إنجليزية، أرقام، وشرطة سفلية (_) فقط، بدون مسافات.</small>
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="user_email_modal" class="form-label">البريد الإلكتروني <span class="text-danger">*</span></label>
                            <input type="email" class="form-control form-control-sm" id="user_email_modal" name="user_email" required placeholder="user@example.com">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="user_role_id_modal" class="form-label">دور المستخدم <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="user_role_id_modal" name="role_id" required>
                                <option value="">-- اختر الدور --</option>
                                <?php foreach ($roles_list_for_modal as $role_item): ?>
                                    <option value="<?php echo $role_item['id']; ?>"><?php echo esc_html($role_item['display_name_ar']); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="user_password_modal" class="form-label">كلمة المرور</label>
                            <input type="password" class="form-control form-control-sm" id="user_password_modal" name="user_password" placeholder="اتركه فارغًا لعدم التغيير عند التعديل">
                            <small class="form-text text-muted" id="passwordHelpBlock_modal">عند إضافة مستخدم جديد، هذا الحقل مطلوب. عند التعديل، إذا تركته فارغًا، لن تتغير كلمة المرور الحالية.</small>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="user_confirm_password_modal" class="form-label">تأكيد كلمة المرور</label>
                            <input type="password" class="form-control form-control-sm" id="user_confirm_password_modal" name="user_confirm_password" placeholder="أعد كتابة كلمة المرور">
                        </div>
                    </div>
                     <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                             <label for="user_is_active_modal" class="form-label">حالة الحساب <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="user_is_active_modal" name="is_active" required>
                                <?php foreach ($user_is_active_options_modal as $key => $value): ?>
                                    <option value="<?php echo $key; ?>"><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small><br>
                    <small class="text-info">يجب أن تتكون كلمة المرور من 8 أحرف على الأقل، وتحتوي على حرف كبير، حرف صغير، رقم، ورمز خاص.</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="userSubmitButtonTextModal">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/payment_modal.php =====
<?php
// includes/modals/payment_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_payment_modal';
}

// --- جلب قائمة الفواتير (غير المدفوعة أو المدفوعة جزئياً) ---
$invoices_list_for_payment_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    // جلب الفواتير مع المبلغ المتبقي للدفع
    $invoices_query_pay_modal = "
        SELECT i.id, i.invoice_number, i.total_amount, i.due_date, t.full_name as tenant_name,
               (i.total_amount - COALESCE(SUM(p.amount_paid), 0)) as remaining_amount
        FROM invoices i
        JOIN tenants t ON i.tenant_id = t.id
        LEFT JOIN payments p ON i.id = p.invoice_id AND p.status = 'Completed' -- فقط المدفوعات المكتملة تؤثر على المتبقي
        WHERE i.status IN ('Unpaid', 'Partially Paid')
        GROUP BY i.id, i.invoice_number, i.total_amount, i.due_date, t.full_name
        HAVING remaining_amount > 0
        ORDER BY i.due_date ASC, i.invoice_number ASC";
        
    $invoices_result_pay_modal = $mysqli->query($invoices_query_pay_modal);
    if ($invoices_result_pay_modal) {
        while ($invoice_row_pay_modal = $invoices_result_pay_modal->fetch_assoc()) {
            $invoices_list_for_payment_modal[] = $invoice_row_pay_modal;
        }
        $invoices_result_pay_modal->free();
    } else {
        error_log("Payment Modal: Failed to fetch invoices: " . $mysqli->error);
    }
}

// --- جلب قائمة طرق الدفع النشطة ---
$payment_methods_list_for_payment_modal_dd = []; // تم تغيير الاسم ليكون أكثر تحديداً
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $pm_query_modal = "SELECT id, display_name_ar, method_name FROM payment_methods WHERE is_active = 1 ORDER BY display_name_ar ASC";
    $pm_result_modal = $mysqli->query($pm_query_modal);
    if ($pm_result_modal) {
        while ($pm_row_modal = $pm_result_modal->fetch_assoc()) {
            $payment_methods_list_for_payment_modal_dd[] = $pm_row_modal;
        }
        $pm_result_modal->free();
    } else {
        error_log("Payment Modal: Failed to fetch payment methods: " . $mysqli->error);
    }
}


$payment_statuses_modal_options = [ // تم تغيير الاسم
    'Pending' => 'معلقة',
    'Completed' => 'مكتملة',
    'Failed' => 'فشلت',
    'Cancelled' => 'ملغاة',
    'Refunded' => 'مستردة'
];
?>
<div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="paymentFormModal" enctype="multipart/form-data"> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="payment_id" id="payment_id_modal_payments_page" value=""> <input type="hidden" name="action" id="payment_form_action_modal_payments_page" value=""> <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel_payments_page">تسجيل دفعة جديدة</h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="invoice_id_modal_payments_page" class="form-label">الفاتورة المرتبطة <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="invoice_id_modal_payments_page" name="invoice_id" required>
                                <option value="">-- اختر الفاتورة --</option>
                                <?php foreach ($invoices_list_for_payment_modal as $invoice_item_pay): ?>
                                    <option value="<?php echo $invoice_item_pay['id']; ?>" 
                                            data-total-amount="<?php echo esc_attr($invoice_item_pay['total_amount']); ?>"
                                            data-remaining-amount="<?php echo esc_attr($invoice_item_pay['remaining_amount']); ?>">
                                        <?php echo esc_html('رقم: ' . $invoice_item_pay['invoice_number'] . ' - مستأجر: ' . $invoice_item_pay['tenant_name'] . ' (الإجمالي: ' . number_format($invoice_item_pay['total_amount'], 2) . '، المتبقي: ' . number_format($invoice_item_pay['remaining_amount'], 2) . ')'); ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                            <small id="invoice_details_text_payments_modal" class="form-text text-muted"></small>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="amount_paid_modal_payments_page" class="form-label">المبلغ المدفوع <span class="text-danger">*</span></label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="amount_paid_modal_payments_page" name="amount_paid" required min="0.01" placeholder="0.00">
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="payment_date_modal_payments_page" class="form-label">تاريخ الدفع <span class="text-danger">*</span></label>
                            <input type="date" class="form-control form-control-sm" id="payment_date_modal_payments_page" name="payment_date" required value="<?php echo date('Y-m-d'); ?>">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="payment_method_id_modal_payments_page" class="form-label">طريقة الدفع <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="payment_method_id_modal_payments_page" name="payment_method_id" required>
                                <option value="">-- اختر طريقة الدفع --</option>
                                <?php foreach ($payment_methods_list_for_payment_modal_dd as $pm_item_dd): ?>
                                    <option value="<?php echo $pm_item_dd['id']; ?>"><?php echo esc_html($pm_item_dd['display_name_ar']); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="payment_status_modal_payments_page" class="form-label">حالة الدفع <span class="text-danger">*</span></label>
                             <select class="form-select form-select-sm" id="payment_status_modal_payments_page" name="payment_status" required>
                                <?php foreach ($payment_statuses_modal_options as $key => $value): ?>
                                    <option value="<?php echo $key; ?>" <?php echo ($key === 'Completed') ? 'selected' : '';?>><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>
                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="receipt_number_modal_payments_page" class="form-label">رقم الإيصال/المرجع</label>
                            <input type="text" class="form-control form-control-sm" id="receipt_number_modal_payments_page" name="receipt_number" placeholder="مثال: INV-2025-001-P1">
                        </div>
                         <div class="col-md-6 mb-3">
                            <label for="payment_attachment_modal_payments_page" class="form-label">مرفق (إيصال، صورة تحويل)</label>
                            <input type="file" class="form-control form-control-sm" id="payment_attachment_modal_payments_page" name="payment_attachment" accept=".pdf,.jpg,.jpeg,.png,.gif">
                            <small id="current_payment_attachment_text_modal" class="form-text text-muted"></small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="payment_notes_modal_payments_page" class="form-label">ملاحظات على الدفعة</label>
                        <textarea class="form-control form-control-sm" id="payment_notes_modal_payments_page" name="payment_notes" rows="2" placeholder="أي تفاصيل إضافية"></textarea>
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="paymentSubmitButtonTextModalPaymentsPage">حفظ الدفعة</span> </button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
// Script to handle invoice selection and display remaining amount in payment modal
document.addEventListener('DOMContentLoaded', function() {
    var invoiceSelectPaymentModal = document.getElementById('invoice_id_modal_payments_page'); // تم تغيير ID
    var amountPaidInputPaymentModal = document.getElementById('amount_paid_modal_payments_page'); // تم تغيير ID
    var invoiceDetailsTextPaymentModal = document.getElementById('invoice_details_text_payments_modal'); // تم تغيير ID

    if (invoiceSelectPaymentModal && amountPaidInputPaymentModal && invoiceDetailsTextPaymentModal) {
        invoiceSelectPaymentModal.addEventListener('change', function() {
            var selectedOption = this.options[this.selectedIndex];
            if (selectedOption && selectedOption.value !== '') {
                var remainingAmount = parseFloat(selectedOption.getAttribute('data-remaining-amount')).toFixed(2);
                amountPaidInputPaymentModal.value = remainingAmount; // Set amount to remaining by default
                amountPaidInputPaymentModal.max = remainingAmount; // Set max to remaining
                invoiceDetailsTextPaymentModal.textContent = 'المبلغ المتبقي لهذه الفاتورة: ' + remainingAmount + ' ريال.';
            } else {
                amountPaidInputPaymentModal.value = '';
                amountPaidInputPaymentModal.max = '';
                invoiceDetailsTextPaymentModal.textContent = '';
            }
        });
    }
});
</script>
===== ./includes/modals/tenant_modal.php =====
<?php
// includes/modals/tenant_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : '';
}

// --- جلب قائمة أنواع المستأجرين ---
$tenant_types_list_for_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $ttypes_query_modal = "SELECT id, display_name_ar FROM tenant_types ORDER BY display_name_ar ASC";
    $ttypes_result_modal = $mysqli->query($ttypes_query_modal);
    if ($ttypes_result_modal) {
        while ($ttype_row_modal = $ttypes_result_modal->fetch_assoc()) {
            $tenant_types_list_for_modal[] = $ttype_row_modal;
        }
        $ttypes_result_modal->free();
    } else {
        error_log("Tenant Modal: Failed to fetch tenant types: " . $mysqli->error);
    }
}

$gender_options_modal = [
    '' => '-- اختر النوع --',
    'Male' => 'ذكر',
    'Female' => 'أنثى',
    'Other' => 'آخر'
];

?>
<div class="modal fade" id="tenantModal" tabindex="-1" aria-labelledby="tenantModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="tenantFormModal"> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="tenant_id" id="tenant_id_modal_tenants" value=""> <input type="hidden" name="action" id="tenant_form_action_modal_tenants" value=""> <div class="modal-header">
                    <h5 class="modal-title" id="tenantModalLabel_tenants">بيانات المستأجر</h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <nav>
                        <div class="nav nav-tabs mb-3" id="nav-tab-tenant-modal" role="tablist">
                            <button class="nav-link active" id="nav-basic-info-tab-modal" data-bs-toggle="tab" data-bs-target="#nav-basic-info-modal" type="button" role="tab" aria-controls="nav-basic-info-modal" aria-selected="true">المعلومات الأساسية</button>
                            <button class="nav-link" id="nav-zatca-buyer-info-tab-modal" data-bs-toggle="tab" data-bs-target="#nav-zatca-buyer-info-modal" type="button" role="tab" aria-controls="nav-zatca-buyer-info-modal" aria-selected="false">بيانات المشتري (ZATCA)</button>
                            <button class="nav-link" id="nav-emergency-contact-tab-modal" data-bs-toggle="tab" data-bs-target="#nav-emergency-contact-modal" type="button" role="tab" aria-controls="nav-emergency-contact-modal" aria-selected="false">جهة الاتصال في الطوارئ</button>
                        </div>
                    </nav>
                    <div class="tab-content" id="nav-tabContentTenantModal">
                        <div class="tab-pane fade show active" id="nav-basic-info-modal" role="tabpanel" aria-labelledby="nav-basic-info-tab-modal">
                            <h6 class="mb-3 text-primary">المعلومات الشخصية والاتصال:</h6>
                            <div class="row gx-3">
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_full_name_modal_tenants" class="form-label">الاسم الكامل <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_full_name_modal_tenants" name="tenant_full_name" required placeholder="مثال: عبدالله محمد الأحمد">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_national_id_iqama_modal_tenants" class="form-label">رقم الهوية/الإقامة <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_national_id_iqama_modal_tenants" name="tenant_national_id_iqama" required placeholder="1XXXXXXXXX أو 2XXXXXXXXX">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_type_id_modal_tenants" class="form-label">نوع المستأجر</label>
                                    <select class="form-select form-select-sm" id="tenant_type_id_modal_tenants" name="tenant_type_id">
                                        <option value="">-- اختر نوع المستأجر --</option>
                                        <?php foreach ($tenant_types_list_for_modal as $ttype_item_modal): ?>
                                            <option value="<?php echo $ttype_item_modal['id']; ?>"><?php echo esc_html($ttype_item_modal['display_name_ar']); ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                            </div>
                            <div class="row gx-3">
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_phone_primary_modal_tenants" class="form-label">رقم الجوال الأساسي <span class="text-danger">*</span></label>
                                    <input type="tel" class="form-control form-control-sm" id="tenant_phone_primary_modal_tenants" name="tenant_phone_primary" required placeholder="05XXXXXXXX">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_phone_secondary_modal_tenants" class="form-label">رقم جوال إضافي</label>
                                    <input type="tel" class="form-control form-control-sm" id="tenant_phone_secondary_modal_tenants" name="tenant_phone_secondary" placeholder="05XXXXXXXX">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_email_modal_tenants" class="form-label">البريد الإلكتروني</label>
                                    <input type="email" class="form-control form-control-sm" id="tenant_email_modal_tenants" name="tenant_email" placeholder="example@domain.com">
                                </div>
                            </div>
                            <div class="row gx-3">
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_gender_modal_tenants" class="form-label">الجنس</label>
                                    <select class="form-select form-select-sm" id="tenant_gender_modal_tenants" name="gender">
                                        <?php foreach($gender_options_modal as $key => $value): ?>
                                            <option value="<?php echo $key; ?>"><?php echo esc_html($value); ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_dob_modal_tenants" class="form-label">تاريخ الميلاد</label>
                                    <input type="date" class="form-control form-control-sm" id="tenant_dob_modal_tenants" name="date_of_birth">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_nationality_modal_tenants" class="form-label">الجنسية</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_nationality_modal_tenants" name="tenant_nationality" placeholder="مثال: سعودي">
                                </div>
                            </div>
                             <div class="row gx-3">
                                 <div class="col-md-6 mb-3">
                                    <label for="tenant_occupation_modal_tenants" class="form-label">المهنة</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_occupation_modal_tenants" name="tenant_occupation" placeholder="مثال: مهندس، طبيب">
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="tenant_current_address_modal_tenants" class="form-label">العنوان الحالي للمستأجر</label>
                                <textarea class="form-control form-control-sm" id="tenant_current_address_modal_tenants" name="tenant_current_address" rows="2" placeholder="العنوان الحالي إذا كان مختلفًا عن الوحدة المستأجرة"></textarea>
                            </div>
                             <div class="mb-3">
                                <label for="tenant_notes_modal_tenants" class="form-label">ملاحظات عامة عن المستأجر</label>
                                <textarea class="form-control form-control-sm" id="tenant_notes_modal_tenants" name="tenant_notes" rows="2" placeholder="أي ملاحظات إضافية"></textarea>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="nav-zatca-buyer-info-modal" role="tabpanel" aria-labelledby="nav-zatca-buyer-info-tab-modal">
                            <h6 class="mb-3 text-primary">بيانات المشتري لأغراض الفوترة الإلكترونية (ZATCA):</h6>
                            <p class="text-muted small">تملأ هذه البيانات إذا كان المستأجر هو الطرف الذي ستصدر باسمه الفاتورة الإلكترونية (المشتري). إذا كانت الفاتورة لمؤسسة، أدخل بيانات المؤسسة هنا.</p>
                            <div class="row gx-3">
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_vat_number_modal_tenants" class="form-label">رقم تسجيل ضريبة القيمة المضافة للمشتري</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_vat_number_modal_tenants" name="tenant_buyer_vat_number" placeholder="3XXXXXXXXXXXXX (15 رقم)">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_street_name_modal_tenants" class="form-label">اسم الشارع (للمشتري)</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_street_name_modal_tenants" name="tenant_buyer_street_name" placeholder="مثال: شارع الملك عبد العزيز">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_building_no_modal_tenants" class="form-label">رقم المبنى (للمشتري)</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_building_no_modal_tenants" name="tenant_buyer_building_no" placeholder="مثال: 1234">
                                </div>
                            </div>
                            <div class="row gx-3">
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_additional_no_modal_tenants" class="form-label">الرقم الإضافي (للمشتري)</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_additional_no_modal_tenants" name="tenant_buyer_additional_no" placeholder="مثال: 5678">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_district_name_modal_tenants" class="form-label">الحي (للمشتري)</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_district_name_modal_tenants" name="tenant_buyer_district_name" placeholder="مثال: حي العليا">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_city_name_modal_tenants" class="form-label">المدينة (للمشتري)</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_city_name_modal_tenants" name="tenant_buyer_city_name" placeholder="مثال: الرياض">
                                </div>
                            </div>
                             <div class="row gx-3">
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_postal_code_modal_tenants" class="form-label">الرمز البريدي (للمشتري)</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_postal_code_modal_tenants" name="tenant_buyer_postal_code" placeholder="مثال: 12345">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="tenant_buyer_country_code_modal_tenants" class="form-label">رمز الدولة (للمشتري)</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_buyer_country_code_modal_tenants" name="tenant_buyer_country_code" value="SA" placeholder="SA" maxlength="2">
                                    </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="nav-emergency-contact-modal" role="tabpanel" aria-labelledby="nav-emergency-contact-tab-modal">
                             <h6 class="mb-3 text-primary">بيانات جهة الاتصال في حالة الطوارئ:</h6>
                             <div class="row gx-3">
                                <div class="col-md-6 mb-3">
                                    <label for="tenant_emergency_contact_name_modal_tenants" class="form-label">اسم جهة الاتصال</label>
                                    <input type="text" class="form-control form-control-sm" id="tenant_emergency_contact_name_modal_tenants" name="tenant_emergency_contact_name" placeholder="الاسم الكامل لجهة الاتصال">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="tenant_emergency_contact_phone_modal_tenants" class="form-label">رقم هاتف جهة الاتصال</label>
                                    <input type="tel" class="form-control form-control-sm" id="tenant_emergency_contact_phone_modal_tenants" name="tenant_emergency_contact_phone" placeholder="05XXXXXXXX">
                                </div>
                            </div>
                        </div>
                    </div>
                    <small class="text-danger">* حقول مطلوبة في تبويب "المعلومات الأساسية"</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="tenantSubmitButtonTextModal">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/property_modal.php =====
<?php
// includes/modals/property_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : '';
}

// --- جلب قائمة الملاك ---
$owners_list_for_property_modal = []; // تم تغيير الاسم لتمييزه
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $owners_query_prop_modal = "SELECT id, name FROM owners ORDER BY name ASC";
    $owners_result_prop_modal = $mysqli->query($owners_query_prop_modal);
    if ($owners_result_prop_modal) {
        while ($owner_row_prop_modal = $owners_result_prop_modal->fetch_assoc()) {
            $owners_list_for_property_modal[] = $owner_row_prop_modal;
        }
        $owners_result_prop_modal->free();
    } else {
        error_log("Property Modal: Failed to fetch owners: " . $mysqli->error);
    }
}

// --- جلب قائمة أنواع العقارات ---
$property_types_list_for_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $ptypes_query_modal = "SELECT id, display_name_ar FROM property_types ORDER BY display_name_ar ASC";
    $ptypes_result_modal = $mysqli->query($ptypes_query_modal);
    if ($ptypes_result_modal) {
        while ($ptype_row_modal = $ptypes_result_modal->fetch_assoc()) {
            $property_types_list_for_modal[] = $ptype_row_modal;
        }
        $ptypes_result_modal->free();
    } else {
        error_log("Property Modal: Failed to fetch property types: " . $mysqli->error);
    }
}
?>
<div class="modal fade" id="propertyModal" tabindex="-1" aria-labelledby="propertyModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="propertyFormModal"> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="property_id" id="property_id_modal_properties" value=""> <input type="hidden" name="action" id="property_form_action_modal" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="propertyModalLabel">بيانات العقار</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="property_code_modal_prop" class="form-label">كود العقار <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="property_code_modal_prop" name="property_code" required placeholder="مثال: BLD001">
                        </div>
                        <div class="col-md-8 mb-3">
                            <label for="property_name_modal_prop" class="form-label">اسم العقار <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="property_name_modal_prop" name="property_name" required placeholder="مثال: برج النخيل السكني">
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="owner_id_modal_prop" class="form-label">المالك <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="owner_id_modal_prop" name="owner_id" required>
                                <option value="">-- اختر المالك --</option>
                                <?php foreach ($owners_list_for_property_modal as $owner_item_prop): ?>
                                    <option value="<?php echo $owner_item_prop['id']; ?>"><?php echo esc_html($owner_item_prop['name']); ?></option>
                                <?php endforeach; ?>
                            </select>
                            <small><a href="<?php echo base_url('owners/index.php'); ?>" target="_blank" class="text-decoration-none">إدارة الملاك</a></small>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="property_type_id_modal_prop" class="form-label">نوع العقار</label>
                            <select class="form-select form-select-sm" id="property_type_id_modal_prop" name="property_type_id">
                                <option value="">-- اختر نوع العقار --</option>
                                <?php foreach ($property_types_list_for_modal as $ptype_item_prop): ?>
                                    <option value="<?php echo $ptype_item_prop['id']; ?>"><?php echo esc_html($ptype_item_prop['display_name_ar']); ?></option>
                                <?php endforeach; ?>
                            </select>
                            <small><a href="<?php echo base_url('property_types/index.php'); // افترض وجود صفحة لإدارة أنواع العقارات ?>" target="_blank" class="text-decoration-none">إدارة أنواع العقارات</a></small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="property_address_modal_prop" class="form-label">العنوان التفصيلي <span class="text-danger">*</span></label>
                        <textarea class="form-control form-control-sm" id="property_address_modal_prop" name="property_address" rows="2" required placeholder="مثال: الرياض، حي الملك عبدالله، شارع الأمير محمد"></textarea>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="property_city_modal_prop" class="form-label">المدينة</label>
                            <input type="text" class="form-control form-control-sm" id="property_city_modal_prop" name="property_city" placeholder="مثال: الرياض">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="number_of_units_modal_prop" class="form-label">عدد الوحدات <span class="text-danger">*</span></label>
                            <input type="number" class="form-control form-control-sm" id="number_of_units_modal_prop" name="number_of_units" required min="0" placeholder="0">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="construction_year_modal_prop" class="form-label">سنة الإنشاء</label>
                            <input type="number" class="form-control form-control-sm" id="construction_year_modal_prop" name="construction_year" min="1800" max="<?php echo date('Y') + 5; ?>" placeholder="<?php echo date('Y'); ?>">
                        </div>
                    </div>
                     <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="land_area_sqm_modal_prop" class="form-label">مساحة الأرض (م²)</label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="land_area_sqm_modal_prop" name="land_area_sqm" min="0" placeholder="0.00">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="latitude_modal_prop" class="form-label">خط العرض (Latitude)</label>
                            <input type="text" class="form-control form-control-sm" id="latitude_modal_prop" name="latitude" placeholder="مثال: 24.7136">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="longitude_modal_prop" class="form-label">خط الطول (Longitude)</label>
                            <input type="text" class="form-control form-control-sm" id="longitude_modal_prop" name="longitude" placeholder="مثال: 46.6753">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="property_notes_modal_prop" class="form-label">ملاحظات إضافية</label>
                        <textarea class="form-control form-control-sm" id="property_notes_modal_prop" name="property_notes" rows="3" placeholder="أي تفاصيل أو ملاحظات أخرى حول العقار"></textarea>
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="propertySubmitButtonTextModal">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/payment_method_modal.php =====
<?php
// includes/modals/payment_method_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_pm_modal';
}
?>
<div class="modal fade" id="paymentMethodModal" tabindex="-1" aria-labelledby="paymentMethodModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="paymentMethodFormModal">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="payment_method_id" id="payment_method_id_modal_pmethods" value="">
                <input type="hidden" name="action" id="payment_method_form_action_modal_pmethods" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="paymentMethodModalLabel_pmethods">تفاصيل طريقة الدفع</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="method_name_modal_pmethods" class="form-label">المعرف (بالانجليزية - بدون مسافات) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="method_name_modal_pmethods" name="method_name" required placeholder="مثال: Cash, BankTransfer">
                        <small class="form-text text-muted">يستخدم داخلياً في النظام، يجب أن يكون فريداً (أحرف إنجليزية بدون مسافات).</small>
                    </div>
                    <div class="mb-3">
                        <label for="display_name_ar_modal_pmethods" class="form-label">الاسم المعروض (بالعربية) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="display_name_ar_modal_pmethods" name="display_name_ar" required placeholder="مثال: نقداً، تحويل بنكي">
                    </div>
                    <div class="mb-3">
                        <label for="zatca_code_modal_pmethods" class="form-label">رمز ZATCA (اختياري)</label>
                        <input type="text" class="form-control form-control-sm" id="zatca_code_modal_pmethods" name="zatca_code" maxlength="2" placeholder="مثال: 10 (لنقد)، 42 (تحويل)">
                        <small class="form-text text-muted">الرمز المعتمد من ZATCA لهذه الطريقة (مثل 10, 30, 42, 48).</small>
                    </div>
                     <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" value="1" id="is_active_modal_pmethods" name="is_active" checked>
                        <label class="form-check-label" for="is_active_modal_pmethods">
                            فعالة (متاحة للاستخدام)
                        </label>
                    </div>
                    
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="paymentMethodSubmitButtonTextModalPmethods">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/tenant_type_modal.php =====
<?php
// includes/modals/tenant_type_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_ttype_modal';
}
?>
<div class="modal fade" id="tenantTypeModal" tabindex="-1" aria-labelledby="tenantTypeModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="tenantTypeFormModal">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="tenant_type_id" id="tenant_type_id_modal_ttypes" value="">
                <input type="hidden" name="action" id="tenant_type_form_action_modal_ttypes" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="tenantTypeModalLabel_ttypes">تفاصيل نوع المستأجر</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="tenant_type_name_modal_ttypes" class="form-label">المعرف (بالانجليزية - بدون مسافات) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="tenant_type_name_modal_ttypes" name="type_name" required placeholder="مثال: individual, company">
                        <small class="form-text text-muted">يستخدم داخلياً في النظام، يجب أن يكون فريداً (أحرف إنجليزية، أرقام، وشرطة سفلية).</small>
                    </div>
                    <div class="mb-3">
                        <label for="tenant_type_display_name_ar_modal_ttypes" class="form-label">الاسم المعروض (بالعربية) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="tenant_type_display_name_ar_modal_ttypes" name="display_name_ar" required placeholder="مثال: فرد، شركة">
                    </div>
                    
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="tenantTypeSubmitButtonTextModalTtypes">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/unit_modal.php =====
<?php
// includes/modals/unit_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : '';
}

// --- جلب قائمة أنواع الوحدات ---
$unit_types_list_for_modal = [];
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $utypes_query_modal = "SELECT id, display_name_ar FROM unit_types ORDER BY display_name_ar ASC";
    $utypes_result_modal = $mysqli->query($utypes_query_modal);
    if ($utypes_result_modal) {
        while ($utype_row_modal = $utypes_result_modal->fetch_assoc()) {
            $unit_types_list_for_modal[] = $utype_row_modal;
        }
        $utypes_result_modal->free();
    } else {
        error_log("Unit Modal: Failed to fetch unit types: " . $mysqli->error);
    }
}

// حالات الوحدة للنافذة المنبثقة
$unit_statuses_for_unit_modal_dropdown = [ // تم تغيير الاسم ليكون فريداً
    'Vacant' => 'شاغرة',
    'Occupied' => 'مشغولة',
    'Under Maintenance' => 'تحت الصيانة',
    'Reserved' => 'محجوزة'
];
?>
<div class="modal fade" id="unitModal" tabindex="-1" aria-labelledby="unitModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="unitFormModal"> <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="unit_id" id="unit_id_modal_units_page" value=""> <input type="hidden" name="property_id_for_unit" id="property_id_for_unit_modal_page" value=""> <input type="hidden" name="action" id="unit_form_action_modal_page" value=""> <div class="modal-header">
                    <h5 class="modal-title" id="unitModalLabel_page">بيانات الوحدة</h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-info small py-2">
                        العقار: <strong id="property_name_for_unit_modal_display_page">[سيتم عرض اسم العقار هنا]</strong> </div>
                    <hr class="mt-0">
                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="unit_number_modal_page" class="form-label">رقم/اسم الوحدة <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="unit_number_modal_page" name="unit_number" required placeholder="مثال: شقة 101، محل رقم 5">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="unit_type_id_modal_page" class="form-label">نوع الوحدة</label>
                            <select class="form-select form-select-sm" id="unit_type_id_modal_page" name="unit_type_id">
                                <option value="">-- اختر نوع الوحدة --</option>
                                <?php foreach ($unit_types_list_for_modal as $utype_item_modal): ?>
                                    <option value="<?php echo $utype_item_modal['id']; ?>"><?php echo esc_html($utype_item_modal['display_name_ar']); ?></option>
                                <?php endforeach; ?>
                            </select>
                             <small><a href="<?php echo base_url('unit_types/index.php'); // افترض وجود صفحة لإدارة أنواع الوحدات ?>" target="_blank" class="text-decoration-none">إدارة أنواع الوحدات</a></small>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="unit_status_modal_page" class="form-label">حالة الوحدة <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="unit_status_modal_page" name="unit_status" required>
                                <?php foreach ($unit_statuses_for_unit_modal_dropdown as $key => $value): ?>
                                    <option value="<?php echo $key; ?>"><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-3 mb-3">
                            <label for="floor_number_modal_page" class="form-label">رقم الطابق</label>
                            <input type="number" class="form-control form-control-sm" id="floor_number_modal_page" name="floor_number" placeholder="0 للدور الأرضي">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="size_sqm_modal_page" class="form-label">المساحة (م²)</label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="size_sqm_modal_page" name="size_sqm" min="0" placeholder="0.00">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="bedrooms_modal_page" class="form-label">عدد غرف النوم</label>
                            <input type="number" class="form-control form-control-sm" id="bedrooms_modal_page" name="bedrooms" min="0" placeholder="0">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="bathrooms_modal_page" class="form-label">عدد دورات المياه</label>
                            <input type="number" class="form-control form-control-sm" id="bathrooms_modal_page" name="bathrooms" min="0" placeholder="0">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="base_rent_price_modal_page" class="form-label">سعر الإيجار الأساسي المقترح</label>
                        <input type="number" step="0.01" class="form-control form-control-sm" id="base_rent_price_modal_page" name="base_rent_price" min="0" placeholder="0.00">
                    </div>

                    <div class="mb-3">
                        <label for="unit_features_modal_page" class="form-label">ميزات الوحدة</label>
                        <textarea class="form-control form-control-sm" id="unit_features_modal_page" name="unit_features" rows="2" placeholder="مثال: مكيفة بالكامل، مطبخ مجهز..."></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="unit_notes_modal_page" class="form-label">ملاحظات على الوحدة</label>
                        <textarea class="form-control form-control-sm" id="unit_notes_modal_page" name="unit_notes" rows="2" placeholder="أي تفاصيل أو ملاحظات أخرى خاصة بالوحدة"></textarea>
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="unitSubmitButtonTextModalPage">حفظ البيانات</span> </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/modals/utility_reading_modal.php =====
<?php
// includes/modals/utility_reading_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_util_read_modal';
}

// --- جلب قائمة أنواع الخدمات/المرافق ---
$utility_types_list_for_modal_ur = []; // تم تغيير الاسم
if (isset($mysqli) && $mysqli instanceof mysqli) {
    $utypes_query_modal_ur = "SELECT id, name FROM utility_types ORDER BY name ASC";
    $utypes_result_modal_ur = $mysqli->query($utypes_query_modal_ur);
    if ($utypes_result_modal_ur) {
        while ($utype_row_modal_ur = $utypes_result_modal_ur->fetch_assoc()) {
            $utility_types_list_for_modal_ur[] = $utype_row_modal_ur;
        }
        $utypes_result_modal_ur->free();
    } else {
        error_log("Utility Reading Modal: Failed to fetch utility types: " . $mysqli->error);
    }
}

// حالات الفوترة للقراءة
$billed_statuses_for_ur_modal = [
    'Pending' => 'معلقة (لم تتم فوترتها)',
    'Billed' => 'تمت فوترتها',
    'Paid' => 'مدفوعة (جزء من فاتورة مدفوعة)'
];

// يتم افتراض أن $property_id_for_utility_page و $property_name_for_utility_page يتم تمريرهما من الصفحة الرئيسية (utilities/index.php)
// $units_for_property_ur_modal = [];
// if (isset($mysqli) && $mysqli instanceof mysqli && isset($property_id_for_utility_page) && $property_id_for_utility_page > 0) {
//     $stmt_units_ur = $mysqli->prepare("SELECT id, unit_number FROM units WHERE property_id = ? ORDER BY unit_number ASC");
//     if ($stmt_units_ur) {
//         $stmt_units_ur->bind_param("i", $property_id_for_utility_page);
//         $stmt_units_ur->execute();
//         $result_units_ur = $stmt_units_ur->get_result();
//         while ($row_unit_ur = $result_units_ur->fetch_assoc()) {
//             $units_for_property_ur_modal[] = $row_unit_ur;
//         }
//         $stmt_units_ur->close();
//     } else {
//         error_log("Utility Reading Modal: Failed to prepare statement for units: " . $mysqli->error);
//     }
// }
// تم نقل منطق جلب الوحدات إلى utilities/index.php ليتم تمريره إلى JavaScript

?>
<div class="modal fade" id="utilityReadingModal" tabindex="-1" aria-labelledby="utilityReadingModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="utilityReadingFormModal">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="reading_id" id="reading_id_modal_ur" value="">
                <input type="hidden" name="property_id_for_reading" id="property_id_for_reading_modal_ur" value=""> 
                <input type="hidden" name="action" id="utility_reading_form_action_modal_ur" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="utilityReadingModalLabel_ur">تسجيل قراءة عداد</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-info small py-2">
                        العقار: <strong id="property_name_for_ur_modal_display">[اسم العقار]</strong>
                    </div>
                    <hr class="mt-0">

                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="unit_id_for_reading_modal_ur" class="form-label">الوحدة <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="unit_id_for_reading_modal_ur" name="unit_id_for_reading" required>
                                <option value="">-- اختر الوحدة --</option>
                                </select>
                             <small class="form-text text-muted">يتم عرض وحدات العقار المحدد فقط.</small>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="utility_type_id_modal_ur" class="form-label">نوع الخدمة/المرفق <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="utility_type_id_modal_ur" name="utility_type_id" required>
                                <option value="">-- اختر نوع الخدمة --</option>
                                <?php foreach ($utility_types_list_for_modal_ur as $utype_item_ur): ?>
                                    <option value="<?php echo $utype_item_ur['id']; ?>"><?php echo esc_html($utype_item_ur['name']); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-4 mb-3">
                            <label for="reading_date_modal_ur" class="form-label">تاريخ القراءة <span class="text-danger">*</span></label>
                            <input type="date" class="form-control form-control-sm" id="reading_date_modal_ur" name="reading_date" required value="<?php echo date('Y-m-d'); ?>">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="previous_reading_value_modal_ur" class="form-label">القراءة السابقة</label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="previous_reading_value_modal_ur" name="previous_reading_value" placeholder="0.00" readonly>
                             <small class="form-text text-muted">تُجلب تلقائياً بناءً على آخر قراءة لنفس الوحدة والخدمة.</small>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="current_reading_value_modal_ur" class="form-label">القراءة الحالية <span class="text-danger">*</span></label>
                            <input type="number" step="0.01" class="form-control form-control-sm" id="current_reading_value_modal_ur" name="current_reading_value" required placeholder="0.00" min="0">
                        </div>
                    </div>

                    <div class="row gx-3">
                        <div class="col-md-6 mb-3">
                            <label for="rate_per_unit_modal_ur" class="form-label">سعر الوحدة (ريال)</label>
                            <input type="number" step="0.0001" class="form-control form-control-sm" id="rate_per_unit_modal_ur" name="rate_per_unit" placeholder="0.0000">
                            <small class="form-text text-muted">سعر الكيلوواط/المتر المكعب. إذا ترك فارغًا، قد يستخدم سعر افتراضي من إعدادات الخدمة (إذا وُجد).</small>
                        </div>
                         <div class="col-md-6 mb-3">
                            <label for="billed_status_modal_ur" class="form-label">حالة الفوترة</label>
                            <select class="form-select form-select-sm" id="billed_status_modal_ur" name="billed_status">
                                <?php foreach($billed_statuses_for_ur_modal as $key => $value): ?>
                                <option value="<?php echo $key; ?>"><?php echo esc_html($value); ?></option>
                                <?php endforeach; ?>
                            </select>
                            <small class="form-text text-muted">تتغير إلى "تمت فوترتها" عند إنشاء فاتورة لهذه القراءة.</small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="notes_reading_modal_ur" class="form-label">ملاحظات</label>
                        <textarea class="form-control form-control-sm" id="notes_reading_modal_ur" name="notes_reading" rows="2" placeholder="أي ملاحظات إضافية على هذه القراءة"></textarea>
                    </div>
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="utilityReadingSubmitButtonTextModalUr">حفظ القراءة</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
// Script to fetch previous reading when unit and utility type are selected
document.addEventListener('DOMContentLoaded', function() {
    const unitSelectModalUr = document.getElementById('unit_id_for_reading_modal_ur');
    const utilityTypeSelectModalUr = document.getElementById('utility_type_id_modal_ur');
    const previousReadingInputModalUr = document.getElementById('previous_reading_value_modal_ur');
    const currentReadingInputModalUr = document.getElementById('current_reading_value_modal_ur');

    function fetchPreviousReading() {
        const unitId = unitSelectModalUr.value;
        const utilityTypeId = utilityTypeSelectModalUr.value;

        if (unitId && utilityTypeId) {
            // AJAX call to a new PHP script to get the last reading
            // Example: fetch('get_last_reading.php?unit_id=' + unitId + '&utility_type_id=' + utilityTypeId)
            // For now, we'll just clear it and set min for current_reading
            
            // AJAX request to fetch last reading
            fetch(`<?php echo base_url('utilities/ajax_get_last_reading.php'); ?>?unit_id=${unitId}&utility_type_id=${utilityTypeId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.last_reading !== null) {
                        previousReadingInputModalUr.value = parseFloat(data.last_reading).toFixed(2);
                        currentReadingInputModalUr.min = parseFloat(data.last_reading).toFixed(2);
                    } else {
                        previousReadingInputModalUr.value = '0.00';
                        currentReadingInputModalUr.min = '0.00';
                        if(data.message) console.log(data.message); // Optional: log message
                    }
                })
                .catch(error => {
                    console.error('Error fetching last reading:', error);
                    previousReadingInputModalUr.value = '0.00';
                    currentReadingInputModalUr.min = '0.00';
                });
        } else {
            previousReadingInputModalUr.value = '0.00';
            currentReadingInputModalUr.min = '0.00';
        }
    }

    if(unitSelectModalUr) unitSelectModalUr.addEventListener('change', fetchPreviousReading);
    if(utilityTypeSelectModalUr) utilityTypeSelectModalUr.addEventListener('change', fetchPreviousReading);
});
</script>
===== ./includes/modals/unit_type_modal.php =====
<?php
// includes/modals/unit_type_modal.php

if (!isset($csrf_token)) {
    $csrf_token = (function_exists('generate_csrf_token')) ? generate_csrf_token() : 'fallback_csrf_unit_type_modal';
}
?>
<div class="modal fade" id="unitTypeModal" tabindex="-1" aria-labelledby="unitTypeModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <form id="unitTypeFormModal">
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">
                <input type="hidden" name="unit_type_id" id="unit_type_id_modal_utypes" value="">
                <input type="hidden" name="action" id="unit_type_form_action_modal_utypes" value="">

                <div class="modal-header">
                    <h5 class="modal-title" id="unitTypeModalLabel_utypes">تفاصيل نوع الوحدة</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="unit_type_name_modal_utypes" class="form-label">المعرف (بالانجليزية - بدون مسافات) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="unit_type_name_modal_utypes" name="type_name" required placeholder="مثال: apartment, villa">
                        <small class="form-text text-muted">يستخدم داخلياً في النظام، يجب أن يكون فريداً.</small>
                    </div>
                    <div class="mb-3">
                        <label for="unit_type_display_name_ar_modal_utypes" class="form-label">الاسم المعروض (بالعربية) <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="unit_type_display_name_ar_modal_utypes" name="display_name_ar" required placeholder="مثال: شقة، فيلا">
                    </div>
                    
                    <small class="text-danger">* حقول مطلوبة</small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> إلغاء
                    </button>
                    <button type="submit" class="btn btn-sm btn-success">
                        <i class="bi bi-check-circle"></i> <span id="unitTypeSubmitButtonTextModalUtypes">حفظ البيانات</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
===== ./includes/navigation.php =====
<?php
// includes/navigation.php

// Fallback for APP_BASE_URL (should ideally be defined in config.php via db_connect.php)
if (!defined('APP_BASE_URL')) {
    $protocol_nav = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || (isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] == 443)) ? "https://" : "http://";
    $host_nav = isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : 'localhost';
    $script_path_nav = isset($_SERVER['SCRIPT_NAME']) ? (string)$_SERVER['SCRIPT_NAME'] : '';
    $fallback_base_dir_nav = '';
    if (!empty($script_path_nav)) {
        $path_parts = explode('/', trim(dirname($script_path_nav), '/\\')); // Get directory parts
        if (!empty($path_parts[0]) && $path_parts[0] !== '.' && $path_parts[0] !== '') {
            $fallback_base_dir_nav = '/' . $path_parts[0]; // Assume first part is project folder if not root
        }
    }
    define('APP_BASE_URL', rtrim($protocol_nav . $host_nav . $fallback_base_dir_nav, '/'));
    error_log("WARNING: APP_BASE_URL was not defined prior to navigation.php. Fallback used: " . APP_BASE_URL);
}
$app_display_name_nav = defined('APP_NAME') ? APP_NAME : 'نظام الإدارة';

// Determine active navigation link
$current_script_path_nav = isset($_SERVER['SCRIPT_NAME']) ? (string)$_SERVER['SCRIPT_NAME'] : '';
$app_base_path_nav = defined('APP_BASE_URL') ? (string)parse_url(APP_BASE_URL, PHP_URL_PATH) : '';
$relative_uri_nav = '';

if (!empty($app_base_path_nav) && strpos($_SERVER['REQUEST_URI'], $app_base_path_nav) === 0) {
    $relative_uri_nav = substr($_SERVER['REQUEST_URI'], strlen(rtrim($app_base_path_nav, '/')));
} else {
    // Fallback if APP_BASE_URL is not part of REQUEST_URI (e.g. root deployment)
    $relative_uri_nav = $_SERVER['REQUEST_URI'];
}
// Remove query string from relative URI for segment matching
$relative_uri_nav = strtok($relative_uri_nav, '?');
$uri_segments_nav = explode('/', trim($relative_uri_nav, '/'));
$current_module_segment_nav = isset($uri_segments_nav[0]) ? $uri_segments_nav[0] : '';
$current_sub_module_segment_nav = isset($uri_segments_nav[1]) ? $uri_segments_nav[1] : '';


// If the first segment is empty and the script is index.php or dashboard.php at root, identify it
if (empty($current_module_segment_nav) && in_array(basename($current_script_path_nav), ['index.php', 'dashboard.php'])) {
    $current_module_segment_nav = 'dashboard.php'; // Default to dashboard for root index/dashboard
}


function is_nav_active_final($module_identifier, $sub_module_identifier = null) {
    global $current_module_segment_nav, $current_sub_module_segment_nav, $current_script_path_nav;
    $current_script_basename = basename($current_script_path_nav);

    // Check for specific PHP files like dashboard.php, settings.php
    if (strpos($module_identifier, '.php') !== false) {
        return ($current_script_basename === $module_identifier &&
               ($current_module_segment_nav === $module_identifier ||
                empty($current_module_segment_nav) ||
                $current_module_segment_nav === basename(defined('APP_BASE_URL') ? (string)parse_url(APP_BASE_URL, PHP_URL_PATH) : '')
               )
        );
    }
    // Check for module directories
    if ($sub_module_identifier !== null) {
        return ($current_module_segment_nav === $module_identifier && $current_sub_module_segment_nav === $sub_module_identifier);
    }
    return ($current_module_segment_nav === $module_identifier);
}

$system_types_active = is_nav_active_final('property_types') || is_nav_active_final('unit_types') || is_nav_active_final('tenant_types') || is_nav_active_final('lease_types') || is_nav_active_final('payment_methods') || is_nav_active_final('utility_types');

?>
<nav class="sidebar" id="sidebar">
    <div class="sidebar-header">
        <h3><?php echo htmlspecialchars($app_display_name_nav); ?></h3>
        <?php if (function_exists('get_current_user_fullname') && get_current_user_fullname()): ?>
            <small class="text-muted">مرحباً, <?php echo htmlspecialchars(get_current_user_fullname()); ?></small>
        <?php endif; ?>
    </div>
    <ul class="nav flex-column">
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('dashboard.php') ? 'active' : ''; ?>" href="<?php echo base_url('dashboard.php'); ?>">
                <i class="bi bi-grid-fill"></i> لوحة القيادة
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('owners') ? 'active' : ''; ?>" href="<?php echo base_url('owners/index.php'); ?>">
                <i class="bi bi-people-fill"></i> أصحاب العقارات
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('properties') ? 'active' : ''; ?>" href="<?php echo base_url('properties/index.php'); ?>">
                <i class="bi bi-building"></i> العقارات
            </a>
        </li>
         <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('units') ? 'active' : ''; ?>" href="<?php echo base_url('units/index.php'); ?>">
                <i class="bi bi-grid-3x3-gap-fill"></i> الوحدات
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('tenants') ? 'active' : ''; ?>" href="<?php echo base_url('tenants/index.php'); ?>">
                <i class="bi bi-person-badge-fill"></i> المستأجرين
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('leases') ? 'active' : ''; ?>" href="<?php echo base_url('leases/index.php'); ?>">
                <i class="bi bi-file-earmark-text-fill"></i> عقود الإيجار
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('invoices') ? 'active' : ''; ?>" href="<?php echo base_url('invoices/index.php'); ?>">
                <i class="bi bi-receipt-cutoff"></i> الفواتير
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('payments') ? 'active' : ''; ?>" href="<?php echo base_url('payments/index.php'); ?>">
                <i class="bi bi-credit-card-fill"></i> المدفوعات
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('utilities') ? 'active' : ''; ?>" href="<?php echo base_url('utilities/index.php'); ?>">
                <i class="bi bi-lightning-charge-fill"></i> المرافق وقراءات العدادات
            </a>
        </li>

        <?php if (function_exists('user_has_role') && user_has_role('admin')): ?>
        <li class="nav-item mt-3 pt-3 border-top" style="border-color: #495057 !important;">
            <span class="nav-link text-muted small text-uppercase" style="pointer-events: none; font-size: 0.8rem; padding-bottom: 0.5rem;">الإدارة والتهيئة</span>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('users') ? 'active' : ''; ?>" href="<?php echo base_url('users/index.php'); ?>">
                <i class="bi bi-person-lines-fill"></i> إدارة المستخدمين
            </a>
        </li>
         <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('roles') ? 'active' : ''; ?>" href="<?php echo base_url('roles/index.php'); ?>">
                <i class="bi bi-person-rolodex"></i> إدارة الأدوار
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo $system_types_active ? 'active' : ''; ?>" data-bs-toggle="collapse" href="#systemTypesSubmenu" role="button" aria-expanded="<?php echo $system_types_active ? 'true' : 'false'; ?>" aria-controls="systemTypesSubmenu">
                <i class="bi bi-tags-fill"></i> تعريفات النظام <i class="bi bi-chevron-down float-end"></i>
            </a>
            <ul class="collapse list-unstyled <?php echo $system_types_active ? 'show' : ''; ?>" id="systemTypesSubmenu">
                <li><a class="nav-link <?php echo is_nav_active_final('property_types') ? 'active' : ''; ?>" href="<?php echo base_url('property_types/index.php'); ?>"><small><i class="bi bi-dash"></i> أنواع العقارات</small></a></li>
                <li><a class="nav-link <?php echo is_nav_active_final('unit_types') ? 'active' : ''; ?>" href="<?php echo base_url('unit_types/index.php'); ?>"><small><i class="bi bi-dash"></i> أنواع الوحدات</small></a></li>
                <li><a class="nav-link <?php echo is_nav_active_final('tenant_types') ? 'active' : ''; ?>" href="<?php echo base_url('tenant_types/index.php'); ?>"><small><i class="bi bi-dash"></i> أنواع المستأجرين</small></a></li>
                <li><a class="nav-link <?php echo is_nav_active_final('lease_types') ? 'active' : ''; ?>" href="<?php echo base_url('lease_types/index.php'); ?>"><small><i class="bi bi-dash"></i> أنواع عقود الإيجار</small></a></li>
                <li><a class="nav-link <?php echo is_nav_active_final('payment_methods') ? 'active' : ''; ?>" href="<?php echo base_url('payment_methods/index.php'); ?>"><small><i class="bi bi-dash"></i> طرق الدفع</small></a></li>
                <li><a class="nav-link <?php echo is_nav_active_final('utility_types') ? 'active' : ''; ?>" href="<?php echo base_url('utility_types/index.php'); ?>"><small><i class="bi bi-dash"></i> أنواع المرافق</small></a></li>
            </ul>
        </li>
         <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('audit_log') ? 'active' : ''; ?>" href="<?php echo base_url('audit_log/index.php'); ?>">
                <i class="bi bi-card-list"></i> سجل التدقيق
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link <?php echo is_nav_active_final('settings.php') ? 'active' : ''; ?>" href="<?php echo base_url('settings.php'); ?>">
                <i class="bi bi-gear-fill"></i> إعدادات التطبيق (ZATCA)
            </a>
        </li>
        <?php endif; ?>

        <li class="nav-item mt-auto pt-3 border-top" style="border-color: #495057 !important;">
            <a class="nav-link" href="<?php echo base_url('auth/logout.php'); ?>">
                <i class="bi bi-box-arrow-right"></i> تسجيل الخروج
            </a>
        </li>
    </ul>
</nav>
===== ./includes/header_resources.php =====
<?php
// includes/header_resources.php

if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

if (!defined('APP_BASE_URL')) {
    $protocol_hr = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || (isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] == 443)) ? "https://" : "http://";
    $host_hr = isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : 'localhost';
    $script_path_for_fallback = isset($_SERVER['SCRIPT_NAME']) ? (string)$_SERVER['SCRIPT_NAME'] : '';
    $fallback_base_dir_hr = '';
    if (!empty($script_path_for_fallback)) {
        $path_parts = explode('/', trim($script_path_for_fallback, '/'));
        if (count($path_parts) > 0) {
            // Try to construct a base path assuming the first segment is the project folder
            // This is a guess and might need adjustment based on actual deployment.
            // If SCRIPT_NAME is /pms/index.php, $path_parts[0] is 'pms'.
            // If SCRIPT_NAME is /index.php (in webroot), this logic might not create a subfolder.
            $project_folder_guess = $path_parts[0];
            if ($project_folder_guess !== 'index.php' && $project_folder_guess !== basename($script_path_for_fallback)) {
                 $fallback_base_dir_hr = '/' . $project_folder_guess;
            }
        }
    }
    define('APP_BASE_URL', rtrim($protocol_hr . $host_hr . $fallback_base_dir_hr, '/'));
    error_log("WARNING: APP_BASE_URL was not defined prior to header_resources.php. Fallback used: " . APP_BASE_URL . " (SCRIPT_NAME: " . $script_path_for_fallback . ")");
}

$app_display_name_for_header = defined('APP_NAME') ? APP_NAME : 'نظام إدارة العقارات';

?>
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo isset($page_title) ? htmlspecialchars($page_title) . ' - ' : ''; echo htmlspecialchars($app_display_name_for_header); ?></title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&display=swap" rel="stylesheet">

    <style>
        body {
            font-family: 'Cairo', sans-serif;
            background-color: #f8f9fa;
            overflow-x: hidden; 
        }
        .wrapper {
            display: flex;
            width: 100%;
            align-items: stretch;
        }
        .sidebar {
            min-width: 280px;
            max-width: 280px;
            background-color: #343a40;
            color: #fff;
            transition: margin-right 0.3s ease-in-out, transform 0.3s ease-in-out;
            min-height: 100vh;
            position: fixed; 
            top: 0;
            right: 0; 
            bottom: 0;
            z-index: 1030; 
            overflow-y: auto;
            padding-top: 0; /* Remove padding-top if header is part of sidebar */
        }
        .sidebar .nav-link {
            color: #adb5bd; padding: 0.75rem 1.25rem; display: flex;
            align-items: center; font-size: 0.95rem;
        }
        .sidebar .nav-link .bi {
            margin-left: 0.7rem; font-size: 1.2rem; width: 20px; text-align: center;
        }
        .sidebar .nav-link:hover, .sidebar .nav-link.active {
            color: #fff; background-color: #495057;
        }
        .sidebar .sidebar-header {
            padding: 1.25rem; /* Adjusted padding */
            text-align: center;
            border-bottom: 1px solid #495057;
            margin-bottom: 1rem;
            background-color: #343a40; /* Same as sidebar */
            position: sticky; /* Make header sticky within sidebar */
            top: 0;
            z-index: 10; /* Above sidebar content */
        }
        .sidebar .sidebar-header h3 { color: #fff; margin: 0; font-size: 1.5rem; }
        .sidebar .sidebar-header small { font-size: 0.8rem; }


        .main-content {
            flex-grow: 1;
            padding: 20px;
            padding-top: 70px; /* Add padding-top to avoid overlap with fixed toggle button */
            transition: margin-right 0.3s ease-in-out;
            min-height: 100vh;
            margin-right: 280px; 
            width: calc(100% - 280px); 
        }
        
        .sidebar-toggle-btn {
            position: fixed;
            top: 15px;
            right: 15px; 
            z-index: 1035; /* Above sidebar when closed, below when open if sidebar is higher */
            background-color: #495057; /* Darker button */
            color: white;
            border: none;
            border-radius: 0.3rem;
            padding: 0.5rem 0.75rem; /* Slightly larger padding */
            display: none; 
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .sidebar-toggle-btn:hover, .sidebar-toggle-btn:focus {
            background-color: #5a6268;
            color: white;
            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
        }

        .content-header {
            background-color: #28a745; color: white; padding: 1rem 1.5rem;
            margin-bottom: 1.5rem; border-radius: 0.3rem;
        }
        .content-header h1 { margin: 0; font-size: 1.75rem; }
        .card-header h5.card-title { font-size: 1.1rem; font-weight: 600; }
        .modal-header { background-color: #28a745; color: white; }
        .modal-header .btn-close { filter: invert(1) grayscale(100%) brightness(200%); }
        .alert-container {
            position: fixed; top: 80px; /* Adjusted top to be below toggle button */
            left: 50%; transform: translateX(-50%); /* Centered */
            z-index: 1060; width: auto; min-width: 300px; max-width: 90%;
        }

        @media (max-width: 991.98px) { 
            .sidebar {
                margin-right: -280px; 
                /* transform: translateX(280px); Use margin for better layout flow with fixed elements */
            }
            .sidebar.active {
                margin-right: 0;
                /* transform: translateX(0); */
            }
            .main-content {
                margin-right: 0; 
                width: 100%;
            }
            .sidebar-toggle-btn {
                display: block; 
            }
        }
    </style>
</head>
<body class="bg-light">
    <button class="btn sidebar-toggle-btn" type="button" id="sidebarToggle">
        <i class="bi bi-list fs-5"></i> </button>
    <div class="wrapper"> 
        <div class="main-content" id="mainContent">
            <div class="alert-container">
                <?php
                if (isset($_SESSION['message']) && isset($_SESSION['message_type'])) {
                    echo '<div class="alert alert-' . htmlspecialchars($_SESSION['message_type']) . ' alert-dismissible fade show" role="alert">';
                    echo htmlspecialchars($_SESSION['message']);
                    echo '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>';
                    echo '</div>';
                    unset($_SESSION['message']);
                    unset($_SESSION['message_type']);
                }
                ?>
            </div>
        
===== ./includes/audit_log_functions.php =====
<?php
// includes/audit_log_functions.php

if (session_status() == PHP_SESSION_NONE) {
    // This should ideally be handled by session_manager.php being included first
    // session_start(); 
}

/**
 * Logs an action to the audit_log table.
 *
 * @param mysqli $mysqli The mysqli connection object.
 * @param string $action_type A key describing the action (e.g., CREATE_USER, UPDATE_PROPERTY, LOGIN_SUCCESS).
 * @param int|null $target_id The ID of the entity affected by the action (e.g., user_id, property_id).
 * @param string|null $target_table The name of the table where the target_id resides.
 * @param array|null $details Additional details about the action (e.g., old and new values, stored as JSON).
 * @return bool True on success, false on failure.
 */
function log_audit_action(mysqli $mysqli, string $action_type, ?int $target_id = null, ?string $target_table = null, ?array $details = null): bool {
    if (!isset($_SESSION['user_id']) && $action_type !== 'LOGIN_ATTEMPT_FAILED' && $action_type !== 'LOGIN_SUCCESS') {
        // For most actions, a user should be logged in.
        // Exceptions are login attempts themselves.
        // For anonymous actions, user_id will be NULL in the DB.
    }
    
    $user_id = $_SESSION['user_id'] ?? null; // Can be null for system actions or failed logins before session is set
    $details_json = ($details !== null) ? json_encode($details, JSON_UNESCAPED_UNICODE) : null;
    $ip_address = $_SERVER['REMOTE_ADDR'] ?? null;
    $user_agent = $_SERVER['HTTP_USER_AGENT'] ?? null;

    $sql = "INSERT INTO audit_log (user_id, action_type, target_table, target_id, details, ip_address, user_agent) 
            VALUES (?, ?, ?, ?, ?, ?, ?)";
    
    $stmt = $mysqli->prepare($sql);
    if ($stmt) {
        // target_id can be null, so use 'i' but pass null if it is.
        // user_id can be null.
        // details can be null.
        $stmt->bind_param("isssiss", 
            $user_id, 
            $action_type, 
            $target_table, 
            $target_id, 
            $details_json, 
            $ip_address, 
            $user_agent
        );
        
        if ($stmt->execute()) {
            $stmt->close();
            return true;
        } else {
            error_log("Audit Log Execution Error: " . $stmt->error . " - SQL: " . $sql . " - Params: user_id=$user_id, action_type=$action_type, target_table=$target_table, target_id=$target_id");
            $stmt->close();
            return false;
        }
    } else {
        error_log("Audit Log Prepare Error: " . $mysqli->error . " - SQL: " . $sql);
        return false;
    }
}

// تعريف ثوابت لأنواع الإجراءات لتجنب الأخطاء الإملائية
define('AUDIT_LOGIN_SUCCESS', 'LOGIN_SUCCESS');
define('AUDIT_LOGIN_ATTEMPT_FAILED', 'LOGIN_ATTEMPT_FAILED');
define('AUDIT_LOGOUT', 'LOGOUT');

define('AUDIT_CREATE_USER', 'CREATE_USER');
define('AUDIT_EDIT_USER', 'EDIT_USER');
define('AUDIT_DELETE_USER', 'DELETE_USER');

define('AUDIT_CREATE_OWNER', 'CREATE_OWNER');
define('AUDIT_EDIT_OWNER', 'EDIT_OWNER');
define('AUDIT_DELETE_OWNER', 'DELETE_OWNER');

define('AUDIT_CREATE_PROPERTY', 'CREATE_PROPERTY');
define('AUDIT_EDIT_PROPERTY', 'EDIT_PROPERTY');
define('AUDIT_DELETE_PROPERTY', 'DELETE_PROPERTY');

define('AUDIT_CREATE_UNIT', 'CREATE_UNIT');
define('AUDIT_EDIT_UNIT', 'EDIT_UNIT');
define('AUDIT_DELETE_UNIT', 'DELETE_UNIT');

define('AUDIT_CREATE_TENANT', 'CREATE_TENANT');
define('AUDIT_EDIT_TENANT', 'EDIT_TENANT');
define('AUDIT_DELETE_TENANT', 'DELETE_TENANT');

define('AUDIT_CREATE_LEASE', 'CREATE_LEASE');
define('AUDIT_EDIT_LEASE', 'EDIT_LEASE');
define('AUDIT_DELETE_LEASE', 'DELETE_LEASE');
define('AUDIT_TERMINATE_LEASE', 'TERMINATE_LEASE'); // If you add this action

define('AUDIT_CREATE_INVOICE', 'CREATE_INVOICE');
define('AUDIT_EDIT_INVOICE', 'EDIT_INVOICE'); // Usually invoices are not edited, but credit/debit notes are issued.
define('AUDIT_DELETE_INVOICE', 'DELETE_INVOICE'); // Or VOID_INVOICE
define('AUDIT_SEND_INVOICE_ZATCA', 'SEND_INVOICE_ZATCA');

define('AUDIT_CREATE_PAYMENT', 'CREATE_PAYMENT');
define('AUDIT_EDIT_PAYMENT', 'EDIT_PAYMENT');
define('AUDIT_DELETE_PAYMENT', 'DELETE_PAYMENT');

define('AUDIT_CREATE_UTILITY_READING', 'CREATE_UTILITY_READING');
define('AUDIT_EDIT_UTILITY_READING', 'EDIT_UTILITY_READING');
define('AUDIT_DELETE_UTILITY_READING', 'DELETE_UTILITY_READING');

define('AUDIT_UPDATE_APP_SETTINGS', 'UPDATE_APP_SETTINGS');

// For CRUD on types (roles, property_types, etc.)
define('AUDIT_CREATE_ROLE', 'CREATE_ROLE');
define('AUDIT_EDIT_ROLE', 'EDIT_ROLE');
define('AUDIT_DELETE_ROLE', 'DELETE_ROLE');

define('AUDIT_CREATE_PROPERTY_TYPE', 'CREATE_PROPERTY_TYPE');
define('AUDIT_EDIT_PROPERTY_TYPE', 'EDIT_PROPERTY_TYPE');
define('AUDIT_DELETE_PROPERTY_TYPE', 'DELETE_PROPERTY_TYPE');
// ... add more for unit_types, tenant_types, lease_types, payment_methods etc.
define('AUDIT_CREATE_UNIT_TYPE', 'CREATE_UNIT_TYPE');
define('AUDIT_CREATE_TENANT_TYPE', 'CREATE_TENANT_TYPE');
define('AUDIT_CREATE_LEASE_TYPE', 'CREATE_LEASE_TYPE');
define('AUDIT_CREATE_PAYMENT_METHOD', 'CREATE_PAYMENT_METHOD');
// ... similarly for EDIT and DELETE

?>
===== ./includes/session_manager.php =====
<?php
// includes/session_manager.php

if (session_status() == PHP_SESSION_NONE) {
    $session_lifetime = defined('SESSION_LIFETIME') ? SESSION_LIFETIME : 1800; // Default 30 minutes
    
    ini_set('session.gc_maxlifetime', $session_lifetime);
    session_set_cookie_params([
        'lifetime' => $session_lifetime,
        'path' => '/',
        'domain' => $_SERVER['HTTP_HOST'] ?? '', // Should be configured properly
        'secure' => isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on',
        'httponly' => true,
        'samesite' => 'Lax'
    ]);
    session_start();
}

// APP_BASE_URL is crucial for redirects. functions.php (which defines base_url)
// should be included if set_message and redirect are used here.
// For safety, ensure functions.php is loaded IF those functions are called.
// As require_login and require_role use set_message and redirect, functions.php is needed.
if (!function_exists('set_message')) { // Check if functions.php was already included
    if (file_exists(__DIR__ . '/functions.php')) {
        require_once __DIR__ . '/functions.php';
    } else {
        // Fallback if functions.php is missing, which would be a critical error
        error_log("CRITICAL ERROR: functions.php not found and is required by session_manager.php");
        // Define minimal fallbacks to prevent fatal errors, though functionality will be impaired.
        if (!function_exists('set_message')) { function set_message($m, $t) { $_SESSION['message'] = $m; $_SESSION['message_type'] = $t;} }
        if (!function_exists('base_url')) { function base_url($p) { return '/'.$p;} } // Very basic fallback
        if (!function_exists('redirect')) { function redirect($u) { header("Location: $u"); exit;} }
    }
}


// Session timeout check
function check_session_timeout() {
    $session_lifetime = defined('SESSION_LIFETIME') ? SESSION_LIFETIME : 1800;
    if (isset($_SESSION['logged_in_timestamp']) && (time() - $_SESSION['logged_in_timestamp'] > $session_lifetime)) {
        session_unset();
        session_destroy();
        
        $login_page_url = base_url('auth/login.php');
        // Use set_message if available, which it should be now
        set_message("انتهت صلاحية الجلسة. يرجى تسجيل الدخول مرة أخرى.", "warning");
        header("Location: " . $login_page_url); // Redirect after setting message
        exit;
    }
    if (is_logged_in()){
      $_SESSION['logged_in_timestamp'] = time();
    }
}
check_session_timeout();


function is_logged_in() {
    return isset($_SESSION['user_id']);
}

function require_login() {
    if (!is_logged_in()) {
        $_SESSION['redirect_after_login'] = $_SERVER['REQUEST_URI'];
        set_message("الرجاء تسجيل الدخول للمتابعة.", "warning");
        
        $login_page_url = base_url('auth/login.php');
        // AJAX check
        if (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {
            header('Content-Type: application/json');
            http_response_code(401); 
            echo json_encode(['success' => false, 'message' => "الرجاء تسجيل الدخول للمتابعة.", 'redirect' => $login_page_url]);
        } else {
            redirect($login_page_url);
        }
        exit();
    }
}

function user_has_role(string $role_name_to_check): bool {
    if (is_logged_in() && isset($_SESSION['user_role_name'])) { // Changed from user_role to user_role_name
        if (is_array($role_name_to_check)) {
            return in_array($_SESSION['user_role_name'], $role_name_to_check, true);
        }
        return $_SESSION['user_role_name'] === $role_name_to_check;
    }
    return false;
}

function require_role(string $required_role_name) {
    require_login(); 

    if (!user_has_role($required_role_name)) {
        set_message("ليس لديك الصلاحيات الكافية للوصول لهذه الصفحة.", "danger");
        $dashboard_url = base_url('dashboard.php');
        
        if (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {
            header('Content-Type: application/json');
            http_response_code(403);
            echo json_encode(['success' => false, 'message' => "ليس لديك الصلاحيات الكافية."]);
        } else {
            if (isset($_SERVER['HTTP_REFERER']) && $_SERVER['HTTP_REFERER'] !== $_SERVER['REQUEST_URI']) {
                redirect($_SERVER['HTTP_REFERER']);
            } else {
                redirect($dashboard_url);
            }
        }
        exit();
    }
}

function get_current_user_id(): ?int {
    return isset($_SESSION['user_id']) ? (int)$_SESSION['user_id'] : null;
}

// Changed from get_current_user_role to get_current_user_role_name
function get_current_user_role_name(): ?string { 
    return $_SESSION['user_role_name'] ?? null; // Changed from user_role
}

function get_current_user_fullname(): ?string {
    // Assuming user_full_name is set during login process
    return $_SESSION['user_full_name'] ?? null; 
}

// Removed CSRF and message functions as they should be in functions.php
// Removed APP_BASE_URL definition as it should come from config.php
// Removed format_date_custom, esc_attr, esc_html, generate_pagination_links, generate_zatca_qr_code_data_string
// as they are general utility functions and belong in functions.php

?>
===== ./includes/footer_resources.php =====
<?php
// includes/footer_resources.php
?>
    </div> </div> <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" xintegrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-dismiss Bootstrap alerts
        var alerts = document.querySelectorAll('.alert-container .alert.alert-dismissible.show');
        alerts.forEach(function(alert) {
            if (!alert.classList.contains('no-auto-dismiss')) {
                setTimeout(function() {
                    var bsAlertInstance = bootstrap.Alert.getInstance(alert);
                    if (bsAlertInstance) {
                        bsAlertInstance.close();
                    }
                }, 7000); 
            }
        });

        // Initialize Bootstrap tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Sidebar Toggle Functionality
        var sidebar = document.getElementById('sidebar');
        var sidebarToggler = document.getElementById('sidebarToggle');
        // var mainContent = document.getElementById('mainContent'); // Not needed for overlay toggle

        if (sidebar && sidebarToggler) {
            sidebarToggler.addEventListener('click', function() {
                sidebar.classList.toggle('active');
                // If you want an overlay effect, you might add a class to body to show a backdrop
                // document.body.classList.toggle('sidebar-open-overlay');
            });

            // Optional: Close sidebar when clicking outside of it on small screens
            // This requires a backdrop or careful event handling on the main content area.
            // document.addEventListener('click', function(event) {
            //    if (sidebar.classList.contains('active') && 
            //        !sidebar.contains(event.target) && 
            //        !sidebarToggler.contains(event.target)) {
            //        sidebar.classList.remove('active');
            //    }
            // });
        }
    });
</script>

</body>
</html>

===== ./includes/functions.php =====
<?php
// includes/functions.php

// التأكد من بدء الجلسة إذا لم تكن قد بدأت بالفعل (مهم لدوال set_message و CSRF)
if (session_status() == PHP_SESSION_NONE) {
    // لا تقم بـ session_set_cookie_params هنا، هذا يجب أن يكون في session_manager.php
    session_start();
}

/**
 * تنقية بيانات الإدخال لمنع هجمات XSS.
 * @param string|array $data بيانات الإدخال (نص أو مصفوفة).
 * @return string|array البيانات المنقاة.
 */
function sanitize_input($data) {
    if (is_array($data)) {
        return array_map('sanitize_input', $data);
    }
    return htmlspecialchars(stripslashes(trim((string)$data)), ENT_QUOTES, 'UTF-8');
}

/**
 * تعيين رسالة جلسة ليتم عرضها للمستخدم.
 * @param string $message نص الرسالة.
 * @param string $type نوع الرسالة (مثل 'success', 'danger', 'warning', 'info') - يتوافق مع كلاسات Bootstrap alert.
 */
function set_message($message, $type = 'info') {
    $_SESSION['flash_message'] = [ // تم تغيير اسم مفتاح الجلسة ليكون أوضح
        'message' => $message,
        'type' => $type
    ];
}

/**
 * عرض ثم مسح رسالة الجلسة.
 * يتم الآن التعامل مع العرض الأساسي في header_resources.php.
 * هذه الدالة يمكن استخدامها إذا احتجت لعرض رسالة في مكان محدد يدويًا.
 * @return string HTML لكود التنبيه، أو سلسلة فارغة إذا لم تكن هناك رسالة.
 */
function display_message_manual() {
    if (isset($_SESSION['flash_message'])) {
        $message_data = $_SESSION['flash_message'];
        if (is_array($message_data) && isset($message_data['message']) && isset($message_data['type'])) {
            $message = htmlspecialchars($message_data['message'], ENT_QUOTES, 'UTF-8');
            $type = htmlspecialchars($message_data['type'], ENT_QUOTES, 'UTF-8');
            $alert_html = '<div class="alert alert-' . $type . ' alert-dismissible fade show" role="alert">';
            $alert_html .= $message;
            $alert_html .= '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>';
            $alert_html .= '</div>';

            unset($_SESSION['flash_message']);
            return $alert_html;
        }
        // إذا كانت البيانات غير متوقعة، قم بإزالتها
        unset($_SESSION['flash_message']);
    }
    return '';
}

/**
 * إعادة التوجيه إلى URL محدد.
 * @param string $url الـ URL المراد إعادة التوجيه إليه.
 */
function redirect($url) {
    if (strpos($url, 'http://') !== 0 && strpos($url, 'https://') !== 0) {
        if (function_exists('base_url')) {
            $url = base_url($url);
        } else {
            // fallback if base_url is not available (should not happen if config is loaded)
            $fallback_base = (defined('APP_BASE_URL') ? APP_BASE_URL : '');
            $url = rtrim($fallback_base, '/') . '/' . ltrim($url, '/');
        }
    }
    header("Location: " . $url);
    exit();
}


/**
 * تنسيق سلسلة تاريخ إلى تنسيق أكثر قابلية للقراءة.
 * @param string $date_string سلسلة التاريخ (مثل YYYY-MM-DD HH:MM:SS أو YYYY-MM-DD).
 * @param string $format تنسيق الإخراج المطلوب (سلسلة تنسيق تاريخ PHP).
 * @return string سلسلة التاريخ المنسقة، أو '-' إذا كان الإدخال غير صالح.
 */
function format_date_custom($date_string, $format = 'd M, Y H:i A') {
    if (empty($date_string) || $date_string === '0000-00-00' || $date_string === '0000-00-00 00:00:00') {
        return '-';
    }
    try {
        $date = new DateTime($date_string);
        return $date->format($format);
    } catch (Exception $e) {
        error_log("Error formatting date: " . $e->getMessage() . " for string: " . $date_string);
        return $date_string; // Return original on error
    }
}

/**
 * إنشاء توكن CSRF وتخزينه في الجلسة.
 * @return string توكن CSRF.
 */
function generate_csrf_token() {
    if (empty($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    return $_SESSION['csrf_token'];
}

/**
 * التحقق من توكن CSRF المرسل مع النموذج.
 * @param string $token التوكن المرسل مع النموذج.
 * @return bool True إذا كان التوكن صالحًا، False بخلاف ذلك.
 */
function verify_csrf_token($token) {
    if (isset($_SESSION['csrf_token']) && !empty($_SESSION['csrf_token']) && hash_equals($_SESSION['csrf_token'], $token)) {
        // For one-time tokens per form load, regenerate it after successful verification.
        // For now, we'll keep it same for the session unless explicitly regenerated.
        // unset($_SESSION['csrf_token']); // Uncomment for one-time tokens.
        return true;
    }
    error_log("CSRF token mismatch. Expected: " . ($_SESSION['csrf_token'] ?? 'NOT SET') . " - Received: " . $token);
    return false;
}

/**
 * دالة مساعدة للحصول على APP_BASE_URL لتكوين الروابط.
 * يفترض أن APP_BASE_URL معرف في config.php.
 * @param string $path المسار الاختياري لإضافته إلى الـ URL الأساسي.
 * @return string الـ URL الكامل.
 */
function base_url($path = '') {
    if (!defined('APP_BASE_URL')) {
        error_log("CRITICAL: APP_BASE_URL is not defined when base_url() was called. Path: " . $path);
        // Basic fallback, may not be accurate for all setups
        $protocol_fn = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || (isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] == 443)) ? "https://" : "http://";
        $host_fn = $_SERVER['HTTP_HOST'] ?? 'localhost';
        $script_dir_fn = rtrim(dirname(dirname($_SERVER['SCRIPT_NAME'])), '/\\'); // Assumes functions.php is in includes/
        $fallback_base_fn = $protocol_fn . $host_fn . $script_dir_fn;
        return rtrim($fallback_base_fn, '/') . '/' . ltrim($path, '/');
    }
    return rtrim(APP_BASE_URL, '/') . '/' . ltrim($path, '/');
}


/**
 * تنقية المخرجات لسمات HTML لمنع XSS.
 * @param string $string السلسلة المراد تنقيتها.
 * @return string السلسلة المنقاة.
 */
function esc_attr($string) {
    return htmlspecialchars((string)$string, ENT_QUOTES, 'UTF-8');
}

/**
 * تنقية المخرجات لمحتوى HTML العام لمنع XSS.
 * @param string $string السلسلة المراد تنقيتها.
 * @return string السلسلة المنقاة.
 */
function esc_html($string) {
    return htmlspecialchars((string)$string, ENT_NOQUOTES, 'UTF-8');
}

/**
 * دالة مبدئية لتوليد بيانات رمز الاستجابة السريعة لـ ZATCA (placeholder).
 */
function generate_zatca_qr_code_data_string($invoiceData) {
    // ... (الكود المبدئي كما هو، يتطلب تنفيذًا حقيقيًا لـ ZATCA)
    $qr_content = "اسم البائع: " . (isset($invoiceData['seller_name']) ? $invoiceData['seller_name'] : (defined('ZATCA_SELLER_NAME') ? ZATCA_SELLER_NAME : '')) . "\n";
    $qr_content .= "رقم الضريبة: " . (isset($invoiceData['vat_number']) ? $invoiceData['vat_number'] : (defined('ZATCA_SELLER_VAT_NUMBER') ? ZATCA_SELLER_VAT_NUMBER : '')) . "\n";
    $qr_content .= "الوقت: " . (isset($invoiceData['timestamp']) ? $invoiceData['timestamp'] : date('Y-m-d\TH:i:s\Z')) . "\n";
    $qr_content .= "الإجمالي: " . (isset($invoiceData['total_amount']) ? $invoiceData['total_amount'] : '0.00') . " ريال\n";
    $qr_content .= "الضريبة: " . (isset($invoiceData['vat_amount']) ? $invoiceData['vat_amount'] : '0.00') . " ريال\n";
    $qr_content .= "تجزئة الفاتورة: " . (isset($invoiceData['invoice_hash']) ? substr($invoiceData['invoice_hash'], 0, 10)."..." : 'N/A');
    return base64_encode($qr_content); 
}

/**
 * إنشاء روابط التصفح (pagination).
 */
function generate_pagination_links($current_page, $total_pages, $base_url_path, $params = []) {
    // ... (الكود كما هو، يفترض أنه يعمل بشكل صحيح)
    if ($total_pages <= 1) {
        return '';
    }
    $pagination_html = '<nav aria-label="Page navigation"><ul class="pagination justify-content-center pagination-sm">';
    $full_base_url = base_url($base_url_path);
    $query_params = $params;

    if ($current_page > 1) {
        $query_params['page'] = $current_page - 1;
        $pagination_html .= '<li class="page-item"><a class="page-link" href="' . $full_base_url . '?' . http_build_query($query_params) . '">السابق</a></li>';
    } else {
        $pagination_html .= '<li class="page-item disabled"><span class="page-link">السابق</span></li>';
    }

    $num_links_to_show = 5;
    $start_page = max(1, $current_page - floor($num_links_to_show / 2));
    $end_page = min($total_pages, $start_page + $num_links_to_show - 1);
    $start_page = max(1, $end_page - $num_links_to_show + 1);

    if ($start_page > 1) {
        $query_params['page'] = 1;
        $pagination_html .= '<li class="page-item"><a class="page-link" href="' . $full_base_url . '?' . http_build_query($query_params) . '">1</a></li>';
        if ($start_page > 2) {
            $pagination_html .= '<li class="page-item disabled"><span class="page-link">...</span></li>';
        }
    }

    for ($i = $start_page; $i <= $end_page; $i++) {
        $query_params['page'] = $i;
        if ($i == $current_page) {
            $pagination_html .= '<li class="page-item active" aria-current="page"><span class="page-link">' . $i . '</span></li>';
        } else {
            $pagination_html .= '<li class="page-item"><a class="page-link" href="' . $full_base_url . '?' . http_build_query($query_params) . '">' . $i . '</a></li>';
        }
    }

    if ($end_page < $total_pages) {
        if ($end_page < $total_pages - 1) {
            $pagination_html .= '<li class="page-item disabled"><span class="page-link">...</span></li>';
        }
        $query_params['page'] = $total_pages;
        $pagination_html .= '<li class="page-item"><a class="page-link" href="' . $full_base_url . '?' . http_build_query($query_params) . '">' . $total_pages . '</a></li>';
    }

    if ($current_page < $total_pages) {
        $query_params['page'] = $current_page + 1;
        $pagination_html .= '<li class="page-item"><a class="page-link" href="' . $full_base_url . '?' . http_build_query($query_params) . '">التالي</a></li>';
    } else {
        $pagination_html .= '<li class="page-item disabled"><span class="page-link">التالي</span></li>';
    }
    $pagination_html .= '</ul></nav>';
    return $pagination_html;
}

// دالة لتحديث حالة الفاتورة بناءً على الدفعات (إذا لم تكن موجودة بالفعل)
if (!function_exists('update_invoice_status')) {
    function update_invoice_status(mysqli $mysqli, int $invoice_id): bool {
        if (empty($invoice_id)) {
            return false;
        }

        $stmt_sum = $mysqli->prepare("SELECT SUM(amount_paid) as total_paid FROM payments WHERE invoice_id = ? AND status = 'Completed'");
        if (!$stmt_sum) return false;
        $stmt_sum->bind_param("i", $invoice_id);
        $stmt_sum->execute();
        $result_sum = $stmt_sum->get_result();
        $total_paid = 0;
        if ($result_sum->num_rows > 0) {
            $total_paid = (float)($result_sum->fetch_assoc()['total_paid'] ?? 0);
        }
        $stmt_sum->close();

        $stmt_inv = $mysqli->prepare("SELECT total_amount, due_date, status as current_status FROM invoices WHERE id = ?");
        if (!$stmt_inv) return false;
        $stmt_inv->bind_param("i", $invoice_id);
        $stmt_inv->execute();
        $result_inv = $stmt_inv->get_result();
        if ($result_inv->num_rows === 0) { $stmt_inv->close(); return false; }
        $invoice = $result_inv->fetch_assoc();
        $stmt_inv->close();

        $invoice_total_amount = (float)$invoice['total_amount'];
        $new_status = $invoice['current_status']; // Default to current status

        if (abs($total_paid - $invoice_total_amount) < 0.005) { // Compare floats with tolerance
            $new_status = 'Paid';
        } elseif ($total_paid > 0 && $total_paid < $invoice_total_amount) {
            $new_status = 'Partially Paid';
        } elseif ($total_paid <= 0) {
             // Only change to Unpaid if not already Cancelled/Void etc.
            if (!in_array($invoice['current_status'], ['Cancelled', 'Void', 'Draft'])) {
                $new_status = 'Unpaid';
            }
        }
        
        if ($new_status !== 'Paid' && $new_status !== 'Cancelled' && $new_status !== 'Void' && $new_status !== 'Draft' && strtotime($invoice['due_date']) < time()) {
            $new_status = 'Overdue';
        }

        // Only update if status has changed or paid_amount has changed
        if ($new_status !== $invoice['current_status'] || abs((float)$invoice['paid_amount'] - $total_paid) >= 0.005 ) {
            $stmt_update = $mysqli->prepare("UPDATE invoices SET paid_amount = ?, status = ? WHERE id = ?");
            if (!$stmt_update) return false;
            $stmt_update->bind_param("dsi", $total_paid, $new_status, $invoice_id);
            $success = $stmt_update->execute();
            $stmt_update->close();
            return $success;
        }
        return true; // No change needed, considered success
    }
}

?>
===== ./payment_methods/actions.php =====
<?php
// payment_methods/actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // إذا كانت هذه الوظيفة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // <<--- تم الإضافة

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $payment_method_id = isset($_POST['payment_method_id']) ? filter_var($_POST['payment_method_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $method_name = isset($_POST['method_name']) ? sanitize_input(trim($_POST['method_name'])) : null;
    $display_name_ar = isset($_POST['display_name_ar']) ? sanitize_input(trim($_POST['display_name_ar'])) : null;
    $zatca_code_input = isset($_POST['zatca_code']) ? trim($_POST['zatca_code']) : '';
    $zatca_code = ($zatca_code_input === '') ? null : sanitize_input($zatca_code_input);
    $is_active = isset($_POST['is_active']) ? 1 : 0;

    if (empty($method_name) || empty($display_name_ar)) {
        $response = ['success' => false, 'message' => 'المعرف والاسم المعروض مطلوبان.'];
        echo json_encode($response); exit;
    }
    if (!preg_match('/^[a-zA-Z0-9_]+$/', $method_name)) {
        $response = ['success' => false, 'message' => 'المعرف يجب أن يحتوي على أحرف إنجليزية وأرقام وشرطة سفلية فقط.'];
        echo json_encode($response); exit;
    }
    if ($zatca_code !== null && (strlen($zatca_code) > 2 || !ctype_digit($zatca_code))) {
        $response = ['success' => false, 'message' => 'رمز ZATCA يجب أن يكون رقمًا مكونًا من خانتين على الأكثر إذا تم إدخاله.'];
        echo json_encode($response); exit;
    }

    $mysqli->begin_transaction(); // <<--- بدء المعاملة
    try {
        if ($action === 'add_payment_method') {
            $stmt_check = $mysqli->prepare("SELECT id FROM payment_methods WHERE method_name = ?");
            if (!$stmt_check) throw new Exception('خطأ تجهيز فحص المعرف: ' . $mysqli->error);
            $stmt_check->bind_param("s", $method_name); $stmt_check->execute(); $stmt_check->store_result();
            if ($stmt_check->num_rows > 0) throw new Exception('المعرف "' . esc_html($method_name) . '" مستخدم بالفعل.');
            $stmt_check->close();

            $stmt_insert = $mysqli->prepare("INSERT INTO payment_methods (method_name, display_name_ar, zatca_code, is_active) VALUES (?, ?, ?, ?)");
            if (!$stmt_insert) throw new Exception('فشل في تحضير استعلام الإضافة: ' . $mysqli->error);
            $stmt_insert->bind_param("sssi", $method_name, $display_name_ar, $zatca_code, $is_active);
            if (!$stmt_insert->execute()) throw new Exception('فشل في إضافة الطريقة: ' . $stmt_insert->error);
            
            $new_pm_id = $stmt_insert->insert_id;
            $stmt_insert->close();
            // افترض أن AUDIT_CREATE_PAYMENT_METHOD معرف
            log_audit_action($mysqli, 'CREATE_PAYMENT_METHOD', $new_pm_id, 'payment_methods', ['method_name' => $method_name, 'display_name_ar' => $display_name_ar, 'is_active' => $is_active]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تمت إضافة طريقة الدفع بنجاح!'];

        } elseif ($action === 'edit_payment_method' && $payment_method_id) {
            $stmt_old_pm = $mysqli->prepare("SELECT * FROM payment_methods WHERE id = ?");
            $old_pm_data = null;
            if($stmt_old_pm){
                $stmt_old_pm->bind_param("i", $payment_method_id); $stmt_old_pm->execute();
                $res_old_pm = $stmt_old_pm->get_result();
                if($res_old_pm->num_rows > 0) $old_pm_data = $res_old_pm->fetch_assoc();
                $stmt_old_pm->close();
            }
            if(!$old_pm_data) throw new Exception("طريقة الدفع المطلوبة للتعديل غير موجودة.");

            $stmt_check_edit = $mysqli->prepare("SELECT id FROM payment_methods WHERE method_name = ? AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص المعرف (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("si", $method_name, $payment_method_id); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) throw new Exception('المعرف "' . esc_html($method_name) . '" مستخدم بالفعل لطريقة أخرى.');
            $stmt_check_edit->close();

            $stmt_update = $mysqli->prepare("UPDATE payment_methods SET method_name = ?, display_name_ar = ?, zatca_code = ?, is_active = ? WHERE id = ?");
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام التحديث: ' . $mysqli->error);
            $stmt_update->bind_param("sssii", $method_name, $display_name_ar, $zatca_code, $is_active, $payment_method_id);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث الطريقة: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_pm_data = compact('method_name', 'display_name_ar', 'zatca_code', 'is_active');
             // افترض أن AUDIT_EDIT_PAYMENT_METHOD معرف
            log_audit_action($mysqli, 'EDIT_PAYMENT_METHOD', $payment_method_id, 'payment_methods', ['old_data' => $old_pm_data, 'new_data' => $new_pm_data]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تم تحديث طريقة الدفع بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف الطريقة مفقود.");
        }
        $mysqli->commit(); // <<--- تأكيد المعاملة

    } catch (Exception $e) {
        $mysqli->rollback(); // <<--- التراجع عن المعاملة
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Payment Method Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_payment_method') {
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('payment_methods/index.php'));
    }
    $pm_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($pm_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_pm_del_info = $mysqli->prepare("SELECT method_name, display_name_ar FROM payment_methods WHERE id = ?");
            $pm_details_log = null;
            if($stmt_pm_del_info){
                $stmt_pm_del_info->bind_param("i", $pm_id_to_delete); $stmt_pm_del_info->execute();
                $res_pm_del = $stmt_pm_del_info->get_result();
                if($res_pm_del->num_rows > 0) $pm_details_log = $res_pm_del->fetch_assoc();
                $stmt_pm_del_info->close();
            }
            if(!$pm_details_log) throw new Exception("طريقة الدفع المطلوبة للحذف غير موجودة.");
            
            $stmt_check_usage_get = $mysqli->prepare("SELECT COUNT(*) as count FROM payments WHERE payment_method_id = ?");
            if (!$stmt_check_usage_get) throw new Exception('خطأ في فحص استخدام طريقة الدفع: ' . $mysqli->error);
            $stmt_check_usage_get->bind_param("i", $pm_id_to_delete); $stmt_check_usage_get->execute();
            $usage_result_get = $stmt_check_usage_get->get_result()->fetch_assoc();
            $stmt_check_usage_get->close();
            if ($usage_result_get && $usage_result_get['count'] > 0) {
                throw new Exception('لا يمكن حذف طريقة الدفع هذه لأنها مستخدمة. يمكنك تعطيلها بدلاً من ذلك.');
            }

            $stmt_delete_get = $mysqli->prepare("DELETE FROM payment_methods WHERE id = ?");
            if (!$stmt_delete_get) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete_get->bind_param("i", $pm_id_to_delete);
            if (!$stmt_delete_get->execute()) throw new Exception('فشل في حذف الطريقة: ' . $stmt_delete_get->error);
            $stmt_delete_get->close();
            
            // افترض أن AUDIT_DELETE_PAYMENT_METHOD معرف
            log_audit_action($mysqli, 'DELETE_PAYMENT_METHOD', $pm_id_to_delete, 'payment_methods', $pm_details_log); // <<--- تسجيل الحدث
            $mysqli->commit();
            set_message('تم حذف طريقة الدفع بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Payment Method Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف طريقة الدفع غير صحيح للحذف.", "danger");
    }
    redirect(base_url('payment_methods/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_payment_method')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./payment_methods/index.php =====
<?php
$page_title = "إدارة طرق الدفع";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // يمكنك إضافة هذا إذا كانت هذه الصفحة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page_pm = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_pm = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_pm = ($current_page_pm - 1) * $items_per_page_pm;

// وظيفة البحث
$search_term_pm = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part_pm = '';
$params_for_count_pm = [];
$types_for_count_pm = "";
$params_for_data_pm = [];
$types_for_data_pm = "";

if (!empty($search_term_pm)) {
    $search_query_part_pm = " WHERE method_name LIKE ? OR display_name_ar LIKE ? OR zatca_code LIKE ?";
    $search_like_pm = "%" . $search_term_pm . "%";
    $params_for_count_pm = [$search_like_pm, $search_like_pm, $search_like_pm];
    $types_for_count_pm = "sss";
    $params_for_data_pm = $params_for_count_pm;
    $types_for_data_pm = $types_for_count_pm;
}

// الحصول على العدد الإجمالي لطرق الدفع
$total_sql_pm = "SELECT COUNT(*) as total FROM payment_methods" . $search_query_part_pm;
$stmt_total_pm = $mysqli->prepare($total_sql_pm);
$total_payment_methods = 0;
if ($stmt_total_pm) {
    if (!empty($params_for_count_pm)) {
        $stmt_total_pm->bind_param($types_for_count_pm, ...$params_for_count_pm);
    }
    $stmt_total_pm->execute();
    $total_result_pm = $stmt_total_pm->get_result();
    $total_payment_methods = ($total_result_pm && $total_result_pm->num_rows > 0) ? $total_result_pm->fetch_assoc()['total'] : 0;
    $stmt_total_pm->close();
} else {
    error_log("SQL Prepare Error for counting payment methods: " . $mysqli->error);
}
$total_pages_pm = ceil($total_payment_methods / $items_per_page_pm);

// جلب طرق الدفع للصفحة الحالية
$sql_pm = "SELECT * FROM payment_methods" . $search_query_part_pm . " ORDER BY display_name_ar ASC LIMIT ? OFFSET ?";
$current_data_params_pm = $params_for_data_pm;
$current_data_params_pm[] = $items_per_page_pm;
$current_data_params_pm[] = $offset_pm;
$current_data_types_pm = $types_for_data_pm . 'ii';

$payment_methods_list_page = [];
$stmt_pm = $mysqli->prepare($sql_pm);
if ($stmt_pm) {
    if (!empty($current_data_params_pm)) {
        $stmt_pm->bind_param($current_data_types_pm, ...$current_data_params_pm);
    } else {
        $stmt_pm->bind_param('ii', $items_per_page_pm, $offset_pm);
    }
    $stmt_pm->execute();
    $result_pm = $stmt_pm->get_result();
    $payment_methods_list_page = ($result_pm && $result_pm->num_rows > 0) ? $result_pm->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_pm->close();
} else {
    error_log("SQL Prepare Error for fetching payment methods: " . $mysqli->error);
}

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-credit-card-2-front-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة طرق الدفع (<?php echo $total_payment_methods; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#paymentMethodModal" onclick="preparePaymentMethodModal('add_payment_method')">
                    <i class="bi bi-plus-circle"></i> إضافة طريقة دفع جديدة
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('payment_methods/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                     <label for="search_payment_methods_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_payment_methods_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالمعرف، الاسم المعروض، أو رمز ZATCA..." value="<?php echo esc_attr($search_term_pm); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($payment_methods_list_page) && !empty($search_term_pm)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term_pm); ?>".</div>
            <?php elseif (empty($payment_methods_list_page)): ?>
                <div class="alert alert-info text-center">لا توجد طرق دفع مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#paymentMethodModal" onclick="preparePaymentMethodModal('add_payment_method')">إضافة طريقة دفع جديدة</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>المعرف (<code>method_name</code>)</th>
                            <th>الاسم المعروض (بالعربية)</th>
                            <th>رمز ZATCA</th>
                            <th>الحالة</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_pm = ($current_page_pm - 1) * $items_per_page_pm + 1; ?>
                        <?php foreach ($payment_methods_list_page as $pm_item): ?>
                        <tr>
                            <td><?php echo $row_num_pm++; ?></td>
                            <td><code><?php echo esc_html($pm_item['method_name']); ?></code></td>
                            <td><?php echo esc_html($pm_item['display_name_ar']); ?></td>
                            <td><?php echo esc_html($pm_item['zatca_code'] ?: '-'); ?></td>
                            <td>
                                <span class="badge bg-<?php echo $pm_item['is_active'] ? 'success' : 'secondary'; ?>">
                                    <?php echo $pm_item['is_active'] ? 'فعالة' : 'غير فعالة'; ?>
                                </span>
                            </td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="preparePaymentMethodModal('edit_payment_method', <?php echo htmlspecialchars(json_encode($pm_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#paymentMethodModal"
                                        title="تعديل طريقة الدفع">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-payment-method-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $pm_item['id']; ?>"
                                        data-name="<?php echo esc_attr($pm_item['display_name_ar']); ?>"
                                        data-delete-url="<?php echo base_url('payment_methods/actions.php?action=delete_payment_method&id=' . $pm_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف طريقة الدفع">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_pm > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_pm = [];
            if (!empty($search_term_pm)) $pagination_params_pm['search'] = $search_term_pm;
            echo generate_pagination_links($current_page_pm, $total_pages_pm, 'payment_methods/index.php', $pagination_params_pm);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
// تضمين نافذة إضافة/تعديل طريقة الدفع
require_once __DIR__ . '/../includes/modals/payment_method_modal.php';
// تضمين نافذة تأكيد الحذف
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function preparePaymentMethodModal(action, pmData = null) {
    const pmModal = document.getElementById('paymentMethodModal');
    const modalTitle = pmModal.querySelector('#paymentMethodModalLabel_pmethods');
    const pmForm = pmModal.querySelector('#paymentMethodFormModal');
    const pmIdInput = pmModal.querySelector('#payment_method_id_modal_pmethods');
    const actionInput = pmModal.querySelector('#payment_method_form_action_modal_pmethods');
    const submitButton = pmModal.querySelector('#paymentMethodSubmitButtonTextModalPmethods');
    const isActiveCheckbox = pmModal.querySelector('#is_active_modal_pmethods');


    pmForm.reset();
    pmIdInput.value = '';
    actionInput.value = action;
    isActiveCheckbox.checked = true; // Default to active for new

    if (action === 'add_payment_method') {
        modalTitle.textContent = 'إضافة طريقة دفع جديدة';
        submitButton.textContent = 'إضافة الطريقة';
    } else if (action === 'edit_payment_method' && pmData) {
        modalTitle.textContent = 'تعديل طريقة الدفع: ' + pmData.display_name_ar;
        submitButton.textContent = 'حفظ التعديلات';
        pmIdInput.value = pmData.id;
        
        if(document.getElementById('method_name_modal_pmethods')) document.getElementById('method_name_modal_pmethods').value = pmData.method_name || '';
        if(document.getElementById('display_name_ar_modal_pmethods')) document.getElementById('display_name_ar_modal_pmethods').value = pmData.display_name_ar || '';
        if(document.getElementById('zatca_code_modal_pmethods')) document.getElementById('zatca_code_modal_pmethods').value = pmData.zatca_code || '';
        isActiveCheckbox.checked = (pmData.is_active == 1);
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalPMethod = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalPMethod) {
        confirmDeleteModalPMethod.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-payment-method-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalPMethod.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف طريقة الدفع "' + itemName + '"؟';
                
                var additionalInfo = confirmDeleteModalPMethod.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: لا يمكن حذف طريقة الدفع إذا كانت مستخدمة في أي عمليات دفع. يمكنك تعطيلها بدلاً من ذلك.';

                var confirmDeleteButton = confirmDeleteModalPMethod.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonPMethod = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonPMethod, confirmDeleteButton);
                    
                    newConfirmDeleteButtonPMethod.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonPMethod.removeAttribute('href');
                    
                    newConfirmDeleteButtonPMethod.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete; // For GET based delete
                        }
                    });
                }
            }
        });
    }

    const pmFormElement = document.getElementById('paymentMethodFormModal');
    if(pmFormElement) {
        pmFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(pmFormElement);
            const actionUrl = '<?php echo base_url('payment_methods/actions.php'); ?>';

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var pmModalInstance = bootstrap.Modal.getInstance(document.getElementById('paymentMethodModal'));
                    if(pmModalInstance) pmModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./property_types/actions.php =====
<?php
// property_types/actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // إذا كانت هذه الوظيفة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // <<--- تم الإضافة

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $property_type_id = isset($_POST['property_type_id']) ? filter_var($_POST['property_type_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $type_name = isset($_POST['type_name']) ? strtolower(sanitize_input(str_replace(' ', '_', trim($_POST['type_name'])))) : null;
    $display_name_ar = isset($_POST['display_name_ar']) ? sanitize_input(trim($_POST['display_name_ar'])) : null;

    if (empty($type_name) || empty($display_name_ar)) {
        $response = ['success' => false, 'message' => 'المعرف والاسم المعروض مطلوبان.'];
        echo json_encode($response); exit;
    }
    if (!preg_match('/^[a-z0-9_]+$/', $type_name)) {
        $response = ['success' => false, 'message' => 'المعرف يجب أن يحتوي على أحرف إنجليزية صغيرة وأرقام وشرطة سفلية فقط.'];
        echo json_encode($response); exit;
    }

    $mysqli->begin_transaction(); // <<--- بدء المعاملة
    try {
        if ($action === 'add_property_type') {
            // ... (فحص التكرار كما في النسخة السابقة)
            $stmt_check = $mysqli->prepare("SELECT id FROM property_types WHERE type_name = ?");
            if (!$stmt_check) throw new Exception('خطأ تجهيز فحص المعرف: ' . $mysqli->error);
            $stmt_check->bind_param("s", $type_name); $stmt_check->execute(); $stmt_check->store_result();
            if ($stmt_check->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل.');
            $stmt_check->close();

            $stmt_insert = $mysqli->prepare("INSERT INTO property_types (type_name, display_name_ar) VALUES (?, ?)");
            if (!$stmt_insert) throw new Exception('فشل في تحضير استعلام الإضافة: ' . $mysqli->error);
            $stmt_insert->bind_param("ss", $type_name, $display_name_ar);
            if (!$stmt_insert->execute()) throw new Exception('فشل في إضافة النوع: ' . $stmt_insert->error);
            
            $new_ptype_id = $stmt_insert->insert_id;
            $stmt_insert->close();
            log_audit_action($mysqli, AUDIT_CREATE_PROPERTY_TYPE, $new_ptype_id, 'property_types', ['type_name' => $type_name, 'display_name_ar' => $display_name_ar]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تمت إضافة نوع العقار بنجاح!'];

        } elseif ($action === 'edit_property_type' && $property_type_id) {
            $stmt_old_ptype = $mysqli->prepare("SELECT type_name, display_name_ar FROM property_types WHERE id = ?");
            $old_ptype_data = null;
            if($stmt_old_ptype){
                $stmt_old_ptype->bind_param("i", $property_type_id); $stmt_old_ptype->execute();
                $res_old_ptype = $stmt_old_ptype->get_result();
                if($res_old_ptype->num_rows > 0) $old_ptype_data = $res_old_ptype->fetch_assoc();
                $stmt_old_ptype->close();
            }
            if(!$old_ptype_data) throw new Exception("نوع العقار المطلوب تعديله غير موجود.");

            // ... (فحص التكرار عند التعديل كما في النسخة السابقة)
            $stmt_check_edit = $mysqli->prepare("SELECT id FROM property_types WHERE type_name = ? AND id != ?");
            if (!$stmt_check_edit) throw new Exception('خطأ تجهيز فحص المعرف (تعديل): ' . $mysqli->error);
            $stmt_check_edit->bind_param("si", $type_name, $property_type_id); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
            if ($stmt_check_edit->num_rows > 0) throw new Exception('المعرف "' . esc_html($type_name) . '" مستخدم بالفعل لنوع آخر.');
            $stmt_check_edit->close();

            $stmt_update = $mysqli->prepare("UPDATE property_types SET type_name = ?, display_name_ar = ? WHERE id = ?");
            if (!$stmt_update) throw new Exception('فشل في تحضير استعلام التحديث: ' . $mysqli->error);
            $stmt_update->bind_param("ssi", $type_name, $display_name_ar, $property_type_id);
            if (!$stmt_update->execute()) throw new Exception('فشل في تحديث النوع: ' . $stmt_update->error);
            $stmt_update->close();
            
            $new_ptype_data = compact('type_name', 'display_name_ar');
            log_audit_action($mysqli, AUDIT_EDIT_PROPERTY_TYPE, $property_type_id, 'property_types', ['old_data' => $old_ptype_data, 'new_data' => $new_ptype_data]); // <<--- تسجيل الحدث
            $response = ['success' => true, 'message' => 'تم تحديث نوع العقار بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف النوع مفقود.");
        }
        $mysqli->commit(); // <<--- تأكيد المعاملة

    } catch (Exception $e) {
        $mysqli->rollback(); // <<--- التراجع عن المعاملة
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Property Type Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_property_type') {
    // ... (منطق الحذف من GET request كما في النسخة السابقة مع إضافة سجل التدقيق والمعاملات)
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('property_types/index.php'));
    }
    $pt_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($pt_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_ptype_del_info = $mysqli->prepare("SELECT type_name, display_name_ar FROM property_types WHERE id = ?");
            $ptype_details_log = null;
            if($stmt_ptype_del_info){
                $stmt_ptype_del_info->bind_param("i", $pt_id_to_delete); $stmt_ptype_del_info->execute();
                $res_ptype_del = $stmt_ptype_del_info->get_result();
                if($res_ptype_del->num_rows > 0) $ptype_details_log = $res_ptype_del->fetch_assoc();
                $stmt_ptype_del_info->close();
            }
            if(!$ptype_details_log) throw new Exception("نوع العقار المطلوب حذفه غير موجود.");

            // ... (فحص استخدام النوع كما في النسخة السابقة)
            $stmt_check_usage_get = $mysqli->prepare("SELECT COUNT(*) as count FROM properties WHERE property_type_id = ?");
            if (!$stmt_check_usage_get) throw new Exception('خطأ في فحص استخدام نوع العقار: ' . $mysqli->error);
            $stmt_check_usage_get->bind_param("i", $pt_id_to_delete); $stmt_check_usage_get->execute();
            $usage_result_get = $stmt_check_usage_get->get_result()->fetch_assoc();
            $stmt_check_usage_get->close();
            if ($usage_result_get && $usage_result_get['count'] > 0) {
                throw new Exception('لا يمكن حذف هذا النوع لأنه مستخدم في (' . $usage_result_get['count'] . ') عقار/عقارات.');
            }

            $stmt_delete_get = $mysqli->prepare("DELETE FROM property_types WHERE id = ?");
            if (!$stmt_delete_get) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete_get->bind_param("i", $pt_id_to_delete);
            if (!$stmt_delete_get->execute()) throw new Exception('فشل في حذف النوع: ' . $stmt_delete_get->error);
            $stmt_delete_get->close();
            
            log_audit_action($mysqli, AUDIT_DELETE_PROPERTY_TYPE, $pt_id_to_delete, 'property_types', $ptype_details_log); // <<--- تسجيل الحدث
            $mysqli->commit();
            set_message('تم حذف نوع العقار بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Property Type Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف نوع العقار غير صحيح للحذف.", "danger");
    }
    redirect(base_url('property_types/index.php'));
}

// ... (بقية الكود)
if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_property_type')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./property_types/index.php =====
<?php
$page_title = "إدارة أنواع العقارات";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
// require_role('admin'); // يمكنك إضافة هذا إذا كانت هذه الصفحة للمسؤول فقط
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page_ptype = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page_ptype = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset_ptype = ($current_page_ptype - 1) * $items_per_page_ptype;

// وظيفة البحث
$search_term_ptype = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part_ptype = '';
$params_for_count_ptype = [];
$types_for_count_ptype = "";
$params_for_data_ptype = [];
$types_for_data_ptype = "";

if (!empty($search_term_ptype)) {
    $search_query_part_ptype = " WHERE type_name LIKE ? OR display_name_ar LIKE ?";
    $search_like_ptype = "%" . $search_term_ptype . "%";
    $params_for_count_ptype = [$search_like_ptype, $search_like_ptype];
    $types_for_count_ptype = "ss";
    $params_for_data_ptype = $params_for_count_ptype;
    $types_for_data_ptype = $types_for_count_ptype;
}

// الحصول على العدد الإجمالي لأنواع العقارات
$total_sql_ptype = "SELECT COUNT(*) as total FROM property_types" . $search_query_part_ptype;
$stmt_total_ptype = $mysqli->prepare($total_sql_ptype);
$total_property_types = 0;
if ($stmt_total_ptype) {
    if (!empty($params_for_count_ptype)) {
        $stmt_total_ptype->bind_param($types_for_count_ptype, ...$params_for_count_ptype);
    }
    $stmt_total_ptype->execute();
    $total_result_ptype = $stmt_total_ptype->get_result();
    $total_property_types = ($total_result_ptype && $total_result_ptype->num_rows > 0) ? $total_result_ptype->fetch_assoc()['total'] : 0;
    $stmt_total_ptype->close();
} else {
    error_log("SQL Prepare Error for counting property types: " . $mysqli->error);
}
$total_pages_ptype = ceil($total_property_types / $items_per_page_ptype);

// جلب أنواع العقارات للصفحة الحالية
$sql_ptype = "SELECT * FROM property_types" . $search_query_part_ptype . " ORDER BY display_name_ar ASC LIMIT ? OFFSET ?";
$current_data_params_ptype = $params_for_data_ptype;
$current_data_params_ptype[] = $items_per_page_ptype;
$current_data_params_ptype[] = $offset_ptype;
$current_data_types_ptype = $types_for_data_ptype . 'ii';

$property_types_list_page = [];
$stmt_ptype = $mysqli->prepare($sql_ptype);
if ($stmt_ptype) {
    if (!empty($current_data_params_ptype)) {
        $stmt_ptype->bind_param($current_data_types_ptype, ...$current_data_params_ptype);
    } else {
        $stmt_ptype->bind_param('ii', $items_per_page_ptype, $offset_ptype);
    }
    $stmt_ptype->execute();
    $result_ptype = $stmt_ptype->get_result();
    $property_types_list_page = ($result_ptype && $result_ptype->num_rows > 0) ? $result_ptype->fetch_all(MYSQLI_ASSOC) : [];
    $stmt_ptype->close();
} else {
    error_log("SQL Prepare Error for fetching property types: " . $mysqli->error);
}

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-tags"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة أنواع العقارات (<?php echo $total_property_types; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#propertyTypeModal" onclick="preparePropertyTypeModal('add_property_type')">
                    <i class="bi bi-plus-circle"></i> إضافة نوع جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('property_types/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                     <label for="search_property_types_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_property_types_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالمعرف أو الاسم المعروض..." value="<?php echo esc_attr($search_term_ptype); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($property_types_list_page) && !empty($search_term_ptype)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term_ptype); ?>".</div>
            <?php elseif (empty($property_types_list_page)): ?>
                <div class="alert alert-info text-center">لا توجد أنواع عقارات مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#propertyTypeModal" onclick="preparePropertyTypeModal('add_property_type')">إضافة نوع جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>المعرف (<code>type_name</code>)</th>
                            <th>الاسم المعروض (بالعربية)</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_ptype = ($current_page_ptype - 1) * $items_per_page_ptype + 1; ?>
                        <?php foreach ($property_types_list_page as $ptype_item): ?>
                        <tr>
                            <td><?php echo $row_num_ptype++; ?></td>
                            <td><code><?php echo esc_html($ptype_item['type_name']); ?></code></td>
                            <td><?php echo esc_html($ptype_item['display_name_ar']); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="preparePropertyTypeModal('edit_property_type', <?php echo htmlspecialchars(json_encode($ptype_item), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#propertyTypeModal"
                                        title="تعديل نوع العقار">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-property-type-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $ptype_item['id']; ?>"
                                        data-name="<?php echo esc_attr($ptype_item['display_name_ar']); ?>"
                                        data-delete-url="<?php echo base_url('property_types/actions.php?action=delete_property_type&id=' . $ptype_item['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف نوع العقار">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_ptype > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_ptype = [];
            if (!empty($search_term_ptype)) $pagination_params_ptype['search'] = $search_term_ptype;
            echo generate_pagination_links($current_page_ptype, $total_pages_ptype, 'property_types/index.php', $pagination_params_ptype);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
// تضمين نافذة إضافة/تعديل نوع العقار
require_once __DIR__ . '/../includes/modals/property_type_modal.php';
// تضمين نافذة تأكيد الحذف
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function preparePropertyTypeModal(action, ptypeData = null) {
    const ptypeModal = document.getElementById('propertyTypeModal');
    const modalTitle = ptypeModal.querySelector('#propertyTypeModalLabel_ptypes');
    const ptypeForm = ptypeModal.querySelector('#propertyTypeFormModal');
    const ptypeIdInput = ptypeModal.querySelector('#property_type_id_modal_ptypes');
    const actionInput = ptypeModal.querySelector('#property_type_form_action_modal_ptypes');
    const submitButton = ptypeModal.querySelector('#propertyTypeSubmitButtonTextModalPtypes');

    ptypeForm.reset();
    if(ptypeIdInput) ptypeIdInput.value = '';
    actionInput.value = action;

    if (action === 'add_property_type') {
        modalTitle.textContent = 'إضافة نوع عقار جديد';
        if(submitButton) submitButton.textContent = 'إضافة النوع';
    } else if (action === 'edit_property_type' && ptypeData) {
        modalTitle.textContent = 'تعديل نوع العقار: ' + ptypeData.display_name_ar;
        if(submitButton) submitButton.textContent = 'حفظ التعديلات';
        if(ptypeIdInput) ptypeIdInput.value = ptypeData.id;
        
        let nameInput = ptypeModal.querySelector('#property_type_name_modal_ptypes');
        let displayNameInput = ptypeModal.querySelector('#property_type_display_name_ar_modal_ptypes');
        if(nameInput) nameInput.value = ptypeData.type_name || '';
        if(displayNameInput) displayNameInput.value = ptypeData.display_name_ar || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalPType = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalPType) {
        confirmDeleteModalPType.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-property-type-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalPType.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف نوع العقار "' + itemName + '"؟';
                
                var additionalInfo = confirmDeleteModalPType.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: لا يمكن حذف نوع العقار إذا كان مستخدماً في أي عقارات حالية.';

                var confirmDeleteButton = confirmDeleteModalPType.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonPType = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonPType, confirmDeleteButton);
                    
                    newConfirmDeleteButtonPType.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonPType.removeAttribute('href');
                    
                    newConfirmDeleteButtonPType.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    const ptypeFormElement = document.getElementById('propertyTypeFormModal');
    if(ptypeFormElement) {
        ptypeFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(ptypeFormElement);
            const actionUrl = '<?php echo base_url('property_types/actions.php'); ?>';

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var ptypeModalInstance = bootstrap.Modal.getInstance(document.getElementById('propertyTypeModal'));
                    if(ptypeModalInstance) ptypeModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./tenants/index.php =====
<?php
$page_title = "إدارة المستأجرين";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// Pagination variables
$current_page = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset = ($current_page - 1) * $items_per_page;

// Search and filter functionality
$search_term_tenant = isset($_GET['search']) ? sanitize_input($_GET['search']) : ''; // تم تغيير الاسم ليكون فريداً
$filter_tenant_type_id_page = isset($_GET['tenant_type_id']) && filter_var($_GET['tenant_type_id'], FILTER_VALIDATE_INT) ? (int)$_GET['tenant_type_id'] : '';


$where_clauses_tenant = []; // تم تغيير الاسم
$params_for_count_tenant = []; $types_for_count_tenant = "";
$params_for_data_tenant = [];  $types_for_data_tenant = "";

if (!empty($search_term_tenant)) {
    $where_clauses_tenant[] = "(t.full_name LIKE ? OR t.national_id_iqama LIKE ? OR t.phone_primary LIKE ? OR t.email LIKE ?)";
    $search_like_tenant = "%" . $search_term_tenant . "%";
    for ($i=0; $i<4; $i++) {
        $params_for_count_tenant[] = $search_like_tenant; $types_for_count_tenant .= "s";
        $params_for_data_tenant[] = $search_like_tenant;  $types_for_data_tenant .= "s";
    }
}
if (!empty($filter_tenant_type_id_page)) {
    $where_clauses_tenant[] = "t.tenant_type_id = ?";
    $params_for_count_tenant[] = $filter_tenant_type_id_page; $types_for_count_tenant .= "i";
    $params_for_data_tenant[] = $filter_tenant_type_id_page;  $types_for_data_tenant .= "i";
}


$where_sql_tenant = "";
if (!empty($where_clauses_tenant)) {
    $where_sql_tenant = " WHERE " . implode(" AND ", $where_clauses_tenant);
}

// Get total number of tenants
$total_sql_tenant = "SELECT COUNT(t.id) as total 
                     FROM tenants t" . $where_sql_tenant; // تم تعديل الاسم
$stmt_total_tenant = $mysqli->prepare($total_sql_tenant);
if ($stmt_total_tenant) {
    if (!empty($params_for_count_tenant)) {
        $stmt_total_tenant->bind_param($types_for_count_tenant, ...$params_for_count_tenant);
    }
    $stmt_total_tenant->execute();
    $total_result_tenant = $stmt_total_tenant->get_result();
    $total_tenants = ($total_result_tenant && $total_result_tenant->num_rows > 0) ? $total_result_tenant->fetch_assoc()['total'] : 0;
    $stmt_total_tenant->close();
} else {
    $total_tenants = 0;
    error_log("SQL Prepare Error for counting tenants: " . $mysqli->error);
}
$total_pages_tenant = ceil($total_tenants / $items_per_page); // تم تغيير الاسم

// Fetch tenants for the current page
// تم تحديث الاستعلام ليشمل الحقول الجديدة واسم نوع المستأجر
$sql_tenant = "SELECT t.id, t.full_name, t.national_id_iqama, t.phone_primary, t.phone_secondary, t.email, 
                      t.current_address, t.occupation, t.nationality, t.notes, 
                      t.buyer_vat_number, t.buyer_street_name, t.buyer_building_no, t.buyer_additional_no, 
                      t.buyer_district_name, t.buyer_city_name, t.buyer_postal_code, t.buyer_country_code,
                      t.emergency_contact_name, t.emergency_contact_phone,
                      t.tenant_type_id, tt.display_name_ar as tenant_type_name, t.gender, t.date_of_birth
               FROM tenants t
               LEFT JOIN tenant_types tt ON t.tenant_type_id = tt.id" 
               . $where_sql_tenant . " ORDER BY t.full_name ASC LIMIT ? OFFSET ?";

$current_data_params_tenant = $params_for_data_tenant;
$current_data_params_tenant[] = $items_per_page;
$current_data_params_tenant[] = $offset;
$current_data_types_tenant = $types_for_data_tenant . 'ii';

$tenants_list = []; // تم تغيير الاسم
$stmt_tenant = $mysqli->prepare($sql_tenant);
if ($stmt_tenant) {
    if (!empty($current_data_params_tenant)) { 
        $stmt_tenant->bind_param($current_data_types_tenant, ...$current_data_params_tenant);
    } else {
         $stmt_tenant->bind_param('ii', $items_per_page, $offset);
    }
    $stmt_tenant->execute();
    $result_tenant = $stmt_tenant->get_result();
    $tenants_list = ($result_tenant && $result_tenant->num_rows > 0) ? $result_tenant->fetch_all(MYSQLI_ASSOC) : [];
    if ($stmt_tenant) $stmt_tenant->close();
} else {
    error_log("SQL Prepare Error for fetching tenants: " . $mysqli->error);
}

// جلب قائمة أنواع المستأجرين للفلتر
$tenant_types_filter_list_page = [];
$ttypes_query_filter_idx = "SELECT id, display_name_ar FROM tenant_types ORDER BY display_name_ar ASC";
if($ttypes_result_filter_idx = $mysqli->query($ttypes_query_filter_idx)){
    while($ttype_row_filter_idx = $ttypes_result_filter_idx->fetch_assoc()){
        $tenant_types_filter_list_page[] = $ttype_row_filter_idx;
    }
    $ttypes_result_filter_idx->free();
}


$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-person-badge-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة المستأجرين (<?php echo $total_tenants; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#tenantModal" onclick="prepareTenantModal('add_tenant')">
                    <i class="bi bi-person-plus-fill"></i> إضافة مستأجر جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('tenants/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-5 col-lg-6">
                    <label for="search_tenants_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_tenants_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالاسم، رقم الهوية/الإقامة، الجوال، البريد..." value="<?php echo esc_attr($search_term_tenant); ?>">
                </div>
                <div class="col-md-3 col-lg-2">
                    <label for="filter_tenant_type_id_page_filter" class="form-label form-label-sm visually-hidden">نوع المستأجر</label>
                    <select id="filter_tenant_type_id_page_filter" name="tenant_type_id" class="form-select form-select-sm">
                        <option value="">-- فلترة حسب النوع --</option>
                         <?php foreach ($tenant_types_filter_list_page as $ttype_filter_item): ?>
                            <option value="<?php echo $ttype_filter_item['id']; ?>" <?php echo ($filter_tenant_type_id_page == $ttype_filter_item['id']) ? 'selected' : ''; ?>>
                                <?php echo esc_html($ttype_filter_item['display_name_ar']); ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-2 col-lg-2">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i> بحث</button>
                </div>
                <div class="col-md-2 col-lg-2">
                     <a href="<?php echo base_url('tenants/index.php'); ?>" class="btn btn-outline-secondary btn-sm w-100"><i class="bi bi-eraser-fill"></i> مسح</a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($tenants_list) && (!empty($search_term_tenant) || !empty($filter_tenant_type_id_page)) ): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق معايير البحث أو الفلترة.</div>
            <?php elseif (empty($tenants_list)): ?>
                <div class="alert alert-info text-center">لا يوجد مستأجرون مسجلون حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#tenantModal" onclick="prepareTenantModal('add_tenant')">إضافة مستأجر جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>الاسم الكامل</th>
                            <th>رقم الهوية/الإقامة</th>
                            <th>الجوال الأساسي</th>
                            <th>نوع المستأجر</th>
                            <th>البريد الإلكتروني</th>
                            <th class="text-center">الإجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_tenant = ($current_page - 1) * $items_per_page + 1; ?>
                        <?php foreach ($tenants_list as $tenant_item_page): // تم تغيير اسم المتغير ?>
                        <tr>
                            <td><?php echo $row_num_tenant++; ?></td>
                            <td><?php echo esc_html($tenant_item_page['full_name']); ?></td>
                            <td><?php echo esc_html($tenant_item_page['national_id_iqama']); ?></td>
                            <td><?php echo esc_html($tenant_item_page['phone_primary']); ?></td>
                            <td><?php echo esc_html($tenant_item_page['tenant_type_name'] ?: '-'); ?></td>
                            <td><?php echo esc_html($tenant_item_page['email'] ?: '-'); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareTenantModal('edit_tenant', <?php echo htmlspecialchars(json_encode($tenant_item_page), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#tenantModal"
                                        title="تعديل بيانات المستأجر">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-tenant-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $tenant_item_page['id']; ?>"
                                        data-name="<?php echo esc_attr($tenant_item_page['full_name']); ?>"
                                        data-delete-url="<?php echo base_url('tenants/tenant_actions.php?action=delete_tenant&id=' . $tenant_item_page['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف المستأجر">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <a href="<?php echo base_url('leases/index.php?tenant_id=' . $tenant_item_page['id']); ?>" class="btn btn-sm btn-outline-info" title="عرض عقود الإيجار لهذا المستأجر">
                                    <i class="bi bi-file-earmark-text-fill"></i> <span class="d-none d-md-inline">العقود</span>
                                </a>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_tenant > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_tenant = []; // تم تغيير الاسم
            if (!empty($search_term_tenant)) $pagination_params_tenant['search'] = $search_term_tenant;
            if (!empty($filter_tenant_type_id_page)) $pagination_params_tenant['tenant_type_id'] = $filter_tenant_type_id_page;
            echo generate_pagination_links($current_page, $total_pages_tenant, 'tenants/index.php', $pagination_params_tenant);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/tenant_modal.php';
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareTenantModal(action, tenantData = null) {
    const tenantModal = document.getElementById('tenantModal'); // معرف النافذة المنبثقة
    const modalTitle = tenantModal.querySelector('#tenantModalLabel_tenants');
    const tenantForm = tenantModal.querySelector('#tenantFormModal');
    const tenantIdInput = tenantModal.querySelector('#tenant_id_modal_tenants');
    const actionInput = tenantModal.querySelector('#tenant_form_action_modal_tenants');
    const submitButton = tenantModal.querySelector('#tenantSubmitButtonTextModal'); // معرف زر الإرسال

    tenantForm.reset();
    tenantIdInput.value = '';
    actionInput.value = action;
    
    // Reset to the first tab
    var firstTabElTenant = tenantModal.querySelector('#nav-basic-info-tab-modal');
    if (firstTabElTenant) {
        var firstTabTenant = new bootstrap.Tab(firstTabElTenant);
        firstTabTenant.show();
    }

    const formUrl = '<?php echo base_url('tenants/tenant_actions.php'); ?>';
    // tenantForm.action = formUrl; // Not strictly needed for AJAX submission

    if (action === 'add_tenant') {
        modalTitle.textContent = 'إضافة مستأجر جديد';
        submitButton.textContent = 'إضافة المستأجر';
    } else if (action === 'edit_tenant' && tenantData) {
        modalTitle.textContent = 'تعديل بيانات المستأجر: ' + tenantData.full_name;
        submitButton.textContent = 'حفظ التعديلات';
        tenantIdInput.value = tenantData.id;
        
        // Populate Basic Info Tab
        if(document.getElementById('tenant_full_name_modal_tenants')) document.getElementById('tenant_full_name_modal_tenants').value = tenantData.full_name || '';
        if(document.getElementById('tenant_national_id_iqama_modal_tenants')) document.getElementById('tenant_national_id_iqama_modal_tenants').value = tenantData.national_id_iqama || '';
        if(document.getElementById('tenant_type_id_modal_tenants')) document.getElementById('tenant_type_id_modal_tenants').value = tenantData.tenant_type_id || '';
        if(document.getElementById('tenant_phone_primary_modal_tenants')) document.getElementById('tenant_phone_primary_modal_tenants').value = tenantData.phone_primary || '';
        if(document.getElementById('tenant_phone_secondary_modal_tenants')) document.getElementById('tenant_phone_secondary_modal_tenants').value = tenantData.phone_secondary || '';
        if(document.getElementById('tenant_email_modal_tenants')) document.getElementById('tenant_email_modal_tenants').value = tenantData.email || '';
        if(document.getElementById('tenant_gender_modal_tenants')) document.getElementById('tenant_gender_modal_tenants').value = tenantData.gender || '';
        if(document.getElementById('tenant_dob_modal_tenants')) document.getElementById('tenant_dob_modal_tenants').value = tenantData.date_of_birth || '';
        if(document.getElementById('tenant_current_address_modal_tenants')) document.getElementById('tenant_current_address_modal_tenants').value = tenantData.current_address || '';
        if(document.getElementById('tenant_occupation_modal_tenants')) document.getElementById('tenant_occupation_modal_tenants').value = tenantData.occupation || '';
        if(document.getElementById('tenant_nationality_modal_tenants')) document.getElementById('tenant_nationality_modal_tenants').value = tenantData.nationality || '';
        if(document.getElementById('tenant_notes_modal_tenants')) document.getElementById('tenant_notes_modal_tenants').value = tenantData.notes || '';

        // Populate ZATCA Buyer Info Tab
        if(document.getElementById('tenant_buyer_vat_number_modal_tenants')) document.getElementById('tenant_buyer_vat_number_modal_tenants').value = tenantData.buyer_vat_number || '';
        if(document.getElementById('tenant_buyer_street_name_modal_tenants')) document.getElementById('tenant_buyer_street_name_modal_tenants').value = tenantData.buyer_street_name || '';
        if(document.getElementById('tenant_buyer_building_no_modal_tenants')) document.getElementById('tenant_buyer_building_no_modal_tenants').value = tenantData.buyer_building_no || '';
        if(document.getElementById('tenant_buyer_additional_no_modal_tenants')) document.getElementById('tenant_buyer_additional_no_modal_tenants').value = tenantData.buyer_additional_no || '';
        if(document.getElementById('tenant_buyer_district_name_modal_tenants')) document.getElementById('tenant_buyer_district_name_modal_tenants').value = tenantData.buyer_district_name || '';
        if(document.getElementById('tenant_buyer_city_name_modal_tenants')) document.getElementById('tenant_buyer_city_name_modal_tenants').value = tenantData.buyer_city_name || '';
        if(document.getElementById('tenant_buyer_postal_code_modal_tenants')) document.getElementById('tenant_buyer_postal_code_modal_tenants').value = tenantData.buyer_postal_code || '';
        if(document.getElementById('tenant_buyer_country_code_modal_tenants')) document.getElementById('tenant_buyer_country_code_modal_tenants').value = tenantData.buyer_country_code || 'SA';
        
        // Populate Emergency Contact Tab
        if(document.getElementById('tenant_emergency_contact_name_modal_tenants')) document.getElementById('tenant_emergency_contact_name_modal_tenants').value = tenantData.emergency_contact_name || '';
        if(document.getElementById('tenant_emergency_contact_phone_modal_tenants')) document.getElementById('tenant_emergency_contact_phone_modal_tenants').value = tenantData.emergency_contact_phone || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalTenantPage = document.getElementById('confirmDeleteModal'); // تم تغيير الاسم
    if (confirmDeleteModalTenantPage) {
        confirmDeleteModalTenantPage.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-tenant-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalTenantPage.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف المستأجر "' + itemName + '"؟';
                var additionalInfo = confirmDeleteModalTenantPage.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: قد تكون هناك عقود إيجار أو فواتير مرتبطة بهذا المستأجر.';
                
                var confirmDeleteButton = confirmDeleteModalTenantPage.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonTenant = confirmDeleteButton.cloneNode(true); // تم تغيير الاسم
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonTenant, confirmDeleteButton);
                    
                    newConfirmDeleteButtonTenant.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonTenant.removeAttribute('href');
                    
                    newConfirmDeleteButtonTenant.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    // Handle AJAX form submission for tenantFormModal
    const tenantFormElement = document.getElementById('tenantFormModal'); // تم تغيير ID
    if(tenantFormElement) {
        tenantFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(tenantFormElement);
            const actionUrl = tenantFormElement.getAttribute('action');

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var tenantModalInstance = bootstrap.Modal.getInstance(document.getElementById('tenantModal'));
                    if(tenantModalInstance) tenantModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./tenants/tenant_actions.php =====
<?php
// tenants/tenant_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // تضمين ملف سجل التدقيق

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id = get_current_user_id();

// Helper function to get sanitized POST data, converting empty strings to null
function get_post_val_or_null($post_key) { // Renamed to avoid conflict
    if (isset($_POST[$post_key])) {
        $value = trim($_POST[$post_key]);
        return $value === '' ? null : sanitize_input($value);
    }
    return null;
}


if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $tenant_id_from_post = isset($_POST['tenant_id']) ? filter_var($_POST['tenant_id'], FILTER_SANITIZE_NUMBER_INT) : null;

    $tenant_full_name = get_post_val_or_null('tenant_full_name');
    $tenant_national_id_iqama = get_post_val_or_null('tenant_national_id_iqama');
    $tenant_type_id = isset($_POST['tenant_type_id']) && $_POST['tenant_type_id'] !== '' ? filter_var($_POST['tenant_type_id'], FILTER_VALIDATE_INT) : null;
    $tenant_phone_primary = get_post_val_or_null('tenant_phone_primary');
    $tenant_phone_secondary = get_post_val_or_null('tenant_phone_secondary');
    $tenant_email_input = isset($_POST['tenant_email']) ? trim($_POST['tenant_email']) : null;
    $tenant_email = ($tenant_email_input === '' || $tenant_email_input === null) ? null : filter_var(sanitize_input($tenant_email_input), FILTER_SANITIZE_EMAIL);

    $gender_input = get_post_val_or_null('gender');
    $allowed_genders = ['Male', 'Female', 'Other'];
    $gender = ($gender_input !== null && in_array($gender_input, $allowed_genders)) ? $gender_input : null;

    $date_of_birth_input = get_post_val_or_null('date_of_birth');
    $date_of_birth = null;
    if ($date_of_birth_input) {
        $date_obj = DateTime::createFromFormat('Y-m-d', $date_of_birth_input);
        if ($date_obj && $date_obj->format('Y-m-d') === $date_of_birth_input) {
            $date_of_birth = $date_of_birth_input;
        }
    }

    $tenant_current_address = get_post_val_or_null('tenant_current_address');
    $tenant_occupation = get_post_val_or_null('tenant_occupation');
    $tenant_nationality = get_post_val_or_null('tenant_nationality');
    $tenant_notes = get_post_val_or_null('tenant_notes');

    $tenant_buyer_vat_number = get_post_val_or_null('tenant_buyer_vat_number');
    $tenant_buyer_street_name = get_post_val_or_null('tenant_buyer_street_name');
    $tenant_buyer_building_no = get_post_val_or_null('tenant_buyer_building_no');
    $tenant_buyer_additional_no = get_post_val_or_null('tenant_buyer_additional_no');
    $tenant_buyer_district_name = get_post_val_or_null('tenant_buyer_district_name');
    $tenant_buyer_city_name = get_post_val_or_null('tenant_buyer_city_name');
    $tenant_buyer_postal_code = get_post_val_or_null('tenant_buyer_postal_code');
    $tenant_buyer_country_code_input = isset($_POST['tenant_buyer_country_code']) ? strtoupper(trim($_POST['tenant_buyer_country_code'])) : null;
    $tenant_buyer_country_code = ($tenant_buyer_country_code_input === '' || $tenant_buyer_country_code_input === null) ? 'SA' : sanitize_input($tenant_buyer_country_code_input);


    $tenant_emergency_contact_name = get_post_val_or_null('tenant_emergency_contact_name');
    $tenant_emergency_contact_phone = get_post_val_or_null('tenant_emergency_contact_phone');

    if (empty($tenant_full_name) || empty($tenant_national_id_iqama) || empty($tenant_phone_primary)) {
        $response = ['success' => false, 'message' => 'الحقول المطلوبة (الاسم، الهوية/الإقامة، الجوال الأساسي) يجب ملؤها.'];
        echo json_encode($response); exit;
    }
    if ($tenant_email !== null && !filter_var($tenant_email, FILTER_VALIDATE_EMAIL)) {
        $response = ['success' => false, 'message' => 'صيغة البريد الإلكتروني غير صحيحة.'];
        echo json_encode($response); exit;
    }
    
    $mysqli->begin_transaction();
    try {
        if ($action === 'add_tenant') {
            // ... (فحص التكرار كما في النسخة السابقة)
            $fields_to_check_add = [];
            if ($tenant_national_id_iqama !== null) $fields_to_check_add['national_id_iqama'] = $tenant_national_id_iqama;
            if ($tenant_phone_primary !== null) $fields_to_check_add['phone_primary'] = $tenant_phone_primary;
            if ($tenant_email !== null) $fields_to_check_add['email'] = $tenant_email;
            $duplicate_errors_add = []; // تعريفها هنا
            foreach ($fields_to_check_add as $field => $value) {
                $stmt_check = $mysqli->prepare("SELECT id FROM tenants WHERE `$field` = ?");
                if ($stmt_check) {
                    $stmt_check->bind_param("s", $value); $stmt_check->execute(); $stmt_check->store_result();
                    if ($stmt_check->num_rows > 0) { $duplicate_errors_add[] = "حقل '$field' مستخدم بالفعل."; }
                    $stmt_check->close();
                } else { throw new Exception("خطأ تجهيز فحص التكرار: " . $mysqli->error); }
            }
            if (!empty($duplicate_errors_add)) throw new Exception(implode(" ", $duplicate_errors_add));


            $sql = "INSERT INTO tenants (full_name, national_id_iqama, tenant_type_id, phone_primary, phone_secondary, email, 
                                       gender, date_of_birth, current_address, occupation, nationality, notes, 
                                       buyer_vat_number, buyer_street_name, buyer_building_no, buyer_additional_no, 
                                       buyer_district_name, buyer_city_name, buyer_postal_code, buyer_country_code,
                                       emergency_contact_name, emergency_contact_phone, created_by_id) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception("خطأ في تجهيز استعلام إضافة المستأجر: " . $mysqli->error);
            
            $stmt->bind_param("ssisssssssssssssssssssi", 
                $tenant_full_name, $tenant_national_id_iqama, $tenant_type_id, $tenant_phone_primary, $tenant_phone_secondary, $tenant_email,
                $gender, $date_of_birth, $tenant_current_address, $tenant_occupation, $tenant_nationality, $tenant_notes,
                $tenant_buyer_vat_number, $tenant_buyer_street_name, $tenant_buyer_building_no, $tenant_buyer_additional_no,
                $tenant_buyer_district_name, $tenant_buyer_city_name, $tenant_buyer_postal_code, $tenant_buyer_country_code,
                $tenant_emergency_contact_name, $tenant_emergency_contact_phone, $current_user_id
            );
            if (!$stmt->execute()) throw new Exception("خطأ في إضافة المستأجر: " . $stmt->error);
            $new_tenant_id = $stmt->insert_id;
            $stmt->close();
            log_audit_action($mysqli, AUDIT_CREATE_TENANT, $new_tenant_id, 'tenants', ['full_name' => $tenant_full_name, 'national_id' => $tenant_national_id_iqama]);
            $response = ['success' => true, 'message' => "تمت إضافة المستأجر بنجاح!"];

        } elseif ($action === 'edit_tenant' && $tenant_id_from_post) {
            // ... (فحص التكرار كما في النسخة السابقة)
            $fields_to_check_edit = [];
            if ($tenant_national_id_iqama !== null) $fields_to_check_edit['national_id_iqama'] = $tenant_national_id_iqama;
            if ($tenant_phone_primary !== null) $fields_to_check_edit['phone_primary'] = $tenant_phone_primary;
            if ($tenant_email !== null) $fields_to_check_edit['email'] = $tenant_email;
            $duplicate_errors_edit = []; // تعريفها هنا
            foreach ($fields_to_check_edit as $field => $value) {
                $stmt_check_edit = $mysqli->prepare("SELECT id FROM tenants WHERE `$field` = ? AND id != ?");
                if($stmt_check_edit){
                    $stmt_check_edit->bind_param("si", $value, $tenant_id_from_post); $stmt_check_edit->execute(); $stmt_check_edit->store_result();
                    if ($stmt_check_edit->num_rows > 0) { $duplicate_errors_edit[] = "حقل '$field' مستخدم بالفعل لمستأجر آخر."; }
                    $stmt_check_edit->close();
                } else { throw new Exception("خطأ تجهيز فحص التكرار (تعديل): " . $mysqli->error); }
            }
            if (!empty($duplicate_errors_edit)) throw new Exception(implode(" ", $duplicate_errors_edit));

            $stmt_old_tenant = $mysqli->prepare("SELECT * FROM tenants WHERE id = ?");
            $old_tenant_data = null;
            if($stmt_old_tenant){
                $stmt_old_tenant->bind_param("i", $tenant_id_from_post);
                $stmt_old_tenant->execute();
                $res_old_tenant = $stmt_old_tenant->get_result();
                if($res_old_tenant->num_rows > 0) $old_tenant_data = $res_old_tenant->fetch_assoc();
                $stmt_old_tenant->close();
            }
            if(!$old_tenant_data) throw new Exception("المستأجر المطلوب تعديله غير موجود.");


            $sql = "UPDATE tenants SET 
                        full_name = ?, national_id_iqama = ?, tenant_type_id = ?, phone_primary = ?, phone_secondary = ?, email = ?,
                        gender = ?, date_of_birth = ?, current_address = ?, occupation = ?, nationality = ?, notes = ?,
                        buyer_vat_number = ?, buyer_street_name = ?, buyer_building_no = ?, buyer_additional_no = ?,
                        buyer_district_name = ?, buyer_city_name = ?, buyer_postal_code = ?, buyer_country_code = ?,
                        emergency_contact_name = ?, emergency_contact_phone = ?
                    WHERE id = ?";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception("خطأ في تجهيز استعلام تعديل المستأجر: " . $mysqli->error);
            
            $stmt->bind_param("ssisssssssssssssssssssi",
                $tenant_full_name, $tenant_national_id_iqama, $tenant_type_id, $tenant_phone_primary, $tenant_phone_secondary, $tenant_email,
                $gender, $date_of_birth, $tenant_current_address, $tenant_occupation, $tenant_nationality, $tenant_notes,
                $tenant_buyer_vat_number, $tenant_buyer_street_name, $tenant_buyer_building_no, $tenant_buyer_additional_no,
                $tenant_buyer_district_name, $tenant_buyer_city_name, $tenant_buyer_postal_code, $tenant_buyer_country_code,
                $tenant_emergency_contact_name, $tenant_emergency_contact_phone,
                $tenant_id_from_post
            );
            if (!$stmt->execute()) throw new Exception("خطأ في تعديل بيانات المستأجر: " . $stmt->error);
            $stmt->close();
            
            $new_tenant_data = compact('tenant_full_name', 'tenant_national_id_iqama', 'tenant_type_id', 'tenant_phone_primary', 'tenant_phone_secondary', 'tenant_email', 'gender', 'date_of_birth', 'tenant_current_address', 'tenant_occupation', 'tenant_nationality', 'tenant_notes', 'tenant_buyer_vat_number', 'tenant_buyer_street_name', 'tenant_buyer_building_no', 'tenant_buyer_additional_no', 'tenant_buyer_district_name', 'tenant_buyer_city_name', 'tenant_buyer_postal_code', 'tenant_buyer_country_code', 'tenant_emergency_contact_name', 'tenant_emergency_contact_phone');
            log_audit_action($mysqli, AUDIT_EDIT_TENANT, $tenant_id_from_post, 'tenants', ['old_data' => $old_tenant_data, 'new_data' => $new_tenant_data]);
            $response = ['success' => true, 'message' => "تم تعديل بيانات المستأجر بنجاح!"];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف المستأجر مفقود.");
        }
        $mysqli->commit();
        if(isset($_SESSION['old_data_tenant_modal'])) unset($_SESSION['old_data_tenant_modal']); 

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Tenant Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
        if(!isset($_SESSION['old_data_tenant_modal'])) $_SESSION['old_data_tenant_modal'] = $_POST;
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_tenant') {
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('tenants/index.php'));
    }
    $tenant_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($tenant_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_old_tenant_del = $mysqli->prepare("SELECT full_name, national_id_iqama FROM tenants WHERE id = ?");
            $tenant_details_log = null;
            if($stmt_old_tenant_del){
                $stmt_old_tenant_del->bind_param("i", $tenant_id_to_delete);
                $stmt_old_tenant_del->execute();
                $res_old_tenant_del = $stmt_old_tenant_del->get_result();
                if($res_old_tenant_del->num_rows > 0) $tenant_details_log = $res_old_tenant_del->fetch_assoc();
                $stmt_old_tenant_del->close();
            }
            if(!$tenant_details_log) throw new Exception("المستأجر المطلوب حذفه غير موجود.");
            
            // ... (نفس منطق التحقق من العقود المرتبطة كما في النسخة السابقة)
            $check_leases_sql = "SELECT COUNT(*) as count FROM leases WHERE tenant_id = ?";
            $stmt_check_leases = $mysqli->prepare($check_leases_sql);
            if(!$stmt_check_leases) throw new Exception("خطأ تجهيز فحص عقود الإيجار: " . $mysqli->error);
            $stmt_check_leases->bind_param("i", $tenant_id_to_delete);
            $stmt_check_leases->execute();
            $leases_count_res = $stmt_check_leases->get_result()->fetch_assoc();
            $leases_count = $leases_count_res ? $leases_count_res['count'] : 0;
            $stmt_check_leases->close();
            if ($leases_count > 0) throw new Exception("لا يمكن حذف هذا المستأجر لوجود (" . $leases_count . ") عقد/عقود إيجار مرتبطة به.");

            $sql_delete = "DELETE FROM tenants WHERE id = ?";
            $stmt_delete = $mysqli->prepare($sql_delete);
            if (!$stmt_delete) throw new Exception("خطأ في تجهيز استعلام حذف المستأجر: " . $mysqli->error);
            $stmt_delete->bind_param("i", $tenant_id_to_delete);
            if (!$stmt_delete->execute()) throw new Exception("خطأ في حذف المستأجر: " . $stmt_delete->error);
            $stmt_delete->close();
            
            log_audit_action($mysqli, AUDIT_DELETE_TENANT, $tenant_id_to_delete, 'tenants', $tenant_details_log);
            $mysqli->commit();
            set_message("تم حذف المستأجر بنجاح!", "success");

        } catch (Exception $e) {
             $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Tenant Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف المستأجر غير صحيح للحذف.", "danger");
    }
    redirect(base_url('tenants/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_tenant')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./owners/owner_actions.php =====
<?php
// owners/owner_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php';

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id = get_current_user_id();

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $owner_id = isset($_POST['owner_id']) ? filter_var($_POST['owner_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    // تم التعديل هنا ليتوافق مع النموذج الذي يرسل 'name'
    $name = isset($_POST['name']) ? sanitize_input(trim($_POST['name'])) : null; 
    $email_input = isset($_POST['email']) ? trim($_POST['email']) : null;
    $email = ($email_input === '' || $email_input === null) ? null : filter_var(sanitize_input($email_input), FILTER_SANITIZE_EMAIL);
    $phone = isset($_POST['phone']) ? sanitize_input(trim(preg_replace('/[^0-9]/', '', $_POST['phone']))) : null;
    $national_id_iqama = isset($_POST['national_id_iqama']) ? sanitize_input(trim($_POST['national_id_iqama'])) : null;
    $address = isset($_POST['address']) ? sanitize_input(trim($_POST['address'])) : null;
    $notes = isset($_POST['notes']) ? sanitize_input(trim($_POST['notes'])) : null;
    
    $registration_date_input = isset($_POST['registration_date']) ? trim($_POST['registration_date']) : null;
    $registration_date = null;
    if (!empty($registration_date_input)) {
        $date_obj = DateTime::createFromFormat('Y-m-d', $registration_date_input);
        if ($date_obj && $date_obj->format('Y-m-d') === $registration_date_input) {
            $registration_date = $registration_date_input;
        }
    }

    if (empty($name)) { // الآن التحقق من $name صحيح
        $response = ['success' => false, 'message' => 'اسم المالك مطلوب.'];
        echo json_encode($response);
        exit;
    }
    if ($email !== null && !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $response = ['success' => false, 'message' => 'البريد الإلكتروني غير صالح.'];
        echo json_encode($response);
        exit;
    }
    
    $mysqli->begin_transaction();
    try {
        if ($action === 'add_owner') {
            $fields_to_check_add = ['name' => $name];
            if ($email !== null) $fields_to_check_add['email'] = $email;
            if ($phone !== null && $phone !== '') $fields_to_check_add['phone'] = $phone;
            if ($national_id_iqama !== null && $national_id_iqama !== '') $fields_to_check_add['national_id_iqama'] = $national_id_iqama;
            
            $duplicate_errors_add = [];
            foreach ($fields_to_check_add as $field => $value) {
                $stmt_check = $mysqli->prepare("SELECT id FROM owners WHERE `$field` = ?");
                if ($stmt_check) {
                    $stmt_check->bind_param("s", $value);
                    $stmt_check->execute();
                    $stmt_check->store_result();
                    if ($stmt_check->num_rows > 0) {
                        if ($field === 'name') $duplicate_errors_add[] = "اسم المالك مستخدم بالفعل.";
                        if ($field === 'email') $duplicate_errors_add[] = "البريد الإلكتروني مستخدم بالفعل.";
                        if ($field === 'phone') $duplicate_errors_add[] = "رقم الهاتف مستخدم بالفعل.";
                        if ($field === 'national_id_iqama') $duplicate_errors_add[] = "رقم الهوية/الإقامة مستخدم بالفعل.";
                    }
                    $stmt_check->close();
                } else { throw new Exception("خطأ تجهيز فحص التكرار (إضافة مالك): " . $mysqli->error); }
            }
            if (!empty($duplicate_errors_add)) throw new Exception(implode("<br>", $duplicate_errors_add));

            $stmt = $mysqli->prepare("INSERT INTO owners (name, email, phone, national_id_iqama, address, registration_date, notes, created_by_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
            if (!$stmt) throw new Exception('فشل في تحضير استعلام إضافة المالك: ' . $mysqli->error);
            
            $stmt->bind_param("sssssssi", $name, $email, $phone, $national_id_iqama, $address, $registration_date, $notes, $current_user_id);
            if (!$stmt->execute()) throw new Exception('فشل في إضافة المالك: ' . $stmt->error);
            
            $new_owner_id = $stmt->insert_id;
            $stmt->close();
            log_audit_action($mysqli, AUDIT_CREATE_OWNER, $new_owner_id, 'owners', ['name' => $name, 'email' => $email]);
            $response = ['success' => true, 'message' => 'تمت إضافة المالك بنجاح!'];

        } elseif ($action === 'edit_owner' && $owner_id) {
            $stmt_old = $mysqli->prepare("SELECT * FROM owners WHERE id = ?");
            $old_data = null;
            if($stmt_old){
                $stmt_old->bind_param("i", $owner_id);
                $stmt_old->execute();
                $result_old = $stmt_old->get_result();
                if($result_old->num_rows > 0) $old_data = $result_old->fetch_assoc();
                $stmt_old->close();
            }
            if(!$old_data) throw new Exception("المالك المطلوب تعديله غير موجود.");

            $fields_to_check_edit = ['name' => $name];
            if ($email !== null) $fields_to_check_edit['email'] = $email;
            if ($phone !== null && $phone !== '') $fields_to_check_edit['phone'] = $phone;
            if ($national_id_iqama !== null && $national_id_iqama !== '') $fields_to_check_edit['national_id_iqama'] = $national_id_iqama;

            $duplicate_errors_edit = [];
            foreach ($fields_to_check_edit as $field => $value) {
                $stmt_check_edit = $mysqli->prepare("SELECT id FROM owners WHERE `$field` = ? AND id != ?");
                 if ($stmt_check_edit) {
                    $stmt_check_edit->bind_param("si", $value, $owner_id);
                    $stmt_check_edit->execute();
                    $stmt_check_edit->store_result();
                    if ($stmt_check_edit->num_rows > 0) {
                         if ($field === 'name') $duplicate_errors_edit[] = "اسم المالك مستخدم بالفعل لمالك آخر.";
                        // ... (بقية رسائل الخطأ)
                    }
                    $stmt_check_edit->close();
                } else { throw new Exception("خطأ تجهيز فحص التكرار (تعديل مالك): " . $mysqli->error); }
            }
            if (!empty($duplicate_errors_edit)) throw new Exception(implode("<br>", $duplicate_errors_edit));

            $stmt = $mysqli->prepare("UPDATE owners SET name = ?, email = ?, phone = ?, national_id_iqama = ?, address = ?, registration_date = ?, notes = ? WHERE id = ?");
            if (!$stmt) throw new Exception('فشل في تحضير استعلام تعديل المالك: ' . $mysqli->error);
            
            $stmt->bind_param("sssssssi", $name, $email, $phone, $national_id_iqama, $address, $registration_date, $notes, $owner_id);
            if (!$stmt->execute()) throw new Exception('فشل في تحديث بيانات المالك: ' . $stmt->error);
            $stmt->close();

            $new_data = compact('name', 'email', 'phone', 'national_id_iqama', 'address', 'registration_date', 'notes');
            log_audit_action($mysqli, AUDIT_EDIT_OWNER, $owner_id, 'owners', ['old_data' => $old_data, 'new_data' => $new_data]);
            $response = ['success' => true, 'message' => 'تم تحديث بيانات المالك بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف المالك مفقود.");
        }
        $mysqli->commit();

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Owner Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_owner') { // تم تغيير 'delete' إلى 'delete_owner' ليكون أوضح
    // ... (منطق الحذف كما هو في النسخة السابقة، مع التأكد أن `delete-owner-btn` في index.php يمرر action=delete_owner)
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('owners/index.php'));
    }
    $owner_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($owner_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_old_owner = $mysqli->prepare("SELECT name, email FROM owners WHERE id = ?");
            $owner_details_for_log = null;
            if($stmt_old_owner){
                $stmt_old_owner->bind_param("i", $owner_id_to_delete);
                $stmt_old_owner->execute();
                $res_old_owner = $stmt_old_owner->get_result();
                if($res_old_owner->num_rows > 0) $owner_details_for_log = $res_old_owner->fetch_assoc();
                $stmt_old_owner->close();
            }
            if(!$owner_details_for_log) throw new Exception("المالك المطلوب حذفه غير موجود.");

            $stmt_check_properties = $mysqli->prepare("SELECT COUNT(*) as property_count FROM properties WHERE owner_id = ?");
            if (!$stmt_check_properties) throw new Exception('خطأ في التحقق من العقارات المرتبطة: ' . $mysqli->error);
            $stmt_check_properties->bind_param("i", $owner_id_to_delete);
            $stmt_check_properties->execute();
            $result_prop_check = $stmt_check_properties->get_result(); // تم تغيير اسم المتغير
            $row_prop_check = $result_prop_check->fetch_assoc(); // تم تغيير اسم المتغير
            $stmt_check_properties->close();

            if ($row_prop_check['property_count'] > 0) { // تم تغيير اسم المتغير
                throw new Exception('لا يمكن حذف المالك لوجود (' . $row_prop_check['property_count'] . ') عقار/عقارات مرتبطة به.');
            }
            
            $stmt_delete = $mysqli->prepare("DELETE FROM owners WHERE id = ?");
            if (!$stmt_delete) throw new Exception('فشل في تحضير استعلام الحذف: ' . $mysqli->error);
            $stmt_delete->bind_param("i", $owner_id_to_delete);
            if (!$stmt_delete->execute()) throw new Exception('فشل في حذف المالك: ' . $stmt_delete->error);
            $stmt_delete->close();
            
            log_audit_action($mysqli, AUDIT_DELETE_OWNER, $owner_id_to_delete, 'owners', $owner_details_for_log);
            $mysqli->commit();
            set_message("تم حذف المالك بنجاح!", "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Owner Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف المالك غير صحيح للحذف.", "danger");
    }
    redirect(base_url('owners/index.php'));
}

// Fallback for invalid requests if not POST or expected GET delete
if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_owner')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response); 
}
?>
===== ./owners/index.php =====
<?php
$page_title = "إدارة أصحاب العقارات";
// تضمين db_connect أولاً لأنه يقوم بإعداد الاتصال بقاعدة البيانات وتحميل الإعدادات الهامة
require_once __DIR__ . '/../db_connect.php'; // هذا الملف يتضمن config.php ويحمّل الإعدادات
require_once __DIR__ . '/../includes/session_manager.php';
require_login(); // يتطلب تسجيل الدخول للوصول لهذه الصفحة
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php'; // يبدأ الجلسة إذا لم تكن قد بدأت
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح (Pagination)
// التأكد من أن رقم الصفحة هو عدد صحيح موجب
$current_page = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
// استخدام الثابت المعرف لعدد العناصر في كل صفحة، مع قيمة افتراضية إذا لم يتم تعريفه
$items_per_page = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : (defined('ITEMS_PER_PAGE') && filter_var(ITEMS_PER_PAGE, FILTER_VALIDATE_INT) ? (int)ITEMS_PER_PAGE : 10);
$offset = ($current_page - 1) * $items_per_page;

// وظيفة البحث
$search_term = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$search_query_part = '';
$params_for_count = []; // معلمات لـ COUNT query
$params_for_data = [];  // معلمات لـ data query
$types_for_count = "";  // أنواع المعلمات لـ COUNT
$types_for_data = "";   // أنواع المعلمات لـ data

if (!empty($search_term)) {
    $search_query_part = " WHERE name LIKE ? OR email LIKE ? OR phone LIKE ? OR national_id_iqama LIKE ?";
    $search_like = "%" . $search_term . "%";
    // معلمات استعلام العد
    $params_for_count = [$search_like, $search_like, $search_like, $search_like];
    $types_for_count = "ssss"; // 4 سلاسل نصية
    // معلمات استعلام البيانات (سيتم إضافة LIMIT و OFFSET لاحقًا)
    $params_for_data = $params_for_count;
    $types_for_data = $types_for_count;
}

// الحصول على العدد الإجمالي لأصحاب العقارات للتصفح
$total_sql = "SELECT COUNT(*) as total FROM owners" . $search_query_part;
$stmt_total = $mysqli->prepare($total_sql);
if (!empty($search_term)) {
    $stmt_total->bind_param($types_for_count, ...$params_for_count);
}
$stmt_total->execute();
$total_result = $stmt_total->get_result();
$total_owners = $total_result->fetch_assoc()['total'];
$total_pages = ceil($total_owners / $items_per_page);
$stmt_total->close();

// جلب أصحاب العقارات للصفحة الحالية
$sql = "SELECT * FROM owners" . $search_query_part . " ORDER BY name ASC LIMIT ? OFFSET ?";
$stmt = $mysqli->prepare($sql);

// إضافة LIMIT و OFFSET إلى المعلمات والأنواع لاستعلام البيانات
$current_data_params = $params_for_data; // ابدأ بمعلمات البحث
$current_data_params[] = $items_per_page;
$current_data_params[] = $offset;
$current_data_types = $types_for_data . 'ii'; // إضافة 'ii' لأنواع LIMIT و OFFSET الصحيحة

// ربط المعلمات فقط إذا كانت المصفوفة ليست فارغة (لتجنب خطأ bind_param مع 0 معلمات)
if (!empty($current_data_params)) {
    $stmt->bind_param($current_data_types, ...$current_data_params);
} else {
    // حالة عدم وجود بحث (فقط LIMIT و OFFSET)
    $stmt->bind_param('ii', $items_per_page, $offset);
}

$stmt->execute();
$result = $stmt->get_result();
$owners = $result->fetch_all(MYSQLI_ASSOC);
$stmt->close();

$csrf_token = generate_csrf_token(); // لنماذج النوافذ المنبثقة
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-people-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة أصحاب العقارات (<?php echo $total_owners; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#ownerModal" data-action="add">
                    <i class="bi bi-plus-circle"></i> إضافة مالك جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('owners/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-10 col-sm-8">
                    <input type="text" name="search" class="form-control form-control-sm" placeholder="ابحث بالاسم, البريد الإلكتروني, رقم الهاتف, رقم الهوية..." value="<?php echo esc_attr($search_term); ?>">
                </div>
                <div class="col-md-2 col-sm-4">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> بحث</button>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($owners) && !empty($search_term)): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج بحث تطابق "<?php echo esc_html($search_term); ?>".</div>
            <?php elseif (empty($owners) && empty($search_term)): ?>
                <div class="alert alert-info text-center">لا يوجد أصحاب عقارات مسجلين حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#ownerModal" data-action="add">إضافة مالك جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">الاسم</th>
                            <th scope="col">البريد الإلكتروني</th>
                            <th scope="col">رقم الهاتف</th>
                            <th scope="col">رقم الهوية/الإقامة</th>
                            <th scope="col">العنوان</th>
                            <th scope="col" class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num = ($current_page - 1) * $items_per_page + 1; ?>
                        <?php foreach ($owners as $owner): ?>
                        <tr>
                            <td><?php echo $row_num++; ?></td>
                            <td><?php echo esc_html($owner['name']); ?></td>
                            <td><?php echo esc_html($owner['email'] ?: '-'); ?></td>
                            <td><?php echo esc_html($owner['phone'] ?: '-'); ?></td>
                            <td><?php echo esc_html($owner['national_id_iqama'] ?: '-'); ?></td>
                            <td style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="<?php echo esc_attr($owner['address']); ?>"><?php echo esc_html($owner['address'] ?: '-'); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning edit-owner-btn"
                                        data-bs-toggle="modal" data-bs-target="#ownerModal"
                                        data-id="<?php echo $owner['id']; ?>"
                                        data-name="<?php echo esc_attr($owner['name']); ?>"
                                        data-email="<?php echo esc_attr($owner['email']); ?>"
                                        data-phone="<?php echo esc_attr($owner['phone']); ?>"
                                        data-national_id="<?php echo esc_attr($owner['national_id_iqama']); ?>"
                                        data-address="<?php echo esc_attr($owner['address']); ?>"
                                        title="تعديل بيانات المالك">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-owner-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $owner['id']; ?>"
                                        data-name="<?php echo esc_attr($owner['name']); ?>"
                                        data-delete-url="<?php echo base_url('owners/owner_actions.php?action=delete&id=' . $owner['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف المالك">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params = [];
            if (!empty($search_term)) {
                $pagination_params['search'] = $search_term;
            }
            // المسار الأساسي لروابط التصفح يجب أن يكون نسبيًا من جذر التطبيق
            echo generate_pagination_links($current_page, $total_pages, 'owners/index.php', $pagination_params);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
// تضمين نافذة إضافة/تعديل المالك
require_once __DIR__ . '/../includes/modals/owner_modal.php';
// تضمين نافذة تأكيد الحذف
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
document.addEventListener('DOMContentLoaded', function () {
    // التعامل مع نافذة المالك للإضافة والتعديل
    var ownerModal = document.getElementById('ownerModal');
    if (ownerModal) {
        ownerModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget; // الزر الذي قام بتشغيل النافذة
            var action = button.getAttribute('data-action'); // 'add' أو يكون ضمنيًا 'edit'
            var modalTitle = ownerModal.querySelector('.modal-title');
            var ownerForm = ownerModal.querySelector('#ownerForm');
            var ownerIdInput = ownerModal.querySelector('#owner_id');
            var formActionInput = ownerModal.querySelector('#form_action'); // حقل الإجراء المخفي
            var submitButton = ownerModal.querySelector('button[type="submit"]');

            ownerForm.reset(); // إعادة تعيين حقول النموذج
            ownerIdInput.value = ''; // مسح معرّف المالك

            var form_url = '<?php echo base_url('owners/owner_actions.php'); ?>'; // رابط معالجة النموذج

            if (action === 'add') {
                modalTitle.textContent = 'إضافة مالك جديد';
                formActionInput.value = 'add_owner';
                submitButton.textContent = 'إضافة المالك';
                ownerForm.action = form_url;
            } else { // إجراء التعديل
                modalTitle.textContent = 'تعديل بيانات المالك';
                formActionInput.value = 'edit_owner';
                submitButton.textContent = 'حفظ التعديلات';
                ownerForm.action = form_url;

                // ملء حقول النموذج ببيانات المالك للتعديل
                ownerIdInput.value = button.getAttribute('data-id');
                ownerModal.querySelector('#owner_name').value = button.getAttribute('data-name');
                ownerModal.querySelector('#owner_email').value = button.getAttribute('data-email');
                ownerModal.querySelector('#owner_phone').value = button.getAttribute('data-phone');
                ownerModal.querySelector('#owner_national_id').value = button.getAttribute('data-national_id');
                ownerModal.querySelector('#owner_address').value = button.getAttribute('data-address');
            }
        });
    }

    // التعامل مع نافذة تأكيد الحذف
    var confirmDeleteModal = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModal) {
        confirmDeleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget; // الزر الذي قام بتشغيل النافذة
            var itemName = button.getAttribute('data-name'); // اسم العنصر المراد حذفه
            var deleteUrl = button.getAttribute('data-delete-url'); // رابط الحذف من الزر

            var modalBodyText = confirmDeleteModal.querySelector('.modal-body-text');
            if (modalBodyText) {
                 modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف "' + itemName + '"؟ لا يمكن التراجع عن هذا الإجراء.';
            }

            var confirmDeleteButton = confirmDeleteModal.querySelector('#confirmDeleteButton');
            if (confirmDeleteButton) {
                confirmDeleteButton.setAttribute('href', deleteUrl); // تعيين رابط الحذف لزر التأكيد
            }
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; // لتضمين أي سكربتات في نهاية الصفحة ?>
===== ./auth/logout.php =====
<?php
// auth/logout.php
// يجب تضمين هذه الملفات قبل أي إخراج HTML أو استدعاء session_start() إذا لم تكن قد بدأت بالفعل
require_once __DIR__ . '/../db_connect.php'; // For $mysqli if needed for logging before session destroy
require_once __DIR__ . '/../includes/session_manager.php'; // Handles session_start()
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // For logging

if (is_logged_in()) {
    $user_id_for_log = $_SESSION['user_id'] ?? null;
    $username_for_log = $_SESSION['username'] ?? 'unknown_on_logout';

    // Log the logout action before destroying the session
    if ($user_id_for_log && isset($mysqli)) { // Check if $mysqli is available
        log_audit_action($mysqli, AUDIT_LOGOUT, $user_id_for_log, 'users', ['username' => $username_for_log]);
    } elseif (!isset($mysqli)) {
        error_log("Logout action: mysqli connection not available for audit logging.");
    }


    // Unset all of the session variables.
    $_SESSION = array();

    // If it's desired to kill the session, also delete the session cookie.
    // Note: This will destroy the session, and not just the session data!
    if (ini_get("session.use_cookies")) {
        $params = session_get_cookie_params();
        setcookie(session_name(), '', time() - 42000,
            $params["path"], $params["domain"],
            $params["secure"], $params["httponly"]
        );
    }

    // Finally, destroy the session.
    session_destroy();
}

// Redirect to login page
$login_page_url = base_url('auth/login.php');
header("Location: " . $login_page_url . "?message=" . urlencode("تم تسجيل الخروج بنجاح.") . "&type=success");
exit;
?>
===== ./auth/process_registration.php =====
<?php
// auth/process_registration.php

require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/functions.php';

if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

$register_page = base_url('auth/register.php');
$login_page = base_url('auth/login.php');

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // CSRF Token Validation
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $_SESSION['message'] = "خطأ في التحقق من صحة الطلب (CSRF).";
        $_SESSION['message_type'] = "danger";
        header("Location: " . $register_page);
        exit();
    }

    // Sanitize inputs
    $full_name = isset($_POST['full_name']) ? sanitize_input($_POST['full_name']) : '';
    $username = isset($_POST['username']) ? sanitize_input($_POST['username']) : '';
    $email = isset($_POST['email']) ? filter_var(sanitize_input($_POST['email']), FILTER_SANITIZE_EMAIL) : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';
    $confirm_password = isset($_POST['confirm_password']) ? $_POST['confirm_password'] : '';

    // Store old data for pre-filling the form on error
    $_SESSION['old_data'] = [
        'full_name' => $full_name,
        'username' => $username,
        'email' => $email,
    ];
    $_SESSION['errors'] = [];

    // --- Validations ---
    // Full Name
    if (empty($full_name)) {
        $_SESSION['errors']['full_name'] = "الاسم الكامل مطلوب.";
    } elseif (mb_strlen($full_name) < 3 || mb_strlen($full_name) > 100) {
        $_SESSION['errors']['full_name'] = "يجب أن يكون الاسم الكامل بين 3 و 100 حرف.";
    }

    // Username
    if (empty($username)) {
        $_SESSION['errors']['username'] = "اسم المستخدم مطلوب.";
    } elseif (!preg_match('/^[a-zA-Z0-9_]{3,30}$/', $username)) {
        $_SESSION['errors']['username'] = "يجب أن يتكون اسم المستخدم من 3 إلى 30 حرفًا إنجليزيًا أو أرقامًا أو شرطة سفلية (_).";
    } else {
        // Check if username already exists
        $stmt_check_username = $mysqli->prepare("SELECT id FROM users WHERE username = ?");
        $stmt_check_username->bind_param("s", $username);
        $stmt_check_username->execute();
        $stmt_check_username->store_result();
        if ($stmt_check_username->num_rows > 0) {
            $_SESSION['errors']['username'] = "اسم المستخدم هذا مسجل بالفعل. الرجاء اختيار اسم آخر.";
        }
        $stmt_check_username->close();
    }

    // Email
    if (empty($email)) {
        $_SESSION['errors']['email'] = "البريد الإلكتروني مطلوب.";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['errors']['email'] = "صيغة البريد الإلكتروني غير صحيحة.";
    } else {
        // Check if email already exists
        $stmt_check_email = $mysqli->prepare("SELECT id FROM users WHERE email = ?");
        $stmt_check_email->bind_param("s", $email);
        $stmt_check_email->execute();
        $stmt_check_email->store_result();
        if ($stmt_check_email->num_rows > 0) {
            $_SESSION['errors']['email'] = "هذا البريد الإلكتروني مسجل بالفعل.";
        }
        $stmt_check_email->close();
    }

    // Password
    if (empty($password)) {
        $_SESSION['errors']['password'] = "كلمة المرور مطلوبة.";
    } elseif (strlen($password) < 8) {
        $_SESSION['errors']['password'] = "يجب أن تتكون كلمة المرور من 8 أحرف على الأقل.";
    } elseif (!preg_match('/[A-Z]/', $password)) {
        $_SESSION['errors']['password'] = "يجب أن تحتوي كلمة المرور على حرف كبير واحد على الأقل.";
    } elseif (!preg_match('/[a-z]/', $password)) {
        $_SESSION['errors']['password'] = "يجب أن تحتوي كلمة المرور على حرف صغير واحد على الأقل.";
    } elseif (!preg_match('/[0-9]/', $password)) {
        $_SESSION['errors']['password'] = "يجب أن تحتوي كلمة المرور على رقم واحد على الأقل.";
    } elseif (!preg_match('/[\W_]/', $password)) { // \W matches any non-word character, _ is for underscore
        $_SESSION['errors']['password'] = "يجب أن تحتوي كلمة المرور على رمز خاص واحد على الأقل (مثل !@#$%^&*).";
    }


    // Confirm Password
    if (empty($confirm_password)) {
        $_SESSION['errors']['confirm_password'] = "تأكيد كلمة المرور مطلوب.";
    } elseif ($password !== $confirm_password) {
        $_SESSION['errors']['confirm_password'] = "كلمتا المرور غير متطابقتين.";
    }


    // If there are validation errors, redirect back to registration page
    if (!empty($_SESSION['errors'])) {
        $_SESSION['message'] = "الرجاء تصحيح الأخطاء الموضحة أدناه.";
        $_SESSION['message_type'] = "danger";
        header("Location: " . $register_page);
        exit();
    }

    // --- Process Registration ---
    // Hash the password
    $password_hash = password_hash($password, PASSWORD_DEFAULT);

    // Default role for new registrations (e.g., 'staff' or 'user')
    // Admins can change roles later if needed.
    $default_role = 'staff'; // أو 'user' حسب تصميمك

    $sql_insert_user = "INSERT INTO users (full_name, username, email, password_hash, role, is_active) VALUES (?, ?, ?, ?, ?, 1)";
    $stmt_insert_user = $mysqli->prepare($sql_insert_user);

    if ($stmt_insert_user) {
        $stmt_insert_user->bind_param("sssss", $full_name, $username, $email, $password_hash, $default_role);
        if ($stmt_insert_user->execute()) {
            // Registration successful
            unset($_SESSION['old_data']); // Clear old form data
            unset($_SESSION['errors']);   // Clear any previous errors

            // Optionally, log the user in directly, or redirect to login page with a success message
            $_SESSION['message'] = "تم إنشاء حسابك بنجاح! يمكنك الآن تسجيل الدخول.";
            $_SESSION['message_type'] = "success";
            header("Location: " . $login_page);
            exit();

        } else {
            // Database insertion error
            error_log("خطأ في تسجيل المستخدم (إدراج قاعدة البيانات): " . $stmt_insert_user->error);
            $_SESSION['message'] = "حدث خطأ أثناء إنشاء حسابك. يرجى المحاولة مرة أخرى.";
            $_SESSION['message_type'] = "danger";
        }
        $stmt_insert_user->close();
    } else {
        // SQL prepare error
        error_log("خطأ في تجهيز استعلام تسجيل المستخدم: " . $mysqli->error);
        $_SESSION['message'] = "حدث خطأ في النظام. يرجى المحاولة مرة أخرى لاحقًا.";
        $_SESSION['message_type'] = "danger";
    }

    header("Location: " . $register_page); // Redirect back on error
    exit();

} else {
    // Not a POST request, redirect to registration page
    header("Location: " . $register_page);
    exit();
}
?>
===== ./auth/login.php =====
<?php
// auth/login.php
$page_title = "تسجيل الدخول";

// التأكد من تحميل الإعدادات الأساسية
// db_connect.php يتضمن config.php ويحمّل الإعدادات
if (file_exists(__DIR__ . '/../db_connect.php')) {
    require_once __DIR__ . '/../db_connect.php';
} else {
    // تعريفات احتياطية إذا لم يتمكن من تحميل db_connect.php
    if (!defined('APP_NAME')) define('APP_NAME', 'نظام إدارة العقارات');
    // APP_BASE_URL يجب أن يُعرّف بشكل صحيح في config.php
    // إذا لم يتم تحميله، فإن base_url() قد لا تعمل بشكل صحيح.
    // كحل مؤقت جدًا إذا كان config.php غير موجود أو لا يمكن الوصول إليه:
    if (!defined('APP_BASE_URL')) {
        $protocol_login = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || (isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] == 443)) ? "https://" : "http://";
        $host_login = isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : 'localhost';
        // نفترض أن login.php في auth/ وأن جذر المشروع هو مجلد واحد للأعلى
        define('APP_BASE_URL', rtrim($protocol_login . $host_login . dirname(dirname($_SERVER['SCRIPT_NAME'])), '/\\'));
    }
    error_log("CRITICAL: db_connect.php not found from auth/login.php. APP_BASE_URL might be incorrect.");
}


if (session_status() == PHP_SESSION_NONE) {
    session_start();
}
// functions.php يجب أن يتم تضمينه بعد db_connect (الذي يتضمن config) لضمان تعريف APP_BASE_URL
if (file_exists(__DIR__ . '/../includes/functions.php')) {
    require_once __DIR__ . '/../includes/functions.php';
} else {
    // دالة base_url() لن تكون متاحة إذا لم يتم تضمين functions.php
    function base_url($path = '') { return rtrim(APP_BASE_URL, '/') . '/' . ltrim($path, '/'); } // تعريف احتياطي بسيط
    error_log("CRITICAL: functions.php not found from auth/login.php. base_url() might be using a fallback.");
}


if (isset($_SESSION['user_id'])) {
    redirect(base_url('dashboard.php')); // استخدم base_url() هنا أيضًا
}

// معالجة رسالة تسجيل الخروج إذا تم تمريرها عبر GET
if (isset($_GET['status']) && $_GET['status'] === 'logged_out' && !isset($_SESSION['message'])) {
    set_message("تم تسجيل خروجك بنجاح.", "success");
    // إعادة تحميل الصفحة بدون معامل status لتجنب ظهور الرسالة عند كل تحديث
    // أو يمكنك تركها لتظهر مرة واحدة. إذا أردت إزالتها من الـ URL:
    // header("Location: " . base_url('auth/login.php'));
    // exit();
}


$csrf_token = generate_csrf_token();
?>
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo htmlspecialchars($page_title) . ' - ' . (defined('APP_NAME') ? htmlspecialchars(APP_NAME) : 'نظام الإدارة'); ?></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Cairo', sans-serif;
            background-color: #eef1f4;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 15px;
        }
        .login-card {
            width: 100%;
            max-width: 430px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        .login-card-header {
            background-color: #28a745;
            color: white;
            padding: 25px;
            text-align: center;
        }
        .login-card-header h3 {
            margin: 0;
            font-weight: 600;
            font-size: 1.8rem;
        }
        .login-card-body {
            padding: 30px;
        }
        .btn-login {
            background-color: #28a745;
            border-color: #28a745;
            color: white;
            font-weight: 600;
            padding: 0.75rem;
            font-size: 1.1rem;
        }
        .btn-login:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }
        .form-floating > label { padding-right: 1.75rem; } /* RTL fix */
    </style>
</head>
<body>

    <div class="login-card">
        <div class="login-card-header">
            <h3><?php echo defined('APP_NAME') ? htmlspecialchars(APP_NAME) : 'نظام الإدارة'; ?></h3>
            <p class="mb-0">مرحباً بك! الرجاء تسجيل الدخول للمتابعة.</p>
        </div>
        <div class="login-card-body">
            <?php
            if (isset($_SESSION['message']) && isset($_SESSION['message_type'])) {
                echo '<div class="alert alert-' . htmlspecialchars($_SESSION['message_type']) . ' alert-dismissible fade show" role="alert">';
                echo htmlspecialchars($_SESSION['message']);
                echo '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>';
                echo '</div>';
                unset($_SESSION['message']);
                unset($_SESSION['message_type']);
            }
            ?>
            <form id="loginForm" action="<?php echo base_url('auth/process_login.php'); ?>" method="POST" novalidate>
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">

                <div class="form-floating mb-3">
                    <input type="text" class="form-control form-control-lg <?php echo isset($_SESSION['errors']['username']) ? 'is-invalid' : ''; ?>" id="username" name="username" placeholder="اسم المستخدم أو البريد الإلكتروني" value="<?php echo isset($_SESSION['old_data']['username']) ? esc_attr($_SESSION['old_data']['username']) : ''; ?>" required autofocus>
                    <label for="username"><i class="bi bi-person-fill me-2"></i>اسم المستخدم أو البريد الإلكتروني</label>
                    <?php if (isset($_SESSION['errors']['username'])): ?>
                        <div class="invalid-feedback"><?php echo $_SESSION['errors']['username']; ?></div>
                    <?php endif; ?>
                </div>

                <div class="form-floating mb-3">
                    <input type="password" class="form-control form-control-lg <?php echo isset($_SESSION['errors']['password']) ? 'is-invalid' : ''; ?>" id="password" name="password" placeholder="كلمة المرور" required>
                    <label for="password"><i class="bi bi-lock-fill me-2"></i>كلمة المرور</label>
                     <?php if (isset($_SESSION['errors']['password'])): ?>
                        <div class="invalid-feedback"><?php echo $_SESSION['errors']['password']; ?></div>
                    <?php endif; ?>
                </div>

                <div class="d-grid mb-3">
                    <button class="btn btn-login btn-lg" type="submit">
                        <i class="bi bi-box-arrow-in-right me-2"></i> تسجيل الدخول
                    </button>
                </div>
                 <?php
                    unset($_SESSION['old_data']);
                    unset($_SESSION['errors']);
                ?>
            </form>
        </div>
        <div class="text-center p-3 bg-light border-top">
            <small class="text-muted">&copy; <?php echo date('Y'); ?> <?php echo defined('APP_NAME') ? htmlspecialchars(APP_NAME) : 'جميع الحقوق محفوظة'; ?></small>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        (function () {
            'use strict'
            var forms = document.querySelectorAll('#loginForm')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
</body>
</html>
===== ./auth/register.php =====
<?php
// auth/register.php
$page_title = "إنشاء حساب جديد";

// التأكد من تحميل الإعدادات الأساسية
if (file_exists(__DIR__ . '/../db_connect.php')) {
    require_once __DIR__ . '/../db_connect.php';
} else {
    if (!defined('APP_NAME')) define('APP_NAME', 'نظام إدارة العقارات');
    if (!defined('APP_BASE_URL')) define('APP_BASE_URL', '../');
    error_log("CRITICAL: db_connect.php not found from auth/register.php");
}

if (session_status() == PHP_SESSION_NONE) {
    session_start();
}
require_once __DIR__ . '/../includes/functions.php';

// إذا كان المستخدم مسجل دخوله بالفعل، قم بإعادة توجيهه إلى لوحة التحكم
if (isset($_SESSION['user_id'])) {
    redirect(base_url('dashboard.php'));
}

$csrf_token = generate_csrf_token();
?>
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo htmlspecialchars($page_title) . ' - ' . (defined('APP_NAME') ? htmlspecialchars(APP_NAME) : 'نظام الإدارة'); ?></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Cairo', sans-serif;
            background-color: #eef1f4;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 15px;
        }
        .register-card { /* Changed from login-card for clarity if needed */
            width: 100%;
            max-width: 500px; /* Slightly wider for more fields */
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        .register-card-header {
            background-color: #28a745;
            color: white;
            padding: 25px;
            text-align: center;
        }
        .register-card-header h3 {
            margin: 0;
            font-weight: 600;
            font-size: 1.8rem;
        }
        .register-card-body {
            padding: 30px;
        }
        .btn-register { /* Changed from btn-login */
            background-color: #28a745;
            border-color: #28a745;
            color: white;
            font-weight: 600;
            padding: 0.75rem;
            font-size: 1.1rem;
            transition: background-color 0.2s ease-in-out;
        }
        .btn-register:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }
        .form-floating > .form-control,
        .form-floating > .form-select {
            height: calc(3.5rem + 2px);
            line-height: 1.25;
        }
        .form-floating > label {
            padding-right: 1.75rem;
        }
        .form-floating > .form-control:focus ~ label,
        .form-floating > .form-control:not(:placeholder-shown) ~ label,
        .form-floating > .form-select:focus ~ label,
        .form-floating > .form-select:not([value=""]) ~ label {
            opacity: 0.65;
            transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
        }
    </style>
</head>
<body>

    <div class="register-card">
        <div class="register-card-header">
            <h3>إنشاء حساب جديد</h3>
        </div>
        <div class="register-card-body">
            <?php
            if (isset($_SESSION['message']) && isset($_SESSION['message_type'])) {
                echo '<div class="alert alert-' . htmlspecialchars($_SESSION['message_type']) . ' alert-dismissible fade show" role="alert">';
                echo htmlspecialchars($_SESSION['message']);
                echo '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>';
                echo '</div>';
                unset($_SESSION['message']);
                unset($_SESSION['message_type']);
            }
            ?>
            <form id="registerForm" action="<?php echo base_url('auth/process_registration.php'); ?>" method="POST" novalidate>
                <input type="hidden" name="csrf_token" value="<?php echo esc_attr($csrf_token); ?>">

                <div class="form-floating mb-3">
                    <input type="text" class="form-control <?php echo isset($_SESSION['errors']['full_name']) ? 'is-invalid' : ''; ?>" id="full_name" name="full_name" placeholder="الاسم الكامل" value="<?php echo isset($_SESSION['old_data']['full_name']) ? esc_attr($_SESSION['old_data']['full_name']) : ''; ?>" required>
                    <label for="full_name"><i class="bi bi-person-vcard-fill me-2"></i>الاسم الكامل</label>
                    <?php if (isset($_SESSION['errors']['full_name'])): ?>
                        <div class="invalid-feedback"><?php echo $_SESSION['errors']['full_name']; ?></div>
                    <?php endif; ?>
                </div>

                <div class="form-floating mb-3">
                    <input type="text" class="form-control <?php echo isset($_SESSION['errors']['username']) ? 'is-invalid' : ''; ?>" id="username" name="username" placeholder="اسم المستخدم" value="<?php echo isset($_SESSION['old_data']['username']) ? esc_attr($_SESSION['old_data']['username']) : ''; ?>" required>
                    <label for="username"><i class="bi bi-person-fill me-2"></i>اسم المستخدم (باللغة الإنجليزية، بدون مسافات)</label>
                    <?php if (isset($_SESSION['errors']['username'])): ?>
                        <div class="invalid-feedback"><?php echo $_SESSION['errors']['username']; ?></div>
                    <?php endif; ?>
                </div>

                <div class="form-floating mb-3">
                    <input type="email" class="form-control <?php echo isset($_SESSION['errors']['email']) ? 'is-invalid' : ''; ?>" id="email" name="email" placeholder="البريد الإلكتروني" value="<?php echo isset($_SESSION['old_data']['email']) ? esc_attr($_SESSION['old_data']['email']) : ''; ?>" required>
                    <label for="email"><i class="bi bi-envelope-fill me-2"></i>البريد الإلكتروني</label>
                    <?php if (isset($_SESSION['errors']['email'])): ?>
                        <div class="invalid-feedback"><?php echo $_SESSION['errors']['email']; ?></div>
                    <?php endif; ?>
                </div>

                <div class="form-floating mb-3">
                    <input type="password" class="form-control <?php echo isset($_SESSION['errors']['password']) ? 'is-invalid' : ''; ?>" id="password" name="password" placeholder="كلمة المرور" required>
                    <label for="password"><i class="bi bi-lock-fill me-2"></i>كلمة المرور</label>
                    <?php if (isset($_SESSION['errors']['password'])): ?>
                        <div class="invalid-feedback"><?php echo $_SESSION['errors']['password']; ?></div>
                    <?php endif; ?>
                </div>

                <div class="form-floating mb-3">
                    <input type="password" class="form-control <?php echo isset($_SESSION['errors']['confirm_password']) ? 'is-invalid' : ''; ?>" id="confirm_password" name="confirm_password" placeholder="تأكيد كلمة المرور" required>
                    <label for="confirm_password"><i class="bi bi-shield-lock-fill me-2"></i>تأكيد كلمة المرور</label>
                    <?php if (isset($_SESSION['errors']['confirm_password'])): ?>
                        <div class="invalid-feedback"><?php echo $_SESSION['errors']['confirm_password']; ?></div>
                    <?php endif; ?>
                </div>
                
                <p class="form-text text-muted small">
                    يجب أن تتكون كلمة المرور من 8 أحرف على الأقل، وتحتوي على حرف كبير واحد على الأقل، وحرف صغير واحد، ورقم واحد، ورمز خاص واحد على الأقل (مثل !@#$%^&*).
                </p>


                <div class="d-grid mb-3">
                    <button class="btn btn-register btn-lg" type="submit">
                        <i class="bi bi-person-plus-fill me-2"></i> إنشاء الحساب
                    </button>
                </div>
                <hr>
                <div class="text-center">
                    <p class="mb-0">لديك حساب بالفعل؟ <a href="<?php echo base_url('auth/login.php'); ?>" class="text-decoration-none fw-bold">تسجيل الدخول</a></p>
                </div>
                <?php
                    unset($_SESSION['old_data']);
                    unset($_SESSION['errors']);
                ?>
            </form>
        </div>
         <div class="text-center p-3 bg-light border-top">
            <small class="text-muted">&copy; <?php echo date('Y'); ?> <?php echo defined('APP_NAME') ? htmlspecialchars(APP_NAME) : 'جميع الحقوق محفوظة'; ?></small>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        (function () {
            'use strict'
            var forms = document.querySelectorAll('#registerForm')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
</body>
</html>
===== ./auth/process_login.php =====
<?php
// auth/process_login.php
require_once __DIR__ . '/../db_connect.php'; // يضمن تحميل config.php
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // تضمين ملف سجل التدقيق

// لا تبدأ جلسة جديدة هنا، header_resources.php أو session_manager.php يجب أن يكون قد بدأها
if (session_status() == PHP_SESSION_NONE) {
    // هذا للتعامل مع الحالات التي قد يتم فيها استدعاء هذا الملف مباشرة (وهو أمر غير مثالي)
    // session_start(); // يفضل أن يتم التحكم بالجلسات من session_manager.php
}

$response = ['success' => false, 'message' => 'فشل تسجيل الدخول.']; // رسالة افتراضية

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response['message'] = 'خطأ في التحقق (CSRF). يرجى تحديث الصفحة والمحاولة مرة أخرى.';
        // لا نسجل محاولة تسجيل دخول فاشلة هنا بسبب خطأ CSRF لأنه قد يكون هجومًا
        echo json_encode($response);
        exit;
    }

    $username_or_email = trim($_POST['username_or_email'] ?? '');
    $password = trim($_POST['password'] ?? '');
    $user_attempt_id = null; // لتسجيل محاولة فاشلة قبل معرفة ID المستخدم
    $user_details_for_log = ['username_attempt' => $username_or_email];


    if (empty($username_or_email) || empty($password)) {
        $response['message'] = 'يرجى إدخال اسم المستخدم/البريد الإلكتروني وكلمة المرور.';
        log_audit_action($mysqli, AUDIT_LOGIN_ATTEMPT_FAILED, null, 'users', $user_details_for_log);
        echo json_encode($response);
        exit;
    }

    $sql = "SELECT u.id, u.username, u.full_name, u.email, u.password_hash, u.is_active, u.role_id, r.role_name 
            FROM users u
            LEFT JOIN roles r ON u.role_id = r.id
            WHERE (u.username = ? OR u.email = ?) 
            LIMIT 1";
            
    $stmt = $mysqli->prepare($sql);
    if (!$stmt) {
        error_log("Login SQL prepare error: " . $mysqli->error);
        $response['message'] = 'خطأ في النظام، يرجى المحاولة لاحقًا.';
        // لا يمكن تسجيل هذا كفشل تسجيل دخول لأنه خطأ نظام
        echo json_encode($response);
        exit;
    }

    $stmt->bind_param("ss", $username_or_email, $username_or_email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        $user_attempt_id = $user['id']; // لدينا ID المستخدم الآن
        $user_details_for_log['user_id_found'] = $user_attempt_id;

        if (password_verify($password, $user['password_hash'])) {
            if ($user['is_active'] == 1) {
                // Regenerate session ID to prevent session fixation
                // يجب استدعاء session_regenerate_id() قبل تعيين أي متغيرات جلسة جديدة
                if (session_status() == PHP_SESSION_ACTIVE) { // تأكد أن الجلسة نشطة
                     session_regenerate_id(true);
                } else {
                    // إذا لم تكن الجلسة قد بدأت بعد (وهو أمر غير مرجح هنا إذا تم تضمين session_manager)
                    // session_start(); 
                    // session_regenerate_id(true);
                    // هذا السطر للسلامة فقط، يجب أن تكون الجلسة قد بدأت بالفعل
                    error_log("Login process: Session was not active before regenerate. This might indicate an issue.");
                }


                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['user_full_name'] = $user['full_name'];
                $_SESSION['user_email'] = $user['email'];
                $_SESSION['user_role_id'] = $user['role_id'];
                $_SESSION['user_role_name'] = $user['role_name'];
                $_SESSION['logged_in_timestamp'] = time();
                
                log_audit_action($mysqli, AUDIT_LOGIN_SUCCESS, $user['id'], 'users', ['username' => $user['username']]);
                
                $response['success'] = true;
                $response['message'] = 'تم تسجيل الدخول بنجاح!';
                $response['redirect_url'] = base_url('dashboard.php');
            } else {
                $response['message'] = 'حسابك غير نشط. يرجى الاتصال بالمسؤول.';
                log_audit_action($mysqli, AUDIT_LOGIN_ATTEMPT_FAILED, $user_attempt_id, 'users', array_merge($user_details_for_log, ['reason' => 'Account inactive']));
            }
        } else {
            $response['message'] = 'اسم المستخدم/البريد الإلكتروني أو كلمة المرور غير صحيحة.';
            log_audit_action($mysqli, AUDIT_LOGIN_ATTEMPT_FAILED, $user_attempt_id, 'users', array_merge($user_details_for_log, ['reason' => 'Incorrect password']));
        }
    } else {
        $response['message'] = 'اسم المستخدم/البريد الإلكتروني أو كلمة المرور غير صحيحة.';
        // لا يوجد user_id هنا لأن المستخدم غير موجود
        log_audit_action($mysqli, AUDIT_LOGIN_ATTEMPT_FAILED, null, 'users', array_merge($user_details_for_log, ['reason' => 'User not found']));
    }
    $stmt->close();

} else {
    $response['message'] = 'طريقة الطلب غير صالحة.';
    // لا يتم تسجيل هذا كفشل تسجيل دخول لأنه ليس محاولة فعلية
}

// لا تغلق اتصال $mysqli هنا إذا كان الملف سيتم تضمينه في سياق آخر
// $mysqli->close(); 
echo json_encode($response);
?>
===== ./properties/property_actions.php =====
<?php
// properties/property_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // تضمين ملف سجل التدقيق


header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id = get_current_user_id();

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF). يرجى المحاولة مرة أخرى.'];
        echo json_encode($response);
        exit;
    }

    $property_id = isset($_POST['property_id']) ? filter_var($_POST['property_id'], FILTER_SANITIZE_NUMBER_INT) : null;
    $property_code = isset($_POST['property_code']) ? sanitize_input(trim($_POST['property_code'])) : null;
    $property_name = isset($_POST['property_name']) ? sanitize_input(trim($_POST['property_name'])) : null;
    $owner_id = isset($_POST['owner_id']) && filter_var($_POST['owner_id'], FILTER_VALIDATE_INT) ? (int)$_POST['owner_id'] : null;
    $property_type_id = isset($_POST['property_type_id']) && $_POST['property_type_id'] !== '' ? filter_var($_POST['property_type_id'], FILTER_VALIDATE_INT) : null;
    $property_address = isset($_POST['property_address']) ? sanitize_input(trim($_POST['property_address'])) : null;
    $property_city = isset($_POST['property_city']) ? sanitize_input(trim($_POST['property_city'])) : null;
    $number_of_units = isset($_POST['number_of_units']) && filter_var($_POST['number_of_units'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]]) ? (int)$_POST['number_of_units'] : 0;
    
    $construction_year_input = isset($_POST['construction_year']) ? trim($_POST['construction_year']) : null;
    $construction_year = (!empty($construction_year_input) && filter_var($construction_year_input, FILTER_VALIDATE_INT, ['options' => ['min_range' => 1800, 'max_range' => (int)date('Y') + 10]])) ? (int)$construction_year_input : null;
    
    $land_area_sqm_input = isset($_POST['land_area_sqm']) ? trim($_POST['land_area_sqm']) : null;
    $land_area_sqm = ($land_area_sqm_input !== '' && filter_var($land_area_sqm_input, FILTER_VALIDATE_FLOAT, ['flags' => FILTER_FLAG_ALLOW_FRACTION]) !== false && (float)$land_area_sqm_input >= 0) ? (float)$land_area_sqm_input : null;

    $latitude_input = isset($_POST['latitude']) ? trim($_POST['latitude']) : null;
    $latitude = ($latitude_input !== '' && filter_var($latitude_input, FILTER_VALIDATE_FLOAT, ['flags' => FILTER_FLAG_ALLOW_FRACTION]) !== false) ? (float)$latitude_input : null;
    
    $longitude_input = isset($_POST['longitude']) ? trim($_POST['longitude']) : null;
    $longitude = ($longitude_input !== '' && filter_var($longitude_input, FILTER_VALIDATE_FLOAT, ['flags' => FILTER_FLAG_ALLOW_FRACTION]) !== false) ? (float)$longitude_input : null;

    $property_notes = isset($_POST['property_notes']) ? sanitize_input(trim($_POST['property_notes'])) : null;

    if (empty($property_code) || empty($property_name) || $owner_id === null || empty($property_address)) {
        $response = ['success' => false, 'message' => 'الحقول المطلوبة (كود العقار، اسم العقار، المالك، العنوان) يجب ملؤها.'];
        echo json_encode($response); exit;
    }
    // ... (بقية التحققات)

    $mysqli->begin_transaction();
    try {
        if ($action === 'add_property') {
            $stmt_check_code = $mysqli->prepare("SELECT id FROM properties WHERE property_code = ?");
            if (!$stmt_check_code) throw new Exception('خطأ في تجهيز استعلام التحقق: ' . $mysqli->error);
            
            $stmt_check_code->bind_param("s", $property_code);
            $stmt_check_code->execute();
            $stmt_check_code->store_result();
            if ($stmt_check_code->num_rows > 0) {
                throw new Exception('كود العقار "' . esc_html($property_code) . '" مستخدم بالفعل.');
            }
            $stmt_check_code->close();

            $sql = "INSERT INTO properties (property_code, name, owner_id, property_type_id, address, city, number_of_units, construction_year, land_area_sqm, latitude, longitude, notes, created_by_id) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception('خطأ في تجهيز استعلام الإضافة: ' . $mysqli->error);
            
            $stmt->bind_param("ssiissiidddsi", 
                $property_code, $property_name, $owner_id, $property_type_id, $property_address, $property_city, 
                $number_of_units, $construction_year, $land_area_sqm, $latitude, $longitude,
                $property_notes, $current_user_id
            );
            if (!$stmt->execute()) throw new Exception('خطأ في إضافة العقار: ' . $stmt->error);
            
            $new_property_id = $stmt->insert_id;
            $stmt->close();
            log_audit_action($mysqli, AUDIT_CREATE_PROPERTY, $new_property_id, 'properties', ['code' => $property_code, 'name' => $property_name]);
            $response = ['success' => true, 'message' => 'تمت إضافة العقار بنجاح!'];

        } elseif ($action === 'edit_property' && $property_id) {
            $stmt_old_prop = $mysqli->prepare("SELECT * FROM properties WHERE id = ?");
            $old_prop_data = null;
            if($stmt_old_prop){
                $stmt_old_prop->bind_param("i", $property_id);
                $stmt_old_prop->execute();
                $res_old_prop = $stmt_old_prop->get_result();
                if($res_old_prop->num_rows > 0) $old_prop_data = $res_old_prop->fetch_assoc();
                $stmt_old_prop->close();
            }
            if(!$old_prop_data) throw new Exception("العقار المطلوب تعديله غير موجود.");

            $stmt_check_code_edit = $mysqli->prepare("SELECT id FROM properties WHERE property_code = ? AND id != ?");
            if (!$stmt_check_code_edit) throw new Exception('خطأ في تجهيز استعلام التحقق (تعديل): ' . $mysqli->error);
            
            $stmt_check_code_edit->bind_param("si", $property_code, $property_id);
            $stmt_check_code_edit->execute();
            $stmt_check_code_edit->store_result();
            if ($stmt_check_code_edit->num_rows > 0) {
                throw new Exception('كود العقار "' . esc_html($property_code) . '" مستخدم بالفعل لعقار آخر.');
            }
            $stmt_check_code_edit->close();

            $sql = "UPDATE properties SET 
                        property_code = ?, name = ?, owner_id = ?, property_type_id = ?, address = ?, city = ?, 
                        number_of_units = ?, construction_year = ?, land_area_sqm = ?, latitude = ?, longitude = ?, notes = ? 
                    WHERE id = ?";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception('خطأ في تجهيز استعلام التعديل: ' . $mysqli->error);
            
            $stmt->bind_param("ssiissiidddsi", 
                $property_code, $property_name, $owner_id, $property_type_id, $property_address, $property_city, 
                $number_of_units, $construction_year, $land_area_sqm, $latitude, $longitude,
                $property_notes, $property_id
            );
            if (!$stmt->execute()) throw new Exception('خطأ في تحديث بيانات العقار: ' . $stmt->error);
            $stmt->close();

            $new_prop_data = compact('property_code', 'property_name', 'owner_id', 'property_type_id', 'property_address', 'property_city', 'number_of_units', 'construction_year', 'land_area_sqm', 'latitude', 'longitude', 'property_notes');
            log_audit_action($mysqli, AUDIT_EDIT_PROPERTY, $property_id, 'properties', ['old_data' => $old_prop_data, 'new_data' => $new_prop_data]);
            $response = ['success' => true, 'message' => 'تم تحديث بيانات العقار بنجاح!'];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف العقار مفقود.");
        }
        $mysqli->commit();

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("Property Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_property') {
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('properties/index.php'));
    }
    $property_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($property_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_old_prop_del = $mysqli->prepare("SELECT property_code, name FROM properties WHERE id = ?");
            $prop_details_for_log = null;
            if($stmt_old_prop_del){
                $stmt_old_prop_del->bind_param("i", $property_id_to_delete);
                $stmt_old_prop_del->execute();
                $res_old_prop_del = $stmt_old_prop_del->get_result();
                if($res_old_prop_del->num_rows > 0) $prop_details_for_log = $res_old_prop_del->fetch_assoc();
                $stmt_old_prop_del->close();
            }
             if(!$prop_details_for_log) throw new Exception("العقار المطلوب حذفه غير موجود.");

            $stmt_check_leases_get = $mysqli->prepare("SELECT COUNT(l.id) as lease_count FROM leases l JOIN units u ON l.unit_id = u.id WHERE u.property_id = ?");
            if (!$stmt_check_leases_get) throw new Exception('خطأ في تجهيز فحص عقود الإيجار (GET): ' . $mysqli->error);
            
            $stmt_check_leases_get->bind_param("i", $property_id_to_delete);
            $stmt_check_leases_get->execute();
            $lease_count_res_get = $stmt_check_leases_get->get_result()->fetch_assoc();
            $stmt_check_leases_get->close();
            $leases_count_get = $lease_count_res_get ? $lease_count_res_get['lease_count'] : 0;

            if ($leases_count_get > 0) {
                throw new Exception('لا يمكن حذف هذا العقار لوجود (' . $leases_count_get . ') عقد/عقود إيجار مرتبطة بوحداته.');
            }
            
            $stmt_delete_get = $mysqli->prepare("DELETE FROM properties WHERE id = ?"); // ON DELETE CASCADE in DB should handle units
            if (!$stmt_delete_get) throw new Exception('فشل في تحضير استعلام الحذف (GET): ' . $mysqli->error);
            
            $stmt_delete_get->bind_param("i", $property_id_to_delete);
            if (!$stmt_delete_get->execute()) throw new Exception('فشل في حذف العقار (GET): ' . $stmt_delete_get->error);
            $stmt_delete_get->close();
            
            log_audit_action($mysqli, AUDIT_DELETE_PROPERTY, $property_id_to_delete, 'properties', $prop_details_for_log);
            $mysqli->commit();
            set_message('تم حذف العقار وجميع وحداته المرتبطة بنجاح!', "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Property Delete Action Error: " . $e->getMessage());
        }
    } else {
        set_message("معرف العقار غير صحيح للحذف.", "danger");
    }
    redirect(base_url('properties/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_property')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
===== ./properties/index.php =====
<?php
$page_title = "إدارة العقارات";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10;
$offset = ($current_page - 1) * $items_per_page;

// وظيفة البحث والفلترة
$search_term = isset($_GET['search']) ? sanitize_input($_GET['search']) : '';
$filter_owner_id = isset($_GET['owner_id']) && filter_var($_GET['owner_id'], FILTER_VALIDATE_INT) ? (int)$_GET['owner_id'] : '';
$filter_property_type_id = isset($_GET['property_type_id']) && filter_var($_GET['property_type_id'], FILTER_VALIDATE_INT) ? (int)$_GET['property_type_id'] : '';


$where_clauses = [];
$params_for_count = [];
$params_for_data = [];
$types_for_count = "";
$types_for_data = "";

if (!empty($search_term)) {
    $where_clauses[] = "(p.name LIKE ? OR p.property_code LIKE ? OR p.address LIKE ? OR p.city LIKE ?)";
    $search_like = "%" . $search_term . "%";
    for ($i = 0; $i < 4; $i++) {
        $params_for_count[] = $search_like;
        $params_for_data[] = $search_like;
        $types_for_count .= "s";
        $types_for_data .= "s";
    }
}

if (!empty($filter_owner_id)) {
    $where_clauses[] = "p.owner_id = ?";
    $params_for_count[] = $filter_owner_id;
    $params_for_data[] = $filter_owner_id;
    $types_for_count .= "i";
    $types_for_data .= "i";
}

if (!empty($filter_property_type_id)) {
    $where_clauses[] = "p.property_type_id = ?";
    $params_for_count[] = $filter_property_type_id;
    $params_for_data[] = $filter_property_type_id;
    $types_for_count .= "i";
    $types_for_data .= "i";
}


$where_sql = "";
if (!empty($where_clauses)) {
    $where_sql = " WHERE " . implode(" AND ", $where_clauses);
}

// الحصول على العدد الإجمالي للعقارات
$total_sql = "SELECT COUNT(p.id) as total 
              FROM properties p 
              LEFT JOIN owners o ON p.owner_id = o.id
              LEFT JOIN property_types pt ON p.property_type_id = pt.id" . $where_sql;
$stmt_total = $mysqli->prepare($total_sql);
if($stmt_total){
    if (!empty($params_for_count)) {
        $stmt_total->bind_param($types_for_count, ...$params_for_count);
    }
    $stmt_total->execute();
    $total_result = $stmt_total->get_result();
    $total_properties = ($total_result && $total_result->num_rows > 0) ? $total_result->fetch_assoc()['total'] : 0;
    $stmt_total->close();
} else {
    $total_properties = 0;
    error_log("SQL Prepare Error for counting properties: " . $mysqli->error);
}
$total_pages = ceil($total_properties / $items_per_page);

// جلب العقارات للصفحة الحالية
// تم تحديث الاستعلام ليشمل property_type_id, latitude, longitude, notes, property_type_name
$sql = "SELECT p.id, p.property_code, p.name, p.owner_id, p.address, p.city, p.number_of_units, 
               p.construction_year, p.land_area_sqm, p.latitude, p.longitude, p.notes, p.created_by_id,
               p.property_type_id, pt.display_name_ar as property_type_name, 
               o.name as owner_name 
        FROM properties p 
        LEFT JOIN owners o ON p.owner_id = o.id
        LEFT JOIN property_types pt ON p.property_type_id = pt.id"
       . $where_sql . " ORDER BY p.name ASC LIMIT ? OFFSET ?";

$current_data_params = $params_for_data;
$current_data_params[] = $items_per_page;
$current_data_params[] = $offset;
$current_data_types = $types_for_data . 'ii';

$properties = [];
$stmt = $mysqli->prepare($sql);
if ($stmt) {
    if (!empty($current_data_params)) {
        $stmt->bind_param($current_data_types, ...$current_data_params);
    }
    $stmt->execute();
    $result = $stmt->get_result();
    $properties = ($result && $result->num_rows > 0) ? $result->fetch_all(MYSQLI_ASSOC) : [];
    $stmt->close();
} else {
    error_log("SQL Prepare Error for fetching properties: " . $mysqli->error);
}


// جلب قائمة الملاك للفلتر
$owners_filter_list = [];
$owners_query_filter_page = "SELECT id, name FROM owners ORDER BY name ASC";
$owners_result_filter_page = $mysqli->query($owners_query_filter_page);
if ($owners_result_filter_page) {
    while ($owner_row_filter_page = $owners_result_filter_page->fetch_assoc()) {
        $owners_filter_list[] = $owner_row_filter_page;
    }
    $owners_result_filter_page->free();
}

// جلب قائمة أنواع العقارات للفلتر
$property_types_filter_list = [];
$ptypes_query_filter_page = "SELECT id, display_name_ar FROM property_types ORDER BY display_name_ar ASC";
$ptypes_result_filter_page = $mysqli->query($ptypes_query_filter_page);
if ($ptypes_result_filter_page) {
    while ($ptype_row_filter_page = $ptypes_result_filter_page->fetch_assoc()) {
        $property_types_filter_list[] = $ptype_row_filter_page;
    }
    $ptypes_result_filter_page->free();
}

$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-building"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة العقارات (<?php echo $total_properties; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#propertyModal" onclick="preparePropertyModal('add_property')">
                    <i class="bi bi-plus-circle"></i> إضافة عقار جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('properties/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-4 col-lg-3">
                    <label for="search_properties_page" class="form-label form-label-sm visually-hidden">بحث</label>
                    <input type="text" id="search_properties_page" name="search" class="form-control form-control-sm" placeholder="ابحث بالكود، الاسم، العنوان، المدينة..." value="<?php echo esc_attr($search_term); ?>">
                </div>
                <div class="col-md-3 col-lg-3">
                     <label for="filter_owner_id_page" class="form-label form-label-sm visually-hidden">المالك</label>
                    <select id="filter_owner_id_page" name="owner_id" class="form-select form-select-sm">
                        <option value="">-- فلترة حسب المالك --</option>
                        <?php foreach ($owners_filter_list as $owner_item_filter_p): ?>
                            <option value="<?php echo $owner_item_filter_p['id']; ?>" <?php echo ($filter_owner_id == $owner_item_filter_p['id']) ? 'selected' : ''; ?>>
                                <?php echo esc_html($owner_item_filter_p['name']); ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-3 col-lg-2">
                    <label for="filter_property_type_id_page" class="form-label form-label-sm visually-hidden">نوع العقار</label>
                    <select id="filter_property_type_id_page" name="property_type_id" class="form-select form-select-sm">
                        <option value="">-- فلترة حسب النوع --</option>
                        <?php foreach ($property_types_filter_list as $ptype_item_filter_p): ?>
                            <option value="<?php echo $ptype_item_filter_p['id']; ?>" <?php echo ($filter_property_type_id == $ptype_item_filter_p['id']) ? 'selected' : ''; ?>>
                                <?php echo esc_html($ptype_item_filter_p['display_name_ar']); ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-1 col-lg-2">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i> فلترة</button>
                </div>
                <div class="col-md-1 col-lg-2">
                     <a href="<?php echo base_url('properties/index.php'); ?>" class="btn btn-outline-secondary btn-sm w-100"><i class="bi bi-eraser-fill"></i> مسح</a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($properties) && (!empty($search_term) || !empty($filter_owner_id) || !empty($filter_property_type_id))): ?>
                <div class="alert alert-warning text-center">لا توجد نتائج تطابق معايير البحث أو الفلترة.</div>
            <?php elseif (empty($properties)): ?>
                <div class="alert alert-info text-center">لا توجد عقارات مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#propertyModal" onclick="preparePropertyModal('add_property')">إضافة عقار جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>كود العقار</th>
                            <th>اسم العقار</th>
                            <th>المالك</th>
                            <th>النوع</th>
                            <th>العنوان</th>
                            <th>المدينة</th>
                            <th class="text-center">الوحدات</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num = ($current_page - 1) * $items_per_page + 1; ?>
                        <?php foreach ($properties as $property): ?>
                        <tr>
                            <td><?php echo $row_num++; ?></td>
                            <td><?php echo esc_html($property['property_code']); ?></td>
                            <td><?php echo esc_html($property['name']); ?></td>
                            <td><?php echo esc_html($property['owner_name'] ?: '-'); ?></td>
                            <td><?php echo esc_html($property['property_type_name'] ?: '-'); // عرض اسم نوع العقار ?></td>
                            <td style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="<?php echo esc_attr($property['address']); ?>">
                                <?php echo esc_html($property['address']); ?>
                            </td>
                            <td><?php echo esc_html($property['city'] ?: '-'); ?></td>
                            <td class="text-center"><?php echo esc_html($property['number_of_units']); ?></td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="preparePropertyModal('edit_property', <?php echo htmlspecialchars(json_encode($property), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#propertyModal"
                                        title="تعديل بيانات العقار">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-property-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $property['id']; ?>"
                                        data-name="<?php echo esc_attr($property['name'] . ' (الكود: ' . $property['property_code'] . ')'); ?>"
                                        data-delete-url="<?php echo base_url('properties/property_actions.php?action=delete_property&id=' . $property['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف العقار">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <a href="<?php echo base_url('units/index.php?property_id=' . $property['id']); ?>" class="btn btn-sm btn-outline-info" title="إدارة وحدات هذا العقار">
                                    <i class="bi bi-grid-3x3-gap-fill"></i> <span class="d-none d-md-inline">الوحدات</span>
                                </a>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params = [];
            if (!empty($search_term)) $pagination_params['search'] = $search_term;
            if (!empty($filter_owner_id)) $pagination_params['owner_id'] = $filter_owner_id;
            if (!empty($filter_property_type_id)) $pagination_params['property_type_id'] = $filter_property_type_id;
            echo generate_pagination_links($current_page, $total_pages, 'properties/index.php', $pagination_params);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/property_modal.php';
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function preparePropertyModal(action, propertyData = null) {
    const propertyModal = document.getElementById('propertyModal'); // معرف النافذة المنبثقة
    const modalTitle = propertyModal.querySelector('.modal-title');
    const propertyForm = propertyModal.querySelector('#propertyFormModal'); // معرف النموذج
    const propertyIdInput = propertyModal.querySelector('#property_id_modal_properties');
    const actionInput = propertyModal.querySelector('#property_form_action_modal');
    const submitButton = propertyModal.querySelector('#propertySubmitButtonTextModal'); // معرف زر الإرسال

    propertyForm.reset();
    propertyIdInput.value = '';
    actionInput.value = action;

    const formUrl = '<?php echo base_url('properties/property_actions.php'); ?>';
    propertyForm.action = formUrl; // ما زال جيداً للاحتفاظ به كمرجع

    if (action === 'add_property') {
        modalTitle.textContent = 'إضافة عقار جديد';
        submitButton.textContent = 'إضافة العقار';
    } else if (action === 'edit_property' && propertyData) {
        modalTitle.textContent = 'تعديل بيانات العقار: ' + propertyData.name;
        submitButton.textContent = 'حفظ التعديلات';
        propertyIdInput.value = propertyData.id;
        
        // ملء حقول النموذج ببيانات العقار للتعديل
        // استخدم المعرفات الفريدة لحقول النافذة المنبثقة
        propertyModal.querySelector('#property_code_modal_prop').value = propertyData.property_code || '';
        propertyModal.querySelector('#property_name_modal_prop').value = propertyData.name || '';
        propertyModal.querySelector('#owner_id_modal_prop').value = propertyData.owner_id || '';
        propertyModal.querySelector('#property_type_id_modal_prop').value = propertyData.property_type_id || ''; // الحقل الجديد
        propertyModal.querySelector('#property_address_modal_prop').value = propertyData.address || '';
        propertyModal.querySelector('#property_city_modal_prop').value = propertyData.city || '';
        propertyModal.querySelector('#number_of_units_modal_prop').value = propertyData.number_of_units || '0';
        propertyModal.querySelector('#construction_year_modal_prop').value = propertyData.construction_year || '';
        propertyModal.querySelector('#land_area_sqm_modal_prop').value = propertyData.land_area_sqm || '';
        propertyModal.querySelector('#latitude_modal_prop').value = propertyData.latitude || ''; // الحقل الجديد
        propertyModal.querySelector('#longitude_modal_prop').value = propertyData.longitude || ''; // الحقل الجديد
        propertyModal.querySelector('#property_notes_modal_prop').value = propertyData.notes || '';
    }
}

document.addEventListener('DOMContentLoaded', function () {
    // التعامل مع نافذة تأكيد الحذف (عامة)
    var confirmDeleteModalProp = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalProp) {
        confirmDeleteModalProp.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-property-btn')) { // تحقق إذا كان زر حذف عقار
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');

                var modalBodyText = confirmDeleteModalProp.querySelector('.modal-body-text');
                if (modalBodyText) {
                     modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف العقار "' + itemName + '"؟';
                }
                var additionalInfo = confirmDeleteModalProp.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: سيتم أيضًا حذف جميع الوحدات المرتبطة به (إذا لم تكن مرتبطة بعقود إيجار نشطة). قد تحتاج أيضًا إلى التحقق من العقود المرتبطة بوحدات هذا العقار.';

                var confirmDeleteButton = confirmDeleteModalProp.querySelector('#confirmDeleteButton');
                if (confirmDeleteButton) {
                    var newConfirmDeleteButton = confirmDeleteButton.cloneNode(true);
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButton, confirmDeleteButton);
                    
                    newConfirmDeleteButton.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButton.removeAttribute('href');
                    
                    newConfirmDeleteButton.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }
    
    // Handle AJAX form submission for propertyFormModal
    const propertyFormElement = document.getElementById('propertyFormModal');
    if(propertyFormElement) {
        propertyFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(propertyFormElement);
            const actionUrl = propertyFormElement.getAttribute('action');

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var propertyModalInstance = bootstrap.Modal.getInstance(document.getElementById('propertyModal'));
                    if(propertyModalInstance) propertyModalInstance.hide();
                    window.location.reload(); // Or update table dynamically
                } else {
                    alert('خطأ: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./sql_dump/property_management.sql =====

===== ./settings.php =====
<?php
$page_title = "إعدادات التطبيق";
require_once __DIR__ . '/db_connect.php'; // For $mysqli and APP_NAME
require_once __DIR__ . '/includes/session_manager.php';
require_login();
require_role('admin'); // Only admins can access settings
require_once __DIR__ . '/includes/functions.php';
require_once __DIR__ . '/includes/audit_log_functions.php'; // تضمين ملف سجل التدقيق


$current_settings = [];
$settings_keys = [
    'APP_NAME', 'ITEMS_PER_PAGE', 'VAT_PERCENTAGE',
    'ZATCA_API_URL_PRODUCTION_CLEARANCE', 'ZATCA_API_URL_PRODUCTION_REPORTING', 'ZATCA_API_URL_PRODUCTION_COMPLIANCE_INVOICE',
    'ZATCA_API_URL_SIMULATION_CLEARANCE', 'ZATCA_API_URL_SIMULATION_REPORTING', 'ZATCA_API_URL_SIMULATION_COMPLIANCE_INVOICE',
    'ZATCA_API_URL_SANDBOX_PORTAL',
    'ZATCA_CERTIFICATE_PATH', 'ZATCA_PRIVATE_KEY_PATH', 'ZATCA_PRIVATE_KEY_PASSWORD',
    'ZATCA_CLIENT_ID', 'ZATCA_CLIENT_SECRET', 'ZATCA_COMPLIANCE_OTP',
    'ZATCA_SELLER_NAME', 'ZATCA_SELLER_VAT_NUMBER', 'ZATCA_SELLER_STREET_NAME', 'ZATCA_SELLER_BUILDING_NO',
    'ZATCA_SELLER_ADDITIONAL_NO', 'ZATCA_SELLER_DISTRICT_NAME', 'ZATCA_SELLER_CITY_NAME',
    'ZATCA_SELLER_POSTAL_CODE', 'ZATCA_SELLER_COUNTRY_CODE',
    'ZATCA_SOLUTION_NAME',
    'ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED', 'ZATCA_INVOICE_TYPE_CODE_STANDARD',
    'ZATCA_PAYMENT_MEANS_CODE_CASH', 'ZATCA_PAYMENT_MEANS_CODE_CARD', 'ZATCA_PAYMENT_MEANS_CODE_BANK'
];

// Fetch current settings
$sql_fetch_settings = "SELECT setting_key, setting_value, description FROM app_settings WHERE setting_key IN ('" . implode("','", $settings_keys) . "')";
$result_settings = $mysqli->query($sql_fetch_settings);
if ($result_settings) {
    while ($row = $result_settings->fetch_assoc()) {
        $current_settings[$row['setting_key']] = [
            'value' => $row['setting_value'],
            'description' => $row['description']
        ];
    }
} else {
    error_log("Failed to fetch app settings: " . $mysqli->error);
    set_message("حدث خطأ أثناء جلب الإعدادات الحالية.", "danger");
}


if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        set_message('خطأ في التحقق (CSRF). يرجى المحاولة مرة أخرى.', 'danger');
    } else {
        $mysqli->begin_transaction();
        $all_updates_successful = true;
        $updated_settings_log = []; // لتسجيل ما تم تغييره

        foreach ($settings_keys as $key) {
            if (isset($_POST[$key])) {
                $new_value = sanitize_input(trim($_POST[$key]));
                
                // Validation for specific fields
                if ($key === 'ITEMS_PER_PAGE' && (!filter_var($new_value, FILTER_VALIDATE_INT) || (int)$new_value <= 0)) {
                    set_message("قيمة 'عدد العناصر بالصفحة' يجب أن تكون رقمًا صحيحًا أكبر من صفر.", "warning");
                    $all_updates_successful = false; // Mark as not fully successful to prevent success message if other fields are fine
                    continue; // Skip this update
                }
                if ($key === 'VAT_PERCENTAGE' && (!filter_var($new_value, FILTER_VALIDATE_FLOAT) || (float)$new_value < 0 || (float)$new_value > 100)) {
                    set_message("قيمة 'نسبة الضريبة' يجب أن تكون رقمًا بين 0 و 100.", "warning");
                    $all_updates_successful = false;
                    continue;
                }
                 // Ensure ZATCA codes are numeric if not empty
                $zatca_code_keys = [
                    'ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED', 'ZATCA_INVOICE_TYPE_CODE_STANDARD',
                    'ZATCA_PAYMENT_MEANS_CODE_CASH', 'ZATCA_PAYMENT_MEANS_CODE_CARD', 'ZATCA_PAYMENT_MEANS_CODE_BANK'
                ];
                if (in_array($key, $zatca_code_keys) && !empty($new_value) && !ctype_digit($new_value)) {
                    set_message("قيمة '" . ($current_settings[$key]['description'] ?? $key) . "' يجب أن تكون رقمية.", "warning");
                    $all_updates_successful = false;
                    continue;
                }


                // Check if the value actually changed
                $old_value = $current_settings[$key]['value'] ?? null;
                if ($new_value !== $old_value) {
                    $updated_settings_log[$key] = ['old' => $old_value, 'new' => $new_value];
                }

                $stmt = $mysqli->prepare("UPDATE app_settings SET setting_value = ? WHERE setting_key = ?");
                if ($stmt) {
                    $stmt->bind_param("ss", $new_value, $key);
                    if (!$stmt->execute()) {
                        $all_updates_successful = false;
                        set_message("حدث خطأ أثناء تحديث الإعداد: " . esc_html($key) . " - " . $stmt->error, "danger");
                        error_log("Failed to update setting " . $key . ": " . $stmt->error);
                    }
                    $stmt->close();
                } else {
                    $all_updates_successful = false;
                    set_message("خطأ في تجهيز الاستعلام للإعداد: " . esc_html($key) . " - " . $mysqli->error, "danger");
                    error_log("Failed to prepare statement for setting " . $key . ": " . $mysqli->error);
                }
            }
        }

        if ($all_updates_successful) {
            if (!empty($updated_settings_log)) {
                log_audit_action($mysqli, AUDIT_UPDATE_APP_SETTINGS, null, 'app_settings', $updated_settings_log);
                set_message('تم تحديث الإعدادات بنجاح!', 'success');
            } else {
                set_message('لم يتم إجراء أي تغييرات على الإعدادات.', 'info');
            }
            $mysqli->commit();
        } else {
            $mysqli->rollback();
            // Messages should have been set for specific errors or a general one if needed.
            if (empty($_SESSION['flash_message'])) { // if no specific error was set during loop
                set_message('فشل تحديث بعض الإعدادات. يرجى مراجعة المدخلات.', 'danger');
            }
        }
        // Re-fetch settings to display updated values
        $current_settings = []; // Clear old values
        $result_settings = $mysqli->query($sql_fetch_settings); // Re-run the query
        if ($result_settings) {
            while ($row = $result_settings->fetch_assoc()) {
                $current_settings[$row['setting_key']] = [
                    'value' => $row['setting_value'],
                    'description' => $row['description']
                ];
            }
        }
        redirect(base_url('settings.php')); // Redirect to refresh and clear POST
    }
}

require_once __DIR__ . '/includes/header_resources.php';
require_once __DIR__ . '/includes/navigation.php';

$csrf_token = generate_csrf_token(); // Generate new token for the form

// Function to safely get setting value
function get_setting_value($settings_array, $key, $default = '') {
    return isset($settings_array[$key]['value']) ? esc_attr($settings_array[$key]['value']) : $default;
}
function get_setting_description($settings_array, $key, $default_key_name = '') {
    return isset($settings_array[$key]['description']) ? esc_html($settings_array[$key]['description']) : esc_html($default_key_name);
}

?>
<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-gear-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="card-title mb-0">تعديل إعدادات النظام</h5>
        </div>
        <div class="card-body">
            <form method="POST" action="<?php echo base_url('settings.php'); ?>" id="settingsForm">
                <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">

                <nav>
                    <div class="nav nav-tabs" id="nav-tab-settings" role="tablist">
                        <button class="nav-link active" id="nav-general-tab" data-bs-toggle="tab" data-bs-target="#nav-general" type="button" role="tab" aria-controls="nav-general" aria-selected="true">إعدادات عامة</button>
                        <button class="nav-link" id="nav-zatca-seller-tab" data-bs-toggle="tab" data-bs-target="#nav-zatca-seller" type="button" role="tab" aria-controls="nav-zatca-seller" aria-selected="false">بيانات البائع (ZATCA)</button>
                        <button class="nav-link" id="nav-zatca-api-tab" data-bs-toggle="tab" data-bs-target="#nav-zatca-api" type="button" role="tab" aria-controls="nav-zatca-api" aria-selected="false">روابط ZATCA API</button>
                        <button class="nav-link" id="nav-zatca-integration-tab" data-bs-toggle="tab" data-bs-target="#nav-zatca-integration" type="button" role="tab" aria-controls="nav-zatca-integration" aria-selected="false">تكامل ZATCA</button>
                        <button class="nav-link" id="nav-zatca-codes-tab" data-bs-toggle="tab" data-bs-target="#nav-zatca-codes" type="button" role="tab" aria-controls="nav-zatca-codes" aria-selected="false">أكواد ZATCA</button>
                    </div>
                </nav>

                <div class="tab-content pt-3" id="nav-tabContentSettings">
                    <div class="tab-pane fade show active" id="nav-general" role="tabpanel" aria-labelledby="nav-general-tab">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="APP_NAME" class="form-label"><?php echo get_setting_description($current_settings, 'APP_NAME', 'APP_NAME'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="APP_NAME" name="APP_NAME" value="<?php echo get_setting_value($current_settings, 'APP_NAME'); ?>">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="ITEMS_PER_PAGE" class="form-label"><?php echo get_setting_description($current_settings, 'ITEMS_PER_PAGE', 'ITEMS_PER_PAGE'); ?></label>
                                <input type="number" class="form-control form-control-sm" id="ITEMS_PER_PAGE" name="ITEMS_PER_PAGE" value="<?php echo get_setting_value($current_settings, 'ITEMS_PER_PAGE', '10'); ?>" min="1">
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="VAT_PERCENTAGE" class="form-label"><?php echo get_setting_description($current_settings, 'VAT_PERCENTAGE', 'VAT_PERCENTAGE'); ?></label>
                                <input type="number" step="0.01" class="form-control form-control-sm" id="VAT_PERCENTAGE" name="VAT_PERCENTAGE" value="<?php echo get_setting_value($current_settings, 'VAT_PERCENTAGE', '15.00'); ?>" min="0" max="100">
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="nav-zatca-seller" role="tabpanel" aria-labelledby="nav-zatca-seller-tab">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_SELLER_NAME" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_NAME', 'ZATCA_SELLER_NAME'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_NAME" name="ZATCA_SELLER_NAME" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_NAME'); ?>">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_SELLER_VAT_NUMBER" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_VAT_NUMBER', 'ZATCA_SELLER_VAT_NUMBER'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_VAT_NUMBER" name="ZATCA_SELLER_VAT_NUMBER" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_VAT_NUMBER'); ?>">
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_SELLER_STREET_NAME" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_STREET_NAME', 'ZATCA_SELLER_STREET_NAME'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_STREET_NAME" name="ZATCA_SELLER_STREET_NAME" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_STREET_NAME'); ?>">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_SELLER_BUILDING_NO" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_BUILDING_NO', 'ZATCA_SELLER_BUILDING_NO'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_BUILDING_NO" name="ZATCA_SELLER_BUILDING_NO" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_BUILDING_NO'); ?>">
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_SELLER_ADDITIONAL_NO" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_ADDITIONAL_NO', 'ZATCA_SELLER_ADDITIONAL_NO'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_ADDITIONAL_NO" name="ZATCA_SELLER_ADDITIONAL_NO" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_ADDITIONAL_NO'); ?>">
                            </div>
                             <div class="col-md-6 mb-3">
                                <label for="ZATCA_SELLER_DISTRICT_NAME" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_DISTRICT_NAME', 'ZATCA_SELLER_DISTRICT_NAME'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_DISTRICT_NAME" name="ZATCA_SELLER_DISTRICT_NAME" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_DISTRICT_NAME'); ?>">
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="ZATCA_SELLER_CITY_NAME" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_CITY_NAME', 'ZATCA_SELLER_CITY_NAME'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_CITY_NAME" name="ZATCA_SELLER_CITY_NAME" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_CITY_NAME'); ?>">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="ZATCA_SELLER_POSTAL_CODE" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_POSTAL_CODE', 'ZATCA_SELLER_POSTAL_CODE'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_POSTAL_CODE" name="ZATCA_SELLER_POSTAL_CODE" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_POSTAL_CODE'); ?>">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="ZATCA_SELLER_COUNTRY_CODE" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SELLER_COUNTRY_CODE', 'ZATCA_SELLER_COUNTRY_CODE'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SELLER_COUNTRY_CODE" name="ZATCA_SELLER_COUNTRY_CODE" value="<?php echo get_setting_value($current_settings, 'ZATCA_SELLER_COUNTRY_CODE', 'SA'); ?>" maxlength="2">
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="nav-zatca-api" role="tabpanel" aria-labelledby="nav-zatca-api-tab">
                        <h6 class="text-muted">روابط بيئة الإنتاج</h6>
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="ZATCA_API_URL_PRODUCTION_CLEARANCE" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_API_URL_PRODUCTION_CLEARANCE'); ?></label>
                                <input type="url" class="form-control form-control-sm" id="ZATCA_API_URL_PRODUCTION_CLEARANCE" name="ZATCA_API_URL_PRODUCTION_CLEARANCE" value="<?php echo get_setting_value($current_settings, 'ZATCA_API_URL_PRODUCTION_CLEARANCE'); ?>">
                            </div>
                             <div class="col-md-12 mb-3">
                                <label for="ZATCA_API_URL_PRODUCTION_REPORTING" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_API_URL_PRODUCTION_REPORTING'); ?></label>
                                <input type="url" class="form-control form-control-sm" id="ZATCA_API_URL_PRODUCTION_REPORTING" name="ZATCA_API_URL_PRODUCTION_REPORTING" value="<?php echo get_setting_value($current_settings, 'ZATCA_API_URL_PRODUCTION_REPORTING'); ?>">
                            </div>
                            <div class="col-md-12 mb-3">
                                <label for="ZATCA_API_URL_PRODUCTION_COMPLIANCE_INVOICE" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_API_URL_PRODUCTION_COMPLIANCE_INVOICE'); ?></label>
                                <input type="url" class="form-control form-control-sm" id="ZATCA_API_URL_PRODUCTION_COMPLIANCE_INVOICE" name="ZATCA_API_URL_PRODUCTION_COMPLIANCE_INVOICE" value="<?php echo get_setting_value($current_settings, 'ZATCA_API_URL_PRODUCTION_COMPLIANCE_INVOICE'); ?>">
                            </div>
                        </div>
                        <hr>
                        <h6 class="text-muted">روابط بيئة المحاكاة/التجربة</h6>
                         <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="ZATCA_API_URL_SIMULATION_CLEARANCE" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_API_URL_SIMULATION_CLEARANCE'); ?></label>
                                <input type="url" class="form-control form-control-sm" id="ZATCA_API_URL_SIMULATION_CLEARANCE" name="ZATCA_API_URL_SIMULATION_CLEARANCE" value="<?php echo get_setting_value($current_settings, 'ZATCA_API_URL_SIMULATION_CLEARANCE'); ?>">
                            </div>
                             <div class="col-md-12 mb-3">
                                <label for="ZATCA_API_URL_SIMULATION_REPORTING" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_API_URL_SIMULATION_REPORTING'); ?></label>
                                <input type="url" class="form-control form-control-sm" id="ZATCA_API_URL_SIMULATION_REPORTING" name="ZATCA_API_URL_SIMULATION_REPORTING" value="<?php echo get_setting_value($current_settings, 'ZATCA_API_URL_SIMULATION_REPORTING'); ?>">
                            </div>
                             <div class="col-md-12 mb-3">
                                <label for="ZATCA_API_URL_SIMULATION_COMPLIANCE_INVOICE" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_API_URL_SIMULATION_COMPLIANCE_INVOICE'); ?></label>
                                <input type="url" class="form-control form-control-sm" id="ZATCA_API_URL_SIMULATION_COMPLIANCE_INVOICE" name="ZATCA_API_URL_SIMULATION_COMPLIANCE_INVOICE" value="<?php echo get_setting_value($current_settings, 'ZATCA_API_URL_SIMULATION_COMPLIANCE_INVOICE'); ?>">
                            </div>
                        </div>
                        <hr>
                        <h6 class="text-muted">رابط بوابة المطورين</h6>
                        <div class="row">
                             <div class="col-md-12 mb-3">
                                <label for="ZATCA_API_URL_SANDBOX_PORTAL" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_API_URL_SANDBOX_PORTAL'); ?></label>
                                <input type="url" class="form-control form-control-sm" id="ZATCA_API_URL_SANDBOX_PORTAL" name="ZATCA_API_URL_SANDBOX_PORTAL" value="<?php echo get_setting_value($current_settings, 'ZATCA_API_URL_SANDBOX_PORTAL'); ?>">
                            </div>
                        </div>
                    </div>

                     <div class="tab-pane fade" id="nav-zatca-integration" role="tabpanel" aria-labelledby="nav-zatca-integration-tab">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_CERTIFICATE_PATH" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_CERTIFICATE_PATH'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_CERTIFICATE_PATH" name="ZATCA_CERTIFICATE_PATH" value="<?php echo get_setting_value($current_settings, 'ZATCA_CERTIFICATE_PATH'); ?>">
                                <small class="form-text text-muted">المسار الكامل على الخادم لملف الشهادة.</small>
                            </div>
                             <div class="col-md-6 mb-3">
                                <label for="ZATCA_PRIVATE_KEY_PATH" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_PRIVATE_KEY_PATH'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_PRIVATE_KEY_PATH" name="ZATCA_PRIVATE_KEY_PATH" value="<?php echo get_setting_value($current_settings, 'ZATCA_PRIVATE_KEY_PATH'); ?>">
                                 <small class="form-text text-muted">المسار الكامل على الخادم لملف المفتاح الخاص.</small>
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_PRIVATE_KEY_PASSWORD" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_PRIVATE_KEY_PASSWORD'); ?></label>
                                <input type="password" class="form-control form-control-sm" id="ZATCA_PRIVATE_KEY_PASSWORD" name="ZATCA_PRIVATE_KEY_PASSWORD" value="<?php echo get_setting_value($current_settings, 'ZATCA_PRIVATE_KEY_PASSWORD'); ?>">
                                <small class="form-text text-muted">اتركه فارغًا إذا لم يكن المفتاح الخاص محميًا بكلمة مرور.</small>
                            </div>
                             <div class="col-md-6 mb-3">
                                <label for="ZATCA_CLIENT_ID" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_CLIENT_ID'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_CLIENT_ID" name="ZATCA_CLIENT_ID" value="<?php echo get_setting_value($current_settings, 'ZATCA_CLIENT_ID'); ?>">
                            </div>
                        </div>
                        <div class="row">
                             <div class="col-md-6 mb-3">
                                <label for="ZATCA_CLIENT_SECRET" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_CLIENT_SECRET'); ?></label>
                                <input type="password" class="form-control form-control-sm" id="ZATCA_CLIENT_SECRET" name="ZATCA_CLIENT_SECRET" value="<?php echo get_setting_value($current_settings, 'ZATCA_CLIENT_SECRET'); ?>">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_COMPLIANCE_OTP" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_COMPLIANCE_OTP'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_COMPLIANCE_OTP" name="ZATCA_COMPLIANCE_OTP" value="<?php echo get_setting_value($current_settings, 'ZATCA_COMPLIANCE_OTP'); ?>">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="ZATCA_SOLUTION_NAME" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_SOLUTION_NAME'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_SOLUTION_NAME" name="ZATCA_SOLUTION_NAME" value="<?php echo get_setting_value($current_settings, 'ZATCA_SOLUTION_NAME'); ?>">
                            </div>
                        </div>
                    </div>
                    
                    <div class="tab-pane fade" id="nav-zatca-codes" role="tabpanel" aria-labelledby="nav-zatca-codes-tab">
                        <h6 class="text-muted">أكواد أنواع الفواتير</h6>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED" name="ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED" value="<?php echo get_setting_value($current_settings, 'ZATCA_INVOICE_TYPE_CODE_SIMPLIFIED', '388'); ?>">
                            </div>
                             <div class="col-md-6 mb-3">
                                <label for="ZATCA_INVOICE_TYPE_CODE_STANDARD" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_INVOICE_TYPE_CODE_STANDARD'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_INVOICE_TYPE_CODE_STANDARD" name="ZATCA_INVOICE_TYPE_CODE_STANDARD" value="<?php echo get_setting_value($current_settings, 'ZATCA_INVOICE_TYPE_CODE_STANDARD', '388'); ?>">
                            </div>
                        </div>
                        <hr>
                        <h6 class="text-muted">أكواد وسائل الدفع</h6>
                         <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="ZATCA_PAYMENT_MEANS_CODE_CASH" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_PAYMENT_MEANS_CODE_CASH'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_PAYMENT_MEANS_CODE_CASH" name="ZATCA_PAYMENT_MEANS_CODE_CASH" value="<?php echo get_setting_value($current_settings, 'ZATCA_PAYMENT_MEANS_CODE_CASH', '10'); ?>">
                            </div>
                             <div class="col-md-4 mb-3">
                                <label for="ZATCA_PAYMENT_MEANS_CODE_CARD" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_PAYMENT_MEANS_CODE_CARD'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_PAYMENT_MEANS_CODE_CARD" name="ZATCA_PAYMENT_MEANS_CODE_CARD" value="<?php echo get_setting_value($current_settings, 'ZATCA_PAYMENT_MEANS_CODE_CARD', '48'); ?>">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="ZATCA_PAYMENT_MEANS_CODE_BANK" class="form-label"><?php echo get_setting_description($current_settings, 'ZATCA_PAYMENT_MEANS_CODE_BANK'); ?></label>
                                <input type="text" class="form-control form-control-sm" id="ZATCA_PAYMENT_MEANS_CODE_BANK" name="ZATCA_PAYMENT_MEANS_CODE_BANK" value="<?php echo get_setting_value($current_settings, 'ZATCA_PAYMENT_MEANS_CODE_BANK', '42'); ?>">
                            </div>
                        </div>
                    </div>

                </div> <div class="mt-4">
                    <button type="submit" class="btn btn-primary"><i class="bi bi-save"></i> حفظ الإعدادات</button>
                </div>
            </form>
        </div>
    </div>
</div>

</div> <?php require_once __DIR__ . '/includes/footer_resources.php'; ?>
===== ./invoices/zatca_integration/UblXmlGenerator.php =====

===== ./invoices/zatca_integration/ZatcaApi.php =====

===== ./invoices/zatca_integration/generate_qr.php =====

===== ./invoices/zatca_integration/sign_xml.php =====

===== ./invoices/create_invoice.php =====
<?php
$page_title = "إنشاء فاتورة جديدة";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// لا يوجد منطق خاص هنا سوى عرض المعلومات والتوجيه
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-receipt-cutoff"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <h5 class="card-title">بدء عملية إنشاء فاتورة</h5>
            <p class="card-text">
                لإنشاء فاتورة جديدة، يرجى الانتقال إلى صفحة <a href="<?php echo base_url('invoices/index.php'); ?>">قائمة الفواتير</a> والضغط على زر "إنشاء فاتورة جديدة".
            </p>
            <p class="card-text">
                سيتم فتح نافذة منبثقة تتيح لك إدخال جميع تفاصيل الفاتورة المطلوبة، بما في ذلك:
            </p>
            <ul>
                <li>المعلومات الأساسية للفاتورة (الرقم، التاريخ، العميل، إلخ).</li>
                <li>بنود الفاتورة التفصيلية (الكميات، الأسعار، الضرائب).</li>
                <li>أي خصومات أو مبالغ إضافية.</li>
            </ul>

            <div class="mt-4">
                <a href="<?php echo base_url('invoices/index.php?action=open_add_modal'); ?>" class="btn btn-primary btn-lg">
                    <i class="bi bi-card-list"></i> الانتقال إلى قائمة الفواتير وبدء فاتورة جديدة
                </a>
            </div>
        </div>
    </div>
</div>

</div> <?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./invoices/invoice_actions.php =====
<?php
// invoices/invoice_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';

$redirect_url = base_url('invoices/index.php');

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF). يرجى المحاولة مرة أخرى.", "danger");
        redirect($redirect_url);
    }

    $action = isset($_POST['action']) ? sanitize_input($_POST['action']) : '';
    $current_user_id = get_current_user_id();

    // --- Invoice Header Fields ---
    $invoice_id = isset($_POST['invoice_id']) && !empty($_POST['invoice_id']) ? (int)$_POST['invoice_id'] : null;
    $invoice_number = isset($_POST['invoice_number']) ? sanitize_input($_POST['invoice_number']) : null;
    $invoice_sequence_number = isset($_POST['invoice_sequence_number']) && filter_var($_POST['invoice_sequence_number'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_POST['invoice_sequence_number'] : null;
    $invoice_date = isset($_POST['invoice_date']) ? sanitize_input($_POST['invoice_date']) : null;
    $invoice_time = isset($_POST['invoice_time']) ? sanitize_input($_POST['invoice_time']) : date('H:i:s');
    $due_date = isset($_POST['due_date']) ? sanitize_input($_POST['due_date']) : null;
    $invoice_type_zatca = isset($_POST['invoice_type_zatca']) ? sanitize_input($_POST['invoice_type_zatca']) : 'SimplifiedInvoice';
    $transaction_type_code = isset($_POST['transaction_type_code']) ? sanitize_input($_POST['transaction_type_code']) : '388';
    $invoice_status = isset($_POST['invoice_status']) ? sanitize_input($_POST['invoice_status']) : 'Unpaid';
    
    $lease_id_post = isset($_POST['lease_id']) && !empty($_POST['lease_id']) ? (int)$_POST['lease_id'] : null;
    $tenant_id_post = isset($_POST['tenant_id_invoice_direct']) && !empty($_POST['tenant_id_invoice_direct']) ? (int)$_POST['tenant_id_invoice_direct'] : null;

    // Determine tenant_id for the invoice
    // If lease_id is provided, fetch tenant_id from that lease
    $final_tenant_id = null;
    if ($lease_id_post) {
        $stmt_lease_tenant = $mysqli->prepare("SELECT tenant_id FROM leases WHERE id = ?");
        if ($stmt_lease_tenant) {
            $stmt_lease_tenant->bind_param("i", $lease_id_post);
            $stmt_lease_tenant->execute();
            $res_lease_tenant = $stmt_lease_tenant->get_result();
            if ($res_lease_tenant->num_rows > 0) {
                $final_tenant_id = $res_lease_tenant->fetch_assoc()['tenant_id'];
            }
            $stmt_lease_tenant->close();
        }
    }
    // If no tenant_id from lease, or no lease_id, use the directly selected tenant_id
    if (!$final_tenant_id && $tenant_id_post) {
        $final_tenant_id = $tenant_id_post;
    }


    $purchase_order_id = isset($_POST['purchase_order_id']) ? sanitize_input($_POST['purchase_order_id']) : null;
    $contract_id_invoice = isset($_POST['contract_id_invoice']) ? sanitize_input($_POST['contract_id_invoice']) : null; // Name from modal
    $invoice_description = isset($_POST['invoice_description']) ? sanitize_input($_POST['invoice_description']) : null;
    $zatca_notes = isset($_POST['zatca_notes']) ? sanitize_input($_POST['zatca_notes']) : null;

    $invoice_sub_total_amount_header = isset($_POST['invoice_sub_total_amount']) && filter_var($_POST['invoice_sub_total_amount'], FILTER_VALIDATE_FLOAT) ? (float)$_POST['invoice_sub_total_amount'] : 0.00; //This is calculated sum of items taxable amount
    $invoice_total_discount_header = isset($_POST['invoice_total_discount']) && filter_var($_POST['invoice_total_discount'], FILTER_VALIDATE_FLOAT) ? (float)$_POST['invoice_total_discount'] : 0.00;
    $invoice_vat_percentage_header = isset($_POST['invoice_vat_percentage_header']) && filter_var($_POST['invoice_vat_percentage_header'], FILTER_VALIDATE_FLOAT, ['options' => ['min_range' => 0, 'max_range' => 100]]) ? (float)$_POST['invoice_vat_percentage_header'] : (defined('VAT_PERCENTAGE') ? VAT_PERCENTAGE : 15.00);
    // invoice_total_vat_amount and invoice_total_amount are read-only in form, calculated by JS, but we will recalculate server-side from items
    $invoice_paid_amount_header = isset($_POST['invoice_paid_amount']) && filter_var($_POST['invoice_paid_amount'], FILTER_VALIDATE_FLOAT) ? (float)$_POST['invoice_paid_amount'] : 0.00;


    // --- Invoice Item Fields (Arrays) ---
    $item_names = isset($_POST['item_name']) ? $_POST['item_name'] : [];
    $item_quantities = isset($_POST['item_quantity']) ? $_POST['item_quantity'] : [];
    $item_unit_prices = isset($_POST['item_unit_price']) ? $_POST['item_unit_price'] : [];
    $item_vat_category_codes = isset($_POST['item_vat_category_code']) ? $_POST['item_vat_category_code'] : [];
    $item_vat_percentages = isset($_POST['item_vat_percentage']) ? $_POST['item_vat_percentage'] : [];
    $item_discounts = isset($_POST['item_discount_amount']) ? $_POST['item_discount_amount'] : [];


    // --- Basic Validations ---
    if (empty($invoice_number) || $invoice_sequence_number === null || empty($invoice_date) || empty($invoice_time) || empty($due_date) || $final_tenant_id === null) {
        set_message("الحقول الأساسية للفاتورة (رقم الفاتورة، رقم التسلسل، التاريخ، الوقت، تاريخ الاستحقاق، العميل) مطلوبة.", "danger");
        redirect($redirect_url . ($invoice_id ? '?edit=' . $invoice_id : ''));
    }
    if (count($item_names) === 0 || empty(array_filter($item_names))) { // Check if at least one item name is provided
        set_message("يجب إضافة بند واحد على الأقل للفاتورة.", "danger");
        redirect($redirect_url . ($invoice_id ? '?edit=' . $invoice_id : ''));
    }
     // Validate that all item arrays have the same count and basic item data is present
    $item_count = count($item_names);
    if ($item_count !== count($item_quantities) || $item_count !== count($item_unit_prices) || $item_count !== count($item_vat_category_codes) || $item_count !== count($item_vat_percentages) || $item_count !== count($item_discounts) ) {
        set_message("بيانات بنود الفاتورة غير متناسقة أو مفقودة.", "danger");
        redirect($redirect_url . ($invoice_id ? '?edit=' . $invoice_id : ''));
    }
    for($i=0; $i < $item_count; $i++){
        if(empty(trim($item_names[$i])) || !is_numeric($item_quantities[$i]) || !is_numeric($item_unit_prices[$i]) || !is_numeric($item_vat_percentages[$i]) || !is_numeric($item_discounts[$i])){
            set_message("أحد بنود الفاتورة يحتوي على بيانات غير صالحة أو مفقودة (الوصف، الكمية، السعر، نسبة الضريبة، الخصم).", "danger");
            redirect($redirect_url . ($invoice_id ? '?edit=' . $invoice_id : ''));
        }
    }


    // --- Server-side Calculation of Totals (to ensure integrity) ---
    $calculated_sub_total = 0; // Sum of (item_taxable_amount)
    $calculated_total_vat_on_items = 0; // Sum of (item_vat_amount)

    for ($i = 0; $i < $item_count; $i++) {
        $qty = (float)$item_quantities[$i];
        $price = (float)$item_unit_prices[$i];
        $item_disc = (float)$item_discounts[$i];
        $item_vat_rate = (float)$item_vat_percentages[$i];

        $item_line_subtotal_before_discount = $qty * $price;
        $item_taxable_for_item = $item_line_subtotal_before_discount - $item_disc;
        if ($item_taxable_for_item < 0) $item_taxable_for_item = 0;

        $item_vat_for_item = round(($item_taxable_for_item * $item_vat_rate) / 100, 2);
        
        $calculated_sub_total += $item_taxable_for_item; // This is sum of items' taxable amounts
        $calculated_total_vat_on_items += $item_vat_for_item;
    }

    // Apply invoice-level discount to the sum of item taxable amounts
    $invoice_net_amount_before_vat = $calculated_sub_total - $invoice_total_discount_header;
    if ($invoice_net_amount_before_vat < 0) $invoice_net_amount_before_vat = 0;

    // Vat for the invoice header (can be sum of item vats or calculated on net amount)
    // For ZATCA, sum of item VATs is more accurate if items have different rates.
    // If all items AND header have same VAT rate, $invoice_vat_percentage_header can be used on $invoice_net_amount_before_vat
    $final_invoice_vat = $calculated_total_vat_on_items;
    // If there was an invoice level discount, and we are to apply header VAT % on the discounted subtotal of items
    // (This logic depends on how the business wants to apply VAT on discounts)
    // For now, we use the sum of item VATs as calculated above ($calculated_total_vat_on_items)
    // $final_invoice_vat = round(($invoice_net_amount_before_vat * $invoice_vat_percentage_header) / 100, 2);
    
    $final_invoice_total = $invoice_net_amount_before_vat + $final_invoice_vat;


    // --- Begin Transaction ---
    $mysqli->begin_transaction();

    try {
        // --- Add Invoice Action ---
        if ($action === 'add_invoice') {
            // Check for duplicate invoice_number (internal) and invoice_sequence_number (ICV for ZATCA)
            $stmt_check_inv = $mysqli->prepare("SELECT id FROM invoices WHERE invoice_number = ? OR invoice_sequence_number = ?");
            $stmt_check_inv->bind_param("si", $invoice_number, $invoice_sequence_number);
            $stmt_check_inv->execute();
            $stmt_check_inv->store_result();
            if ($stmt_check_inv->num_rows > 0) {
                throw new Exception("رقم الفاتورة الداخلي أو رقم تسلسل الفاتورة (ICV) مستخدم بالفعل.");
            }
            $stmt_check_inv->close();

            $sql_invoice = "INSERT INTO invoices (lease_id, tenant_id, invoice_number, invoice_sequence_number, invoice_date, invoice_time, due_date, 
                                                invoice_type_zatca, transaction_type_code, notes_zatca, purchase_order_id, contract_id,
                                                sub_total_amount, discount_amount, vat_percentage, -- total_amount and vat_amount are generated
                                                paid_amount, status, created_by_id, zatca_status, previous_invoice_hash) 
                            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'Not Sent', NULL)"; // PIH is NULL for now
            $stmt_invoice = $mysqli->prepare($sql_invoice);
            if (!$stmt_invoice) throw new Exception("خطأ في تجهيز استعلام إضافة الفاتورة: " . $mysqli->error);
            
            // Note: sub_total_amount in DB schema is sum of item_taxable_amounts.
            // discount_amount is invoice level discount.
            // vat_percentage is header level (used by generated column for total_amount if items don't have varied rates).
            $stmt_invoice->bind_param("iissssssssssdddsdi", 
                $lease_id_post, $final_tenant_id, $invoice_number, $invoice_sequence_number, $invoice_date, $invoice_time, $due_date,
                $invoice_type_zatca, $transaction_type_code, $zatca_notes, $purchase_order_id, $contract_id_invoice,
                $calculated_sub_total, $invoice_total_discount_header, $invoice_vat_percentage_header, // vat_percentage on invoice header
                $invoice_paid_amount_header, $invoice_status, $current_user_id
            );

            if (!$stmt_invoice->execute()) throw new Exception("خطأ في إضافة الفاتورة: " . $stmt_invoice->error);
            $invoice_id = $stmt_invoice->insert_id; // Get newly inserted invoice ID
            $stmt_invoice->close();

        // --- Edit Invoice Action ---
        } elseif ($action === 'edit_invoice') {
            if ($invoice_id === null) throw new Exception("معرف الفاتورة مفقود للتعديل.");

            // Check for duplicate invoice_number (internal) and invoice_sequence_number (ICV for ZATCA), excluding current invoice
            $stmt_check_inv_edit = $mysqli->prepare("SELECT id FROM invoices WHERE (invoice_number = ? OR invoice_sequence_number = ?) AND id != ?");
            $stmt_check_inv_edit->bind_param("sii", $invoice_number, $invoice_sequence_number, $invoice_id);
            $stmt_check_inv_edit->execute();
            $stmt_check_inv_edit->store_result();
            if ($stmt_check_inv_edit->num_rows > 0) {
                throw new Exception("رقم الفاتورة الداخلي أو رقم تسلسل الفاتورة (ICV) مستخدم بالفعل لفاتورة أخرى.");
            }
            $stmt_check_inv_edit->close();

            $sql_invoice = "UPDATE invoices SET 
                                lease_id = ?, tenant_id = ?, invoice_number = ?, invoice_sequence_number = ?, invoice_date = ?, invoice_time = ?, due_date = ?,
                                invoice_type_zatca = ?, transaction_type_code = ?, notes_zatca = ?, purchase_order_id = ?, contract_id = ?,
                                sub_total_amount = ?, discount_amount = ?, vat_percentage = ?,
                                paid_amount = ?, status = ? 
                            WHERE id = ?";
            $stmt_invoice = $mysqli->prepare($sql_invoice);
            if (!$stmt_invoice) throw new Exception("خطأ في تجهيز استعلام تعديل الفاتورة: " . $mysqli->error);

            $stmt_invoice->bind_param("iissssssssssdddsdi", 
                $lease_id_post, $final_tenant_id, $invoice_number, $invoice_sequence_number, $invoice_date, $invoice_time, $due_date,
                $invoice_type_zatca, $transaction_type_code, $zatca_notes, $purchase_order_id, $contract_id_invoice,
                $calculated_sub_total, $invoice_total_discount_header, $invoice_vat_percentage_header,
                $invoice_paid_amount_header, $invoice_status, $invoice_id
            );
            if (!$stmt_invoice->execute()) throw new Exception("خطأ في تعديل الفاتورة: " . $stmt_invoice->error);
            $stmt_invoice->close();

            // For edit, delete existing items first, then re-insert
            $stmt_delete_items = $mysqli->prepare("DELETE FROM invoice_items WHERE invoice_id = ?");
            if (!$stmt_delete_items) throw new Exception("خطأ في تجهيز حذف البنود القديمة: " . $mysqli->error);
            $stmt_delete_items->bind_param("i", $invoice_id);
            if (!$stmt_delete_items->execute()) throw new Exception("خطأ في حذف البنود القديمة: " . $stmt_delete_items->error);
            $stmt_delete_items->close();
        } else {
            throw new Exception("الإجراء المطلوب غير معروف.");
        }

        // --- Insert Invoice Items ---
        $sql_item = "INSERT INTO invoice_items (invoice_id, item_name, quantity, unit_price_before_vat, item_discount_amount, item_vat_category_code, item_vat_percentage) 
                     VALUES (?, ?, ?, ?, ?, ?, ?)";
        $stmt_item = $mysqli->prepare($sql_item);
        if (!$stmt_item) throw new Exception("خطأ في تجهيز استعلام إضافة بنود الفاتورة: " . $mysqli->error);

        for ($i = 0; $i < count($item_names); $i++) {
            $i_name = sanitize_input($item_names[$i]);
            $i_qty = (float)$item_quantities[$i];
            $i_price = (float)$item_unit_prices[$i];
            $i_vat_cat = sanitize_input($item_vat_category_codes[$i]);
            $i_vat_perc = (float)$item_vat_percentages[$i];
            $i_discount = (float)$item_discounts[$i];

            if (empty($i_name)) continue; // Skip empty item names

            $stmt_item->bind_param("isdddsd", $invoice_id, $i_name, $i_qty, $i_price, $i_discount, $i_vat_cat, $i_vat_perc);
            if (!$stmt_item->execute()) throw new Exception("خطأ في إضافة بند الفاتورة ('{$i_name}'): " . $stmt_item->error);
        }
        $stmt_item->close();

        $mysqli->commit(); // Commit transaction
        set_message("تمت معالجة الفاتورة بنجاح!", "success");

    } catch (Exception $e) {
        $mysqli->rollback(); // Rollback transaction on error
        set_message("خطأ: " . $e->getMessage(), "danger");
        error_log("Invoice Action Error: " . $e->getMessage() . " - POST Data: " . http_build_query($_POST));
    }

// --- Delete Invoice Action (GET request) ---
} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_invoice') {
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect($redirect_url);
    }

    $invoice_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($invoice_id_to_delete > 0) {
        // Check if invoice has related payments before allowing deletion, or handle payments (e.g. unlink)
        $stmt_check_payments = $mysqli->prepare("SELECT COUNT(*) as count FROM payments WHERE invoice_id = ?");
        $stmt_check_payments->bind_param("i", $invoice_id_to_delete);
        $stmt_check_payments->execute();
        $payments_count = $stmt_check_payments->get_result()->fetch_assoc()['count'];
        $stmt_check_payments->close();

        if ($payments_count > 0) {
            set_message("لا يمكن حذف هذه الفاتورة لوجود (" . $payments_count . ") دفعة/دفعات مرتبطة بها. يرجى حذف الدفعات أولاً أو إلغاء ربطها.", "warning");
        } else {
            // Deleting invoice will also delete its items due to ON DELETE CASCADE in DB schema
            $sql_delete = "DELETE FROM invoices WHERE id = ?";
            $stmt_delete = $mysqli->prepare($sql_delete);
            if ($stmt_delete) {
                $stmt_delete->bind_param("i", $invoice_id_to_delete);
                if ($stmt_delete->execute()) {
                    set_message("تم حذف الفاتورة وبنودها بنجاح!", "success");
                } else {
                    set_message("خطأ في حذف الفاتورة: " . $stmt_delete->error, "danger");
                    error_log("SQL Error Delete Invoice: " . $stmt_delete->error);
                }
                $stmt_delete->close();
            } else {
                set_message("خطأ في تجهيز استعلام حذف الفاتورة: " . $mysqli->error, "danger");
                error_log("SQL Prepare Error Delete Invoice: " . $mysqli->error);
            }
        }
    } else {
        set_message("معرف الفاتورة غير صحيح للحذف.", "danger");
    }
} else {
    set_message("طلب غير صالح أو طريقة وصول غير مدعومة.", "danger");
}

redirect($redirect_url);
?>
===== ./invoices/index.php =====
<?php
$page_title = "إدارة الفواتير";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1;
$items_per_page = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : (defined('ITEMS_PER_PAGE') && filter_var(ITEMS_PER_PAGE, FILTER_VALIDATE_INT) ? (int)ITEMS_PER_PAGE : 10);
$offset = ($current_page - 1) * $items_per_page;

// وظيفة البحث والفلترة
$search_term = isset($_GET['search']) ? sanitize_input($_GET['search']) : ''; // رقم الفاتورة، اسم المستأجر، رقم العقد
$filter_status = isset($_GET['status']) ? sanitize_input($_GET['status']) : ''; // حالة الفاتورة الداخلية
$filter_zatca_status = isset($_GET['zatca_status']) ? sanitize_input($_GET['zatca_status']) : '';
$filter_lease_id = isset($_GET['lease_id']) && filter_var($_GET['lease_id'], FILTER_VALIDATE_INT) ? (int)$_GET['lease_id'] : '';
$filter_date_from = isset($_GET['date_from']) ? sanitize_input($_GET['date_from']) : '';
$filter_date_to = isset($_GET['date_to']) ? sanitize_input($_GET['date_to']) : '';


$where_clauses = [];
$params_for_count = []; $types_for_count = "";
$params_for_data = [];  $types_for_data = "";

if (!empty($search_term)) {
    $where_clauses[] = "(i.invoice_number LIKE ? OR t.full_name LIKE ? OR l.lease_contract_number LIKE ?)";
    $search_like = "%" . $search_term . "%";
    for ($k=0; $k<3; $k++) { // 3 placeholders
        $params_for_count[] = $search_like; $types_for_count .= "s";
        $params_for_data[] = $search_like;  $types_for_data .= "s";
    }
}
if (!empty($filter_status)) {
    $where_clauses[] = "i.status = ?";
    $params_for_count[] = $filter_status; $types_for_count .= "s";
    $params_for_data[] = $filter_status;  $types_for_data .= "s";
}
if (!empty($filter_zatca_status)) {
    $where_clauses[] = "i.zatca_status = ?";
    $params_for_count[] = $filter_zatca_status; $types_for_count .= "s";
    $params_for_data[] = $filter_zatca_status;  $types_for_data .= "s";
}
if (!empty($filter_lease_id)) {
    $where_clauses[] = "i.lease_id = ?";
    $params_for_count[] = $filter_lease_id; $types_for_count .= "i";
    $params_for_data[] = $filter_lease_id;  $types_for_data .= "i";
}
if (!empty($filter_date_from)) {
    $where_clauses[] = "i.invoice_date >= ?";
    $params_for_count[] = $filter_date_from; $types_for_count .= "s";
    $params_for_data[] = $filter_date_from;  $types_for_data .= "s";
}
if (!empty($filter_date_to)) {
    $where_clauses[] = "i.invoice_date <= ?";
    $params_for_count[] = $filter_date_to; $types_for_count .= "s";
    $params_for_data[] = $filter_date_to;  $types_for_data .= "s";
}


$where_sql = "";
if (!empty($where_clauses)) {
    $where_sql = " WHERE " . implode(" AND ", $where_clauses);
}

// الحصول على العدد الإجمالي للفواتير
$total_sql = "SELECT COUNT(i.id) as total 
              FROM invoices i
              LEFT JOIN leases l ON i.lease_id = l.id
              LEFT JOIN tenants t ON i.tenant_id = t.id" . $where_sql;
$stmt_total = $mysqli->prepare($total_sql);
if ($stmt_total && !empty($params_for_count)) {
    $stmt_total->bind_param($types_for_count, ...$params_for_count);
}
if ($stmt_total) {
    $stmt_total->execute();
    $total_result = $stmt_total->get_result();
    $total_invoices = ($total_result) ? $total_result->fetch_assoc()['total'] : 0;
    $stmt_total->close();
} else {
    $total_invoices = 0;
    error_log("SQL Prepare Error for counting invoices: " . $mysqli->error);
}
$total_pages = ceil($total_invoices / $items_per_page);


// جلب الفواتير للصفحة الحالية
$sql = "SELECT i.*, l.lease_contract_number, t.full_name as tenant_name
        FROM invoices i
        LEFT JOIN leases l ON i.lease_id = l.id
        LEFT JOIN tenants t ON i.tenant_id = t.id"
       . $where_sql . " ORDER BY i.invoice_date DESC, i.id DESC LIMIT ? OFFSET ?";

$current_data_params = $params_for_data;
$current_data_params[] = $items_per_page;
$current_data_params[] = $offset;
$current_data_types = $types_for_data . 'ii';

$stmt = $mysqli->prepare($sql);
if ($stmt) {
    if (!empty($current_data_params)) {
        $stmt->bind_param($current_data_types, ...$current_data_params);
    } else {
         $stmt->bind_param('ii', $items_per_page, $offset);
    }
    $stmt->execute();
    $result = $stmt->get_result();
    $invoices = ($result) ? $result->fetch_all(MYSQLI_ASSOC) : [];
    if ($stmt) $stmt->close();
} else {
    error_log("SQL Prepare Error for fetching invoices: " . $mysqli->error);
    $invoices = [];
}

// لعرض أسماء الحالات والفلاتر بالعربية
// $invoice_statuses_display is defined in includes/modals/invoice_modal.php
// $zatca_statuses_display is defined in includes/modals/invoice_modal.php (or should be if used there)
// For filters, we add an "All" option
$invoice_statuses_display_filter = ['' => '-- الكل --'] + (isset($invoice_statuses_display) ? $invoice_statuses_display : ['Draft' => 'مسودة', 'Unpaid' => 'غير مدفوعة', 'Partially Paid' => 'مدفوعة جزئياً', 'Paid' => 'مدفوعة', 'Overdue' => 'متأخرة', 'Cancelled' => 'ملغاة', 'Void' => 'لاغية']);
$zatca_statuses_display_filter = [
    '' => '-- الكل --', 'Not Sent' => 'لم ترسل', 'Sent' => 'مرسلة', 'Generating' => 'قيد الإنشاء',
    'Compliance Check Pending' => 'فحص الامتثال معلق', 'Compliance Check Failed' => 'فشل فحص الامتثال',
    'Compliance Check Passed' => 'نجح فحص الامتثال', 'Clearance Pending' => 'التصريح معلق',
    'Cleared' => 'تم التصريح', 'Reporting Pending' => 'الإبلاغ معلق', 'Reported' => 'تم الإبلاغ',
    'Rejected' => 'مرفوضة', 'Error' => 'خطأ'
];
// $active_leases_filter is defined in includes/modals/invoice_modal.php
// We need to ensure it's available or re-fetch if necessary for filter dropdowns.
if (!isset($active_leases_list_for_modal)) { // In case modal wasn't included or variable scope
    $active_leases_list_for_modal = [];
    $leases_q_filter = "SELECT l.id as lease_id, l.lease_contract_number, t.full_name as tenant_name
                       FROM leases l
                       JOIN tenants t ON l.tenant_id = t.id
                       WHERE l.status = 'Active' OR l.status = 'Pending'
                       ORDER BY t.full_name ASC, l.lease_start_date DESC";
    if($leases_r_filter = $mysqli->query($leases_q_filter)){
        while($lease_r_filter = $leases_r_filter->fetch_assoc()){ $active_leases_list_for_modal[] = $lease_r_filter; }
        $leases_r_filter->free();
    }
}
$active_leases_filter_options = ['' => '-- الكل --'];
foreach($active_leases_list_for_modal as $l_f){
    $active_leases_filter_options[$l_f['lease_id']] = $l_f['lease_contract_number'] . ' (' . $l_f['tenant_name'] . ')';
}


$csrf_token = generate_csrf_token();
$default_vat_percentage_js = defined('VAT_PERCENTAGE') ? VAT_PERCENTAGE : 15.00; // For JS in modal
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-receipt-cutoff"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة الفواتير (<?php echo $total_invoices; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#invoiceModal" data-action="add_invoice">
                    <i class="bi bi-plus-circle"></i> إنشاء فاتورة جديدة
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('invoices/index.php'); ?>" class="row gx-2 gy-2 align-items-end">
                <div class="col-md-3 col-lg-2">
                    <label for="search_invoices" class="form-label form-label-sm">بحث عام</label>
                    <input type="text" id="search_invoices" name="search" class="form-control form-control-sm" placeholder="رقم الفاتورة، المستأجر، عقد..." value="<?php echo esc_attr($search_term); ?>">
                </div>
                <div class="col-md-2 col-lg-2">
                    <label for="filter_status_inv" class="form-label form-label-sm">حالة الفاتورة</label>
                    <select id="filter_status_inv" name="status" class="form-select form-select-sm">
                        <?php foreach ($invoice_statuses_display_filter as $key => $value): ?>
                            <option value="<?php echo $key; ?>" <?php echo ($filter_status == $key) ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                 <div class="col-md-2 col-lg-2">
                    <label for="filter_zatca_status_inv" class="form-label form-label-sm">حالة ZATCA</label>
                    <select id="filter_zatca_status_inv" name="zatca_status" class="form-select form-select-sm">
                        <?php foreach ($zatca_statuses_display_filter as $key => $value): ?>
                            <option value="<?php echo $key; ?>" <?php echo ($filter_zatca_status == $key) ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-2 col-lg-2">
                    <label for="filter_date_from" class="form-label form-label-sm">من تاريخ فاتورة</label>
                    <input type="date" id="filter_date_from" name="date_from" class="form-control form-control-sm" value="<?php echo esc_attr($filter_date_from); ?>">
                </div>
                <div class="col-md-2 col-lg-2">
                    <label for="filter_date_to" class="form-label form-label-sm">إلى تاريخ فاتورة</label>
                    <input type="date" id="filter_date_to" name="date_to" class="form-control form-control-sm" value="<?php echo esc_attr($filter_date_to); ?>">
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i></button>
                </div>
                 <div class="col-md-1">
                     <a href="<?php echo base_url('invoices/index.php'); ?>" class="btn btn-outline-secondary btn-sm w-100" title="مسح الفلاتر"><i class="bi bi-eraser-fill"></i></a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($invoices) && (!empty($search_term) || !empty($filter_status) || !empty($filter_zatca_status) || !empty($filter_lease_id) || !empty($filter_date_from) || !empty($filter_date_to))): ?>
                <div class="alert alert-warning text-center">لا توجد فواتير تطابق معايير البحث أو الفلترة.</div>
            <?php elseif (empty($invoices)): ?>
                <div class="alert alert-info text-center">لا توجد فواتير مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#invoiceModal" data-action="add_invoice">إنشاء فاتورة جديدة</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>رقم الفاتورة (ICV)</th>
                            <th>المستأجر/العميل</th>
                            <th>العقد</th>
                            <th>تاريخ الفاتورة</th>
                            <th>تاريخ الاستحقاق</th>
                            <th>الإجمالي</th>
                            <th>المدفوع</th>
                            <th>المتبقي</th>
                            <th>الحالة</th>
                            <th>حالة ZATCA</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num = ($current_page - 1) * $items_per_page + 1; ?>
                        <?php foreach ($invoices as $invoice):
                            $balance = $invoice['total_amount'] - $invoice['paid_amount'];
                            $status_class = 'secondary';
                            if ($invoice['status'] === 'Paid') $status_class = 'success';
                            elseif (in_array($invoice['status'], ['Unpaid', 'Partially Paid'])) $status_class = 'warning';
                            elseif ($invoice['status'] === 'Overdue') $status_class = 'danger';
                            elseif (in_array($invoice['status'], ['Cancelled', 'Void'])) $status_class = 'dark';

                            $zatca_status_class = 'secondary';
                            if (in_array($invoice['zatca_status'], ['Cleared', 'Reported', 'Compliance Check Passed'])) $zatca_status_class = 'success';
                            elseif (in_array($invoice['zatca_status'], ['Rejected', 'Error', 'Compliance Check Failed'])) $zatca_status_class = 'danger';
                            elseif (in_array($invoice['zatca_status'], ['Sent', 'Compliance Check Pending', 'Clearance Pending', 'Reporting Pending'])) $zatca_status_class = 'info';
                             elseif ($invoice['zatca_status'] === 'Generating') $zatca_status_class = 'warning';
                        ?>
                        <tr>
                            <td><?php echo $row_num++; ?></td>
                            <td>
                                <a href="<?php echo base_url('invoices/view_invoice.php?id=' . $invoice['id']); ?>"><?php echo esc_html($invoice['invoice_number']); ?></a>
                                <br><small class="text-muted">ICV: <?php echo esc_html($invoice['invoice_sequence_number']);?></small>
                            </td>
                            <td><?php echo esc_html($invoice['tenant_name'] ?: 'N/A'); ?></td>
                            <td><?php echo esc_html($invoice['lease_contract_number'] ?: '-'); ?></td>
                            <td><?php echo format_date_custom($invoice['invoice_date'], 'd-m-Y'); ?></td>
                            <td><?php echo format_date_custom($invoice['due_date'], 'd-m-Y'); ?></td>
                            <td><?php echo number_format($invoice['total_amount'], 2); ?></td>
                            <td><?php echo number_format($invoice['paid_amount'], 2); ?></td>
                            <td class="<?php echo ($balance > 0 && $invoice['status'] !== 'Paid') ? 'text-danger fw-bold' : ''; ?>"><?php echo number_format($balance, 2); ?></td>
                            <td><span class="badge bg-<?php echo $status_class; ?>"><?php echo esc_html($invoice_statuses_display_filter[$invoice['status']] ?? $invoice['status']); ?></span></td>
                            <td><span class="badge bg-<?php echo $zatca_status_class; ?>"><?php echo esc_html($zatca_statuses_display_filter[$invoice['zatca_status']] ?? $invoice['zatca_status']); ?></span></td>
                            <td class="text-center">
                                <div class="btn-group btn-group-sm" role="group">
                                    <button type="button" class="btn btn-outline-warning edit-invoice-btn"
                                            data-bs-toggle="modal" data-bs-target="#invoiceModal"
                                            data-invoice_id="<?php echo $invoice['id']; ?>"
                                            data-action="edit_invoice"
                                            title="تعديل الفاتورة">
                                        <i class="bi bi-pencil-square"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-danger delete-invoice-btn"
                                            data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                            data-id="<?php echo $invoice['id']; ?>"
                                            data-name="الفاتورة رقم <?php echo esc_attr($invoice['invoice_number']); ?>"
                                            data-delete-url="<?php echo base_url('invoices/invoice_actions.php?action=delete_invoice&id=' . $invoice['id'] . '&csrf_token=' . $csrf_token); ?>"
                                            title="حذف الفاتورة">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                     <a href="<?php echo base_url('invoices/view_invoice.php?id=' . $invoice['id']); ?>" class="btn btn-outline-primary" title="عرض/طباعة الفاتورة">
                                        <i class="bi bi-eye-fill"></i>
                                    </a>
                                    <?php if (in_array($invoice['zatca_status'], ['Not Sent', 'Error', 'Rejected', 'Compliance Check Failed'])): ?>
                                    <button type="button" class="btn btn-outline-success process-zatca-btn"
                                            data-invoice-id="<?php echo $invoice['id']; ?>"
                                            data-invoice-type-zatca="<?php echo esc_attr($invoice['invoice_type_zatca']); ?>"
                                            title="معالجة وإرسال إلى ZATCA">
                                        <i class="bi bi-send-check-fill"></i> ZATCA
                                    </button>
                                    <?php endif; ?>
                                </div>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params = [];
            if (!empty($search_term)) $pagination_params['search'] = $search_term;
            if (!empty($filter_status)) $pagination_params['status'] = $filter_status;
            if (!empty($filter_zatca_status)) $pagination_params['zatca_status'] = $filter_zatca_status;
            if (!empty($filter_lease_id)) $pagination_params['lease_id'] = $filter_lease_id;
            if (!empty($filter_date_from)) $pagination_params['date_from'] = $filter_date_from;
            if (!empty($filter_date_to)) $pagination_params['date_to'] = $filter_date_to;
            echo generate_pagination_links($current_page, $total_pages, 'invoices/index.php', $pagination_params);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
// تضمين نافذة إضافة/تعديل الفاتورة
require_once __DIR__ . '/../includes/modals/invoice_modal.php';
// تضمين نافذة تأكيد الحذف
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
document.addEventListener('DOMContentLoaded', function () {
    var invoiceModal = document.getElementById('invoiceModal');
    var itemsContainerModal = invoiceModal.querySelector('#invoiceItemsContainerModal'); // Moved outside for broader scope
    var itemTemplateModal = invoiceModal.querySelector('#invoiceItemTemplateModal'); // Moved outside

    // Function to fetch full invoice data for editing (header + items)
    // This is a placeholder. In a real app, this would be an AJAX call or data passed via PHP.
    async function fetchInvoiceDataForEdit(invoiceId) {
        // Simulate fetching data. Replace with actual AJAX call.
        // For now, we'll try to get data from a hypothetical PHP endpoint or use data attributes.
        // This example assumes you might have a PHP script that returns JSON for an invoice.
        // const response = await fetch('<?php echo base_url("invoices/get_invoice_details_ajax.php?id="); ?>' + invoiceId);
        // if (!response.ok) {
        //     alert('Failed to fetch invoice details for editing.');
        //     return null;
        // }
        // return await response.json();

        // Fallback: If no AJAX, this function needs to be smarter or data preloaded.
        // For this "no AJAX" version, we'll assume the button triggering edit might have some data,
        // but items are the tricky part.
        console.warn("Fetching full invoice data for edit (ID: " + invoiceId + ") needs a robust server-side mechanism or preloaded JS data due to 'no AJAX' constraint for items.");
        return null; // Indicates data needs to be populated by other means
    }


    if (invoiceModal) {
        invoiceModal.addEventListener('show.bs.modal', async function (event) { // Made async for fetch
            var button = event.relatedTarget;
            var action = button.getAttribute('data-action');
            var modalTitle = invoiceModal.querySelector('.modal-title');
            var invoiceForm = invoiceModal.querySelector('#invoiceForm');
            var invoiceIdInput = invoiceModal.querySelector('#invoice_id_modal');
            var formActionInput = invoiceModal.querySelector('#invoice_form_action_modal');
            var submitButtonText = invoiceModal.querySelector('#invoiceSubmitButtonText');
            var leaseSelectModal = invoiceModal.querySelector('#lease_id_modal');
            var tenantDirectSelectModal = invoiceModal.querySelector('#tenant_id_invoice_modal');

            invoiceForm.reset();
            invoiceIdInput.value = '';
            itemsContainerModal.querySelectorAll('.invoice-item-row-modal:not(#invoiceItemTemplateModal)').forEach(row => row.remove());
            tenantDirectSelectModal.removeAttribute('disabled');

            var form_url = '<?php echo base_url('invoices/invoice_actions.php'); ?>';

            if (action === 'add_invoice') {
                modalTitle.textContent = 'إنشاء فاتورة جديدة';
                formActionInput.value = 'add_invoice';
                submitButtonText.textContent = 'إنشاء الفاتورة';
                invoiceForm.action = form_url;
                
                invoiceModal.querySelector('#invoice_date_modal').value = new Date().toISOString().slice(0,10);
                invoiceModal.querySelector('#due_date_modal').value = new Date().toISOString().slice(0,10);
                var now = new Date();
                invoiceModal.querySelector('#invoice_time_modal').value = now.toTimeString().slice(0,8);
                invoiceModal.querySelector('#invoice_status_modal').value = 'Unpaid';
                invoiceModal.querySelector('#invoice_type_zatca_modal').value = 'SimplifiedInvoice';
                invoiceModal.querySelector('#transaction_type_code_modal').value = '388';
                invoiceModal.querySelector('#invoice_paid_amount_modal').value = '0.00';
                invoiceModal.querySelector('#invoice_total_discount_modal').value = '0.00';
                invoiceModal.querySelector('#invoice_vat_percentage_modal_header').value = '<?php echo $default_vat_percentage_js; ?>';

                // Add one or two default item rows
                var addItemButtonModal = document.getElementById('addItemBtnModal');
                if(addItemButtonModal) {
                    addItemButtonModal.click(); // Add one default item row
                    // addItemButtonModal.click(); // Optionally add a second one
                }

            } else if (action === 'edit_invoice') { // Edit action
                modalTitle.textContent = 'تعديل بيانات الفاتورة';
                formActionInput.value = 'edit_invoice';
                submitButtonText.textContent = 'حفظ التعديلات';
                invoiceForm.action = form_url;

                var invoiceIdToEdit = button.getAttribute('data-invoice_id');
                invoiceIdInput.value = invoiceIdToEdit;

                // Attempt to populate header from button data attributes (basic)
                // This should ideally come from a comprehensive data source for the invoice
                if(document.getElementById('invoice_number_modal')) document.getElementById('invoice_number_modal').value = button.getAttribute('data-invoice_number') || '';
                if(document.getElementById('invoice_sequence_number_modal')) document.getElementById('invoice_sequence_number_modal').value = button.getAttribute('data-invoice_sequence_number') || '';
                // ... (populate other header fields similarly if available on button) ...
                // This is where you would call `await fetchInvoiceDataForEdit(invoiceIdToEdit)`
                // and then use the response to populate ALL fields, including items.
                
                // For "no AJAX", the view_invoice.php page's JS (prepareEditInvoice) is a better place to populate this.
                // If this modal is directly on index.php, then index.php needs to make all invoice data (with items)
                // available to JS, perhaps in a data attribute on the edit button or a global JS object.
                
                alert("للتعديل الكامل: يجب تحميل بيانات الفاتورة وبنودها هنا. حاليًا، يتم ملء الرأس فقط بشكل جزئي.");
                // As a placeholder, add one item row for editing.
                 var addItemButtonModalEdit = document.getElementById('addItemBtnModal');
                 if(addItemButtonModalEdit && itemsContainerModal.querySelectorAll('.invoice-item-row-modal:not(#invoiceItemTemplateModal)').length === 0) {
                    addItemButtonModalEdit.click();
                 }
            }
            // Trigger calculation and lease-tenant logic after populating (or for add)
            if(invoiceModal.querySelector('#invoice_total_discount_modal')) invoiceModal.querySelector('#invoice_total_discount_modal').dispatchEvent(new Event('change'));
            if(leaseSelectModal && leaseSelectModal.value) leaseSelectModal.dispatchEvent(new Event('change'));
        });

         // Auto-open modal if 'action=open_add_modal' is in URL
        const urlParamsForInvoice = new URLSearchParams(window.location.search);
        if (urlParamsForInvoice.has('action') && urlParamsForInvoice.get('action') === 'open_add_modal') {
            var addInvoiceButton = document.querySelector('button[data-bs-target="#invoiceModal"][data-action="add_invoice"]');
            if (addInvoiceButton) {
                // Directly trigger the modal's 'show.bs.modal' event by simulating a click on the button
                // This ensures the modal's own setup logic for 'add_invoice' runs.
                addInvoiceButton.click();
            }
        }
    }


    var confirmDeleteModalInvoice = document.getElementById('confirmDeleteModal');
    if (confirmDeleteModalInvoice) {
        confirmDeleteModalInvoice.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-invoice-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalInvoice.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف ' + itemName + '؟';
                var additionalInfo = confirmDeleteModalInvoice.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: سيتم حذف الفاتورة وجميع بنودها المرتبطة. لا يمكن التراجع عن هذا الإجراء.';
                var confirmDeleteButton = confirmDeleteModalInvoice.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) confirmDeleteButton.setAttribute('href', deleteUrl);
            }
        });
    }
    
    document.querySelectorAll('.process-zatca-btn').forEach(button => {
        button.addEventListener('click', function() {
            var invoiceId = this.getAttribute('data-invoice-id');
            var invoiceTypeZatca = this.getAttribute('data-invoice-type-zatca');
            var confirmationMessage = "سيتم الآن محاولة معالجة الفاتورة رقم " + invoiceId + " (نوع ZATCA: " + invoiceTypeZatca + ") وإرسالها إلى هيئة الزكاة والضريبة والجمارك.\n\nهل أنت متأكد أنك تريد المتابعة؟";
            
            // Simple confirm, replace with a styled modal for better UX
            if (confirm(confirmationMessage)) {
                // Redirect to an action handler or use AJAX if preferred (though constraint is no AJAX)
                // For now, let's assume a GET request to the action handler for simplicity of this example.
                // A POST request would be better for actions that change state.
                var processUrl = '<?php echo base_url("invoices/invoice_actions.php?action=process_zatca_submission&id="); ?>' + invoiceId + '&csrf_token=<?php echo $csrf_token; ?>';
                // window.location.href = processUrl; // This would be for a GET request
                
                // For a POST-like action without true AJAX, you might submit a hidden form:
                var hiddenForm = document.createElement('form');
                hiddenForm.method = 'POST';
                hiddenForm.action = '<?php echo base_url("invoices/invoice_actions.php"); ?>';
                
                var actionInput = document.createElement('input');
                actionInput.type = 'hidden'; actionInput.name = 'action'; actionInput.value = 'process_zatca_submission';
                hiddenForm.appendChild(actionInput);

                var idInput = document.createElement('input');
                idInput.type = 'hidden'; idInput.name = 'invoice_id'; idInput.value = invoiceId;
                hiddenForm.appendChild(idInput);

                var csrfInput = document.createElement('input');
                csrfInput.type = 'hidden'; csrfInput.name = 'csrf_token'; csrfInput.value = '<?php echo $csrf_token; ?>';
                hiddenForm.appendChild(csrfInput);
                
                document.body.appendChild(hiddenForm);
                hiddenForm.submit();
                
                // alert('جاري معالجة الفاتورة مع ZATCA... (هذا الجزء قيد التطوير الفعلي للاتصال بالـ API)');
            }
        });
    });
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./invoices/view_invoice.php =====
<?php
$page_title = "عرض تفاصيل الفاتورة";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';

$invoice_id = isset($_GET['id']) ? (int)$_GET['id'] : 0;

if ($invoice_id <= 0) {
    set_message("معرف الفاتورة غير صحيح أو مفقود.", "danger");
    redirect(base_url('invoices/index.php'));
}

// Fetch invoice header data
$stmt_invoice = $mysqli->prepare(
    "SELECT i.*, 
            t.full_name as tenant_full_name, t.national_id_iqama as tenant_national_id, t.email as tenant_email, t.phone_primary as tenant_phone,
            t.current_address as tenant_address_current, 
            t.buyer_vat_number, t.buyer_street_name, t.buyer_building_no, t.buyer_additional_no, 
            t.buyer_postal_code, t.buyer_district_name, t.buyer_city_name, t.buyer_country_code,
            l.lease_contract_number,
            u_created.full_name as created_by_fullname
     FROM invoices i
     LEFT JOIN tenants t ON i.tenant_id = t.id
     LEFT JOIN leases l ON i.lease_id = l.id
     LEFT JOIN users u_created ON i.created_by_id = u_created.id
     WHERE i.id = ?"
);
if(!$stmt_invoice){
    error_log("View Invoice Prepare Error (Invoice): " . $mysqli->error);
    set_message("خطأ في تجهيز عرض الفاتورة.", "danger");
    redirect(base_url('invoices/index.php'));
}
$stmt_invoice->bind_param("i", $invoice_id);
$stmt_invoice->execute();
$result_invoice = $stmt_invoice->get_result();

if ($result_invoice->num_rows === 0) {
    set_message("الفاتورة المطلوبة غير موجودة.", "warning");
    redirect(base_url('invoices/index.php'));
}
$invoice = $result_invoice->fetch_assoc();
$stmt_invoice->close();

// Fetch invoice items
$invoice_items = [];
$stmt_items = $mysqli->prepare("SELECT * FROM invoice_items WHERE invoice_id = ? ORDER BY id ASC");
if ($stmt_items) {
    $stmt_items->bind_param("i", $invoice_id);
    $stmt_items->execute();
    $result_items = $stmt_items->get_result();
    $invoice_items = $result_items->fetch_all(MYSQLI_ASSOC);
    $stmt_items->close();
} else {
    error_log("View Invoice Prepare Error (Items): " . $mysqli->error);
    // Continue without items, or show an error
}

// ZATCA Status and QR display (using placeholder for QR image generation for now)
$zatca_qr_image_src = '';
if (!empty($invoice['zatca_qr_code_data'])) {
    // In a real scenario, you'd generate an image from this TLV Base64 data
    // For now, let's assume generate_zatca_qr_code_placeholder returns a data URI or path
    // For this example, we'll just display the raw data if no image generation is in place.
    // $zatca_qr_image_src = generate_qr_image_from_tlv_base64($invoice['zatca_qr_code_data']);
    // Using the simple placeholder function for now
    $zatca_qr_image_src = generate_zatca_qr_code_placeholder([
        'seller_name' => defined('ZATCA_SELLER_NAME') ? ZATCA_SELLER_NAME : '',
        'vat_number' => defined('ZATCA_SELLER_VAT_NUMBER') ? ZATCA_SELLER_VAT_NUMBER : '',
        'timestamp' => $invoice['invoice_date'] . 'T' . $invoice['invoice_time'],
        'total_amount' => $invoice['total_amount'], // Amount with VAT
        'vat_amount' => $invoice['vat_amount'],     // VAT Amount
        'xml_hash' => $invoice['zatca_invoice_hash'] ?? 'N/A' // XML Invoice Hash
        // Potentially other data required by your QR generation logic
    ]);
}

// Display names for statuses (can be moved to functions.php if used elsewhere)
$invoice_statuses_display_view = [
    'Draft' => 'مسودة', 'Unpaid' => 'غير مدفوعة', 'Partially Paid' => 'مدفوعة جزئياً',
    'Paid' => 'مدفوعة', 'Overdue' => 'متأخرة', 'Cancelled' => 'ملغاة', 'Void' => 'لاغية'
];
$zatca_statuses_display_view = [
    'Not Sent' => 'لم ترسل', 'Sent' => 'مرسلة', 'Generating' => 'قيد الإنشاء',
    'Compliance Check Pending' => 'فحص الامتثال معلق', 'Compliance Check Failed' => 'فشل فحص الامتثال',
    'Compliance Check Passed' => 'نجح فحص الامتثال', 'Clearance Pending' => 'التصريح معلق',
    'Cleared' => 'تم التصريح (Clearance)', 'Reporting Pending' => 'الإبلاغ معلق', 'Reported' => 'تم الإبلاغ (Reporting)',
    'Rejected' => 'مرفوضة من ZATCA', 'Error' => 'خطأ في معالجة ZATCA'
];
$invoice_type_zatca_display_view = [
    'Invoice' => 'فاتورة ضريبية (B2B)', 'SimplifiedInvoice' => 'فاتورة ضريبية مبسطة (B2C)',
    'DebitNote' => 'إشعار مدين', 'CreditNote' => 'إشعار دائن'
];


require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';
?>
<style>
    .invoice-box {
        max-width: 900px;
        margin: auto;
        padding: 30px;
        border: 1px solid #eee;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);
        font-size: 16px;
        line-height: 24px;
        font-family: 'Cairo', sans-serif;
        color: #555;
        background-color: #fff;
    }
    .invoice-box table { width: 100%; line-height: inherit; text-align: right; }
    .invoice-box table td { padding: 5px; vertical-align: top; }
    .invoice-box table tr td:nth-child(2) { text-align: left; } /* For English text if any */
    .invoice-box table tr.top table td { padding-bottom: 20px; }
    .invoice-box table tr.top table td.title { font-size: 35px; line-height: 35px; color: #333; }
    .invoice-box table tr.information table td { padding-bottom: 20px; }
    .invoice-box table tr.heading td { background: #eee; border-bottom: 1px solid #ddd; font-weight: bold; text-align:right; }
    .invoice-box table tr.details td { padding-bottom: 10px; }
    .invoice-box table tr.item td { border-bottom: 1px solid #eee; text-align:right; }
    .invoice-box table tr.item.last td { border-bottom: none; }
    .invoice-box table tr.total td:nth-child(2) { border-top: 2px solid #eee; font-weight: bold; text-align:left; }
    .invoice-box .qr-code-zatca { max-width: 150px; margin-top: 20px; }
    .print-button-container { text-align: center; margin-top: 20px; margin-bottom: 40px;}
    @media print {
        body { -webkit-print-color-adjust: exact; /* Chrome, Safari */ color-adjust: exact; /* Firefox */ }
        .no-print { display: none !important; }
        .invoice-box { box-shadow: none; border: none; margin: 0; max-width: 100%; padding:0;}
    }
</style>

<div class="container-fluid">
    <div class="content-header no-print">
        <h1><?php echo esc_html($page_title) . ': ' . esc_html($invoice['invoice_number']); ?></h1>
    </div>

    <div class="print-button-container no-print">
        <button onclick="window.print();" class="btn btn-primary"><i class="bi bi-printer-fill"></i> طباعة الفاتورة</button>
        <a href="<?php echo base_url('invoices/index.php'); ?>" class="btn btn-outline-secondary"><i class="bi bi-list-ul"></i> العودة للقائمة</a>
         <button type="button" class="btn btn-outline-warning" data-bs-toggle="modal" data-bs-target="#invoiceModal" data-invoice_id="<?php echo $invoice['id']; ?>" onclick="prepareEditInvoice(this)">
            <i class="bi bi-pencil-square"></i> تعديل هذه الفاتورة
        </button>
    </div>

    <div class="invoice-box">
        <table cellpadding="0" cellspacing="0">
            <tr class="top">
                <td colspan="2">
                    <table>
                        <tr>
                            <td class="title">
                                <?php /* <img src="<?php echo base_url('assets/images/your-logo.png'); ?>" style="width:100%; max-width:150px;"> */ ?>
                                <h2 style="margin:0;"><?php echo esc_html(defined('ZATCA_SELLER_NAME') ? ZATCA_SELLER_NAME : APP_NAME); ?></h2>
                            </td>
                            <td>
                                فاتورة رقم: <strong><?php echo esc_html($invoice['invoice_number']); ?></strong><br>
                                رقم تسلسل الفاتورة (ICV): <?php echo esc_html($invoice['invoice_sequence_number']); ?><br>
                                تاريخ الإصدار: <?php echo format_date_custom($invoice['invoice_date'] . ' ' . $invoice['invoice_time'], 'd-m-Y H:i A'); ?><br>
                                تاريخ الاستحقاق: <?php echo format_date_custom($invoice['due_date'], 'd-m-Y'); ?>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr class="information">
                <td colspan="2">
                    <table>
                        <tr>
                            <td>
                                <strong><?php echo esc_html(defined('ZATCA_SELLER_NAME') ? ZATCA_SELLER_NAME : APP_NAME); ?></strong><br>
                                <?php echo esc_html(defined('ZATCA_SELLER_STREET_NAME') ? ZATCA_SELLER_STREET_NAME : ''); ?>
                                <?php echo esc_html(defined('ZATCA_SELLER_BUILDING_NO') ? ', مبنى ' . ZATCA_SELLER_BUILDING_NO : ''); ?><br>
                                <?php echo esc_html(defined('ZATCA_SELLER_DISTRICT_NAME') ? ZATCA_SELLER_DISTRICT_NAME : ''); ?>
                                <?php echo esc_html(defined('ZATCA_SELLER_CITY_NAME') ? ', ' . ZATCA_SELLER_CITY_NAME : ''); ?>
                                <?php echo esc_html(defined('ZATCA_SELLER_POSTAL_CODE') ? ', ' . ZATCA_SELLER_POSTAL_CODE : ''); ?><br>
                                <?php echo esc_html(defined('ZATCA_SELLER_COUNTRY_CODE') ? ZATCA_SELLER_COUNTRY_CODE : ''); ?><br>
                                الرقم الضريبي: <?php echo esc_html(defined('ZATCA_SELLER_VAT_NUMBER') ? ZATCA_SELLER_VAT_NUMBER : ''); ?>
                            </td>
                            <td>
                                <strong>فاتورة إلى: <?php echo esc_html($invoice['tenant_full_name']); ?></strong><br>
                                <?php echo esc_html($invoice['tenant_address_current'] ?: ($invoice['buyer_street_name'] ? $invoice['buyer_street_name'] . ($invoice['buyer_building_no'] ? ', مبنى '.$invoice['buyer_building_no'] : '') : '')); ?><br>
                                <?php echo esc_html($invoice['buyer_district_name'] ? $invoice['buyer_district_name'] : ''); ?>
                                <?php echo esc_html($invoice['buyer_city_name'] ? ', ' . $invoice['buyer_city_name'] : ''); ?>
                                <?php echo esc_html($invoice['buyer_postal_code'] ? ', ' . $invoice['buyer_postal_code'] : ''); ?><br>
                                <?php echo esc_html($invoice['buyer_country_code'] ?: ''); ?><br>
                                <?php if(!empty($invoice['buyer_vat_number'])): ?>
                                    الرقم الضريبي للمشتري: <?php echo esc_html($invoice['buyer_vat_number']); ?><br>
                                <?php endif; ?>
                                <?php echo esc_html($invoice['tenant_phone'] ? 'جوال: ' . $invoice['tenant_phone'] : ''); ?><br>
                                <?php echo esc_html($invoice['tenant_email'] ? 'بريد: ' . $invoice['tenant_email'] : ''); ?>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr class="heading">
                <td>نوع الفاتورة (ZATCA)</td>
                <td style="text-align:left;"><?php echo esc_html($invoice_type_zatca_display_view[$invoice['invoice_type_zatca']] ?? $invoice['invoice_type_zatca']); ?></td>
            </tr>
            <tr class="details">
                <td>الحالة الداخلية</td>
                <td style="text-align:left;"><?php echo esc_html($invoice_statuses_display_view[$invoice['status']] ?? $invoice['status']); ?></td>
            </tr>
             <tr class="details">
                <td>حالة ZATCA</td>
                <td style="text-align:left;"><?php echo esc_html($zatca_statuses_display_view[$invoice['zatca_status']] ?? $invoice['zatca_status']); ?></td>
            </tr>
            <?php if(!empty($invoice['lease_contract_number'])): ?>
            <tr class="details">
                <td>عقد الإيجار المرتبط</td>
                <td style="text-align:left;"><?php echo esc_html($invoice['lease_contract_number']); ?></td>
            </tr>
            <?php endif; ?>
            <?php if(!empty($invoice['purchase_order_id'])): ?>
            <tr class="details">
                <td>رقم أمر الشراء</td>
                <td style="text-align:left;"><?php echo esc_html($invoice['purchase_order_id']); ?></td>
            </tr>
            <?php endif; ?>
            <?php if(!empty($invoice['contract_id'])): ?> <tr class="details">
                <td>رقم العقد المرجعي</td>
                <td style="text-align:left;"><?php echo esc_html($invoice['contract_id']); ?></td>
            </tr>
            <?php endif; ?>


            <tr class="heading">
                <td>وصف البند</td>
                <td style="text-align:left;">السعر الإفرادي</td>
                </tr>
            <?php $calculated_items_subtotal = 0; ?>
            <?php foreach ($invoice_items as $item):
                // $item_total_before_vat = ($item['quantity'] * $item['unit_price_before_vat']) - ($item['item_discount_amount'] ?? 0);
                // $item_vat = ($item_total_before_vat * $item['item_vat_percentage'] / 100);
                // $item_total_with_vat = $item_total_before_vat + $item_vat;
                // $calculated_items_subtotal += $item_total_before_vat; // Sum of item taxable amounts
            ?>
            <tr class="item <?php echo end($invoice_items) === $item ? 'last' : ''; ?>">
                <td>
                    <?php echo esc_html($item['item_name']); ?><br>
                    <small class="text-muted">
                        الكمية: <?php echo esc_html($item['quantity']); ?>, 
                        السعر: <?php echo number_format($item['unit_price_before_vat'], 2); ?>,
                        خصم البند: <?php echo number_format($item['item_discount_amount'] ?? 0, 2); ?>,
                        ضريبة القيمة المضافة (<?php echo number_format($item['item_vat_percentage'], 2); ?>%): <?php echo number_format($item['item_vat_amount'], 2); ?>
                    </small>
                </td>
                <td style="text-align:left;"><?php echo number_format($item['item_sub_total_with_vat'], 2); ?></td>
            </tr>
            <?php endforeach; ?>

            <tr class="total">
                <td></td>
                <td style="text-align:left;"><strong>المجموع الفرعي للبنود (خاضع للضريبة): <?php echo number_format($invoice['sub_total_amount'], 2); ?> ريال</strong></td>
            </tr>
            <?php if (isset($invoice['discount_amount']) && $invoice['discount_amount'] > 0): ?>
            <tr class="total">
                <td></td>
                <td style="text-align:left;">خصم على إجمالي الفاتورة: <?php echo number_format($invoice['discount_amount'], 2); ?> ريال</td>
            </tr>
            <?php endif; ?>
            <tr class="total">
                <td></td>
                <td style="text-align:left;">ضريبة القيمة المضافة (<?php echo number_format($invoice['vat_percentage'], 2); ?>%): <?php echo number_format($invoice['vat_amount'], 2); ?> ريال</td>
            </tr>
            <tr class="total">
                <td></td>
                <td style="text-align:left; font-size: 1.2em;"><strong>الإجمالي المستحق: <?php echo number_format($invoice['total_amount'], 2); ?> ريال</strong></td>
            </tr>
             <tr class="total">
                <td></td>
                <td style="text-align:left;">المدفوع: <?php echo number_format($invoice['paid_amount'], 2); ?> ريال</td>
            </tr>
             <tr class="total">
                <td></td>
                <td style="text-align:left; color: <?php echo ($invoice['total_amount'] - $invoice['paid_amount']) > 0 ? 'red' : 'green'; ?>;">
                    <strong>المتبقي: <?php echo number_format($invoice['total_amount'] - $invoice['paid_amount'], 2); ?> ريال</strong>
                </td>
            </tr>
        </table>
        <hr>
        <?php if (!empty($invoice['description'])): ?>
            <p><strong>وصف الفاتورة:</strong><br><?php echo nl2br(esc_html($invoice['description'])); ?></p>
        <?php endif; ?>
        <?php if (!empty($invoice['notes_zatca'])): ?>
            <p><strong>ملاحظات ZATCA:</strong><br><?php echo nl2br(esc_html($invoice['notes_zatca'])); ?></p>
        <?php endif; ?>

        <?php if ($zatca_qr_image_src): ?>
        <div style="text-align: center; margin-top: 20px;">
            <h5>رمز الاستجابة السريعة (ZATCA)</h5>
            <?php if (strpos($zatca_qr_image_src, 'data:image') === 0): // If it's a data URI ?>
                <img src="<?php echo $zatca_qr_image_src; ?>" alt="ZATCA QR Code" class="qr-code-zatca">
            <?php else: // If it's a path to an image file (not implemented by placeholder) or just raw data ?>
                <p><small>بيانات QR (تحتاج إلى مكتبة لتحويلها لصورة):</small></p>
                <div style="word-break: break-all; font-size: 0.7em; max-height: 100px; overflow-y: auto; border: 1px solid #ccc; padding: 5px; background-color: #f9f9f9;"><?php echo esc_html($invoice['zatca_qr_code_data']); ?></div>
            <?php endif; ?>
             <br><small>المعرف الفريد (UUID): <?php echo esc_html($invoice['zatca_uuid'] ?: 'N/A'); ?></small>
             <br><small>تجزئة الفاتورة (HASH): <?php echo esc_html($invoice['zatca_invoice_hash'] ?: 'N/A'); ?></small>
        </div>
        <?php endif; ?>
    </div>
</div>

</div> <script>
    // JavaScript to prepare invoice modal for edit when "تعديل هذه الفاتورة" is clicked
    // This assumes the invoiceModal and its item management JS is available (from includes/modals/invoice_modal.php and its script block)
    function prepareEditInvoice(buttonElement) {
        var invoiceId = buttonElement.getAttribute('data-invoice_id');
        if (!invoiceId) return;

        var invoiceModalElement = document.getElementById('invoiceModal');
        if (!invoiceModalElement) return;
        
        var invoiceModalInstance = bootstrap.Modal.getInstance(invoiceModalElement) || new bootstrap.Modal(invoiceModalElement);

        // --- Simulate button click for edit action ---
        // Create a mock button with all necessary data attributes for the modal's 'show.bs.modal' event listener
        var mockButton = document.createElement('button');
        mockButton.setAttribute('data-action', 'edit_invoice'); // This is key
        mockButton.setAttribute('data-invoice_id', invoiceId);

        // Fetch full invoice data (header + items) via a separate request or ensure it's available in JS
        // For this example, we'll assume you'd populate the modal form fields directly here
        // after fetching data. The existing modal's 'show.bs.modal' listener needs to be adapted
        // or this function needs to do more comprehensive population.

        // Populate header (example - get data from the displayed invoice on this page)
        var modalTitle = invoiceModalElement.querySelector('.modal-title');
        var invoiceForm = invoiceModalElement.querySelector('#invoiceForm');
        var invoiceIdInput = invoiceModalElement.querySelector('#invoice_id_modal');
        var formActionInput = invoiceModalElement.querySelector('#invoice_form_action_modal');
        var submitButtonText = invoiceModalElement.querySelector('#invoiceSubmitButtonText');
        
        if(invoiceForm) invoiceForm.reset();
        invoiceModalElement.querySelectorAll('#invoiceItemsContainerModal .invoice-item-row-modal:not(#invoiceItemTemplateModal)').forEach(row => row.remove());


        if(modalTitle) modalTitle.textContent = 'تعديل بيانات الفاتورة';
        if(formActionInput) formActionInput.value = 'edit_invoice';
        if(submitButtonText) submitButtonText.textContent = 'حفظ التعديلات';
        if(invoiceForm) invoiceForm.action = '<?php echo base_url('invoices/invoice_actions.php'); ?>';
        if(invoiceIdInput) invoiceIdInput.value = invoiceId;

        // Populate header fields from the $invoice PHP variable available on this page
        // This is a simplified approach. A robust solution might use a JS object or AJAX.
        <?php if (isset($invoice) && is_array($invoice)): ?>
        if(document.getElementById('invoice_number_modal')) document.getElementById('invoice_number_modal').value = '<?php echo esc_js($invoice['invoice_number']); ?>';
        if(document.getElementById('invoice_sequence_number_modal')) document.getElementById('invoice_sequence_number_modal').value = '<?php echo esc_js($invoice['invoice_sequence_number']); ?>';
        if(document.getElementById('invoice_date_modal')) document.getElementById('invoice_date_modal').value = '<?php echo esc_js($invoice['invoice_date']); ?>';
        if(document.getElementById('invoice_time_modal')) document.getElementById('invoice_time_modal').value = '<?php echo esc_js($invoice['invoice_time']); ?>';
        if(document.getElementById('due_date_modal')) document.getElementById('due_date_modal').value = '<?php echo esc_js($invoice['due_date']); ?>';
        if(document.getElementById('invoice_type_zatca_modal')) document.getElementById('invoice_type_zatca_modal').value = '<?php echo esc_js($invoice['invoice_type_zatca']); ?>';
        if(document.getElementById('transaction_type_code_modal')) document.getElementById('transaction_type_code_modal').value = '<?php echo esc_js($invoice['transaction_type_code']); ?>';
        if(document.getElementById('invoice_status_modal')) document.getElementById('invoice_status_modal').value = '<?php echo esc_js($invoice['status']); ?>';
        if(document.getElementById('lease_id_modal')) document.getElementById('lease_id_modal').value = '<?php echo esc_js($invoice['lease_id'] ?: ''); ?>';
        if(document.getElementById('tenant_id_invoice_modal')) {
            document.getElementById('tenant_id_invoice_modal').value = '<?php echo esc_js($invoice['tenant_id'] ?: ''); ?>';
            if('<?php echo esc_js($invoice['lease_id'] ?: ''); ?>' !== ''){ // If lease selected, disable tenant direct select
                document.getElementById('tenant_id_invoice_modal').setAttribute('disabled', 'disabled');
            } else {
                 document.getElementById('tenant_id_invoice_modal').removeAttribute('disabled');
            }
        }
        if(document.getElementById('purchase_order_id_modal')) document.getElementById('purchase_order_id_modal').value = '<?php echo esc_js($invoice['purchase_order_id']); ?>';
        if(document.getElementById('contract_id_modal_invoice')) document.getElementById('contract_id_modal_invoice').value = '<?php echo esc_js($invoice['contract_id']); ?>';
        if(document.getElementById('invoice_description_modal')) document.getElementById('invoice_description_modal').value = '<?php echo esc_js($invoice['description']); ?>';
        if(document.getElementById('zatca_notes_modal')) document.getElementById('zatca_notes_modal').value = '<?php echo esc_js($invoice['notes_zatca']); ?>';
        if(document.getElementById('invoice_total_discount_modal')) document.getElementById('invoice_total_discount_modal').value = '<?php echo esc_js(number_format($invoice['discount_amount'], 2, '.', '')); ?>';
        if(document.getElementById('invoice_vat_percentage_modal_header')) document.getElementById('invoice_vat_percentage_modal_header').value = '<?php echo esc_js(number_format($invoice['vat_percentage'], 2, '.', '')); ?>';
        if(document.getElementById('invoice_paid_amount_modal')) document.getElementById('invoice_paid_amount_modal').value = '<?php echo esc_js(number_format($invoice['paid_amount'], 2, '.', '')); ?>';
        <?php endif; ?>

        // Populate items (this requires the items data to be available in JS)
        var itemsContainerModal = document.getElementById('invoiceItemsContainerModal');
        var addItemButtonModal = document.getElementById('addItemBtnModal'); // From modal's own JS
        <?php if (isset($invoice_items) && !empty($invoice_items)): ?>
        <?php foreach ($invoice_items as $item_js): ?>
            if (addItemButtonModal) { // Ensure addItemBtnModal's click handler is set up in modal's JS
                // Directly create and populate row or rely on addItemBtnModal's functionality
                // For now, let's assume addItemBtnModal creates a blank row, then we populate it.
                addItemButtonModal.click(); // This adds a new blank row
                var lastItemRow = itemsContainerModal.querySelector('.invoice-item-row-modal:not(#invoiceItemTemplateModal):last-child');
                if (lastItemRow) {
                    if(lastItemRow.querySelector('.item-name')) lastItemRow.querySelector('.item-name').value = '<?php echo esc_js($item_js['item_name']); ?>';
                    if(lastItemRow.querySelector('.item-quantity')) lastItemRow.querySelector('.item-quantity').value = '<?php echo esc_js($item_js['quantity']); ?>';
                    if(lastItemRow.querySelector('.item-unit-price')) lastItemRow.querySelector('.item-unit-price').value = '<?php echo esc_js($item_js['unit_price_before_vat']); ?>';
                    if(lastItemRow.querySelector('.item-vat-category')) lastItemRow.querySelector('.item-vat-category').value = '<?php echo esc_js($item_js['item_vat_category_code']); ?>';
                    if(lastItemRow.querySelector('.item-vat-percentage')) lastItemRow.querySelector('.item-vat-percentage').value = '<?php echo esc_js($item_js['item_vat_percentage']); ?>';
                    if(lastItemRow.querySelector('.item-discount')) lastItemRow.querySelector('.item-discount').value = '<?php echo esc_js($item_js['item_discount_amount'] ?? '0.00'); ?>';
                }
            }
        <?php endforeach; ?>
        <?php else: ?>
            // if (addItemButtonModal) addItemButtonModal.click(); // Add one blank if no items
        <?php endif; ?>
        
        // Trigger calculations
        if(document.getElementById('invoice_total_discount_modal')) document.getElementById('invoice_total_discount_modal').dispatchEvent(new Event('change'));


        invoiceModalInstance.show();
    }
</script>

<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./leases/index.php =====
<?php
$page_title = "إدارة عقود الإيجار";
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/header_resources.php';
require_once __DIR__ . '/../includes/navigation.php';

// متغيرات التصفح
$current_page_lease = isset($_GET['page']) && filter_var($_GET['page'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]) ? (int)$_GET['page'] : 1; // تم تغيير اسم المتغير
$items_per_page_lease = defined('ITEMS_PER_PAGE_INT') ? ITEMS_PER_PAGE_INT : 10; // تم تغيير اسم المتغير
$offset_lease = ($current_page_lease - 1) * $items_per_page_lease; // تم تغيير اسم المتغير

// وظيفة البحث والفلترة
$search_term_lease = isset($_GET['search']) ? sanitize_input($_GET['search']) : ''; // تم تغيير اسم المتغير
$filter_status_lease = isset($_GET['status']) ? sanitize_input($_GET['status']) : ''; // تم تغيير اسم المتغير
$filter_property_id_lease = isset($_GET['property_id']) && filter_var($_GET['property_id'], FILTER_VALIDATE_INT) ? (int)$_GET['property_id'] : ''; // تم تغيير اسم المتغير
$filter_tenant_id_lease = isset($_GET['tenant_id']) && filter_var($_GET['tenant_id'], FILTER_VALIDATE_INT) ? (int)$_GET['tenant_id'] : ''; // تم تغيير اسم المتغير
$filter_lease_type_id_page = isset($_GET['lease_type_id']) && filter_var($_GET['lease_type_id'], FILTER_VALIDATE_INT) ? (int)$_GET['lease_type_id'] : ''; // فلتر جديد


$where_clauses_lease = []; // تم تغيير اسم المتغير
$params_for_count_lease = []; $types_for_count_lease = "";
$params_for_data_lease = [];  $types_for_data_lease = "";

if (!empty($search_term_lease)) {
    $where_clauses_lease[] = "(l.lease_contract_number LIKE ? OR t.full_name LIKE ? OR u.unit_number LIKE ? OR p.property_code LIKE ?)";
    $search_like_lease = "%" . $search_term_lease . "%";
    for ($i=0; $i<4; $i++) {
        $params_for_count_lease[] = $search_like_lease; $types_for_count_lease .= "s";
        $params_for_data_lease[] = $search_like_lease;  $types_for_data_lease .= "s";
    }
}
if (!empty($filter_status_lease)) {
    $where_clauses_lease[] = "l.status = ?";
    $params_for_count_lease[] = $filter_status_lease; $types_for_count_lease .= "s";
    $params_for_data_lease[] = $filter_status_lease;  $types_for_data_lease .= "s";
}
if (!empty($filter_property_id_lease)) {
    $where_clauses_lease[] = "p.id = ?";
    $params_for_count_lease[] = $filter_property_id_lease; $types_for_count_lease .= "i";
    $params_for_data_lease[] = $filter_property_id_lease;  $types_for_data_lease .= "i";
}
if (!empty($filter_tenant_id_lease)) {
    $where_clauses_lease[] = "l.tenant_id = ?";
    $params_for_count_lease[] = $filter_tenant_id_lease; $types_for_count_lease .= "i";
    $params_for_data_lease[] = $filter_tenant_id_lease;  $types_for_data_lease .= "i";
}
if (!empty($filter_lease_type_id_page)) {
    $where_clauses_lease[] = "l.lease_type_id = ?";
    $params_for_count_lease[] = $filter_lease_type_id_page; $types_for_count_lease .= "i";
    $params_for_data_lease[] = $filter_lease_type_id_page;  $types_for_data_lease .= "i";
}


$where_sql_lease = ""; // تم تغيير اسم المتغير
if (!empty($where_clauses_lease)) {
    $where_sql_lease = " WHERE " . implode(" AND ", $where_clauses_lease);
}

// الحصول على العدد الإجمالي للعقود
$total_sql_lease = "SELECT COUNT(l.id) as total 
              FROM leases l
              JOIN units u ON l.unit_id = u.id
              JOIN properties p ON u.property_id = p.id
              JOIN tenants t ON l.tenant_id = t.id
              LEFT JOIN lease_types lt ON l.lease_type_id = lt.id" . $where_sql_lease; // تم تغيير اسم المتغير و إضافة الربط
$stmt_total_lease = $mysqli->prepare($total_sql_lease);
$total_leases_page = 0; // تم تغيير اسم المتغير
if ($stmt_total_lease) {
    if (!empty($params_for_count_lease)) {
        $stmt_total_lease->bind_param($types_for_count_lease, ...$params_for_count_lease);
    }
    $stmt_total_lease->execute();
    $total_result_lease = $stmt_total_lease->get_result();
    $total_leases_page = ($total_result_lease && $total_result_lease->num_rows > 0) ? $total_result_lease->fetch_assoc()['total'] : 0;
    $stmt_total_lease->close();
} else {
    error_log("SQL Prepare Error for counting leases: " . $mysqli->error);
}
$total_pages_lease = ceil($total_leases_page / $items_per_page_lease); // تم تغيير اسم المتغير


// جلب العقود للصفحة الحالية
// تم تحديث الاستعلام ليشمل الحقول الجديدة واسم نوع العقد
$sql_lease = "SELECT l.id, l.lease_contract_number, l.lease_start_date, l.lease_end_date, l.rent_amount, l.status,
                     l.payment_frequency, l.payment_due_day, l.deposit_amount, l.grace_period_days, l.notes, l.contract_document_path,
                     l.lease_type_id, l.next_billing_date, l.last_billed_on, 
                     u.unit_number, u.id as unit_id_for_lease, 
                     p.name as property_name, p.property_code, 
                     t.full_name as tenant_name, t.id as tenant_id_for_lease, t.national_id_iqama as tenant_id_number,
                     lt.display_name_ar as lease_type_name
              FROM leases l
              JOIN units u ON l.unit_id = u.id
              JOIN properties p ON u.property_id = p.id
              JOIN tenants t ON l.tenant_id = t.id
              LEFT JOIN lease_types lt ON l.lease_type_id = lt.id"
       . $where_sql_lease . " ORDER BY l.lease_start_date DESC, l.id DESC LIMIT ? OFFSET ?";

$current_data_params_lease = $params_for_data_lease;
$current_data_params_lease[] = $items_per_page_lease;
$current_data_params_lease[] = $offset_lease;
$current_data_types_lease = $types_for_data_lease . 'ii';

$leases_list = []; // تم تغيير اسم المتغير
$stmt_lease = $mysqli->prepare($sql_lease);
if ($stmt_lease) {
    if (!empty($current_data_params_lease)) {
        $stmt_lease->bind_param($current_data_types_lease, ...$current_data_params_lease);
    } else {
         $stmt_lease->bind_param('ii', $items_per_page_lease, $offset_lease);
    }
    $stmt_lease->execute();
    $result_lease = $stmt_lease->get_result();
    $leases_list = ($result_lease && $result_lease->num_rows > 0) ? $result_lease->fetch_all(MYSQLI_ASSOC) : [];
    if ($stmt_lease) $stmt_lease->close();
} else {
    error_log("SQL Prepare Error for fetching leases: " . $mysqli->error);
}

// جلب قوائم للفلترة
$properties_filter_list_lease = []; // تم تغيير الاسم
$prop_q_lease = "SELECT id, name, property_code FROM properties ORDER BY name ASC";
if($prop_r_lease = $mysqli->query($prop_q_lease)){ while($row = $prop_r_lease->fetch_assoc()){ $properties_filter_list_lease[] = $row;} $prop_r_lease->free(); }

$tenants_filter_list_lease = []; // تم تغيير الاسم
$ten_q_lease = "SELECT id, full_name, national_id_iqama FROM tenants ORDER BY full_name ASC";
if($ten_r_lease = $mysqli->query($ten_q_lease)){ while($row = $ten_r_lease->fetch_assoc()){ $tenants_filter_list_lease[] = $row;} $ten_r_lease->free(); }

$lease_types_filter_list_page = []; // جلب أنواع العقود للفلتر
$ltypes_query_filter_page = "SELECT id, display_name_ar FROM lease_types ORDER BY display_name_ar ASC";
if($ltypes_result_filter_page = $mysqli->query($ltypes_query_filter_page)){
    while($ltype_row_filter_page = $ltypes_result_filter_page->fetch_assoc()){
        $lease_types_filter_list_page[] = $ltype_row_filter_page;
    }
    $ltypes_result_filter_page->free();
}


$lease_statuses_display_page = [ // تم تغيير الاسم
    'Pending' => 'معلق', 'Active' => 'نشط', 'Expired' => 'منتهي الصلاحية', 'Terminated' => 'ملغي', 'Draft' => 'مسودة'
];


$csrf_token = generate_csrf_token();
?>

<div class="container-fluid">
    <div class="content-header">
        <h1><i class="bi bi-file-earmark-text-fill"></i> <?php echo esc_html($page_title); ?></h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">قائمة عقود الإيجار (<?php echo $total_leases_page; ?>)</h5>
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#leaseModal" onclick="prepareLeaseModal('add_lease')">
                    <i class="bi bi-plus-circle"></i> إضافة عقد جديد
                </button>
            </div>
            <hr class="my-2">
            <form method="GET" action="<?php echo base_url('leases/index.php'); ?>" class="row gx-2 gy-2 align-items-center">
                <div class="col-md-3 col-lg-2">
                    <label for="search_leases_page" class="form-label form-label-sm visually-hidden">بحث عام</label>
                    <input type="text" id="search_leases_page" name="search" class="form-control form-control-sm" placeholder="رقم العقد، المستأجر، الوحدة..." value="<?php echo esc_attr($search_term_lease); ?>">
                </div>
                <div class="col-md-2 col-lg-2">
                     <label for="filter_status_lease_page" class="form-label form-label-sm visually-hidden">الحالة</label>
                    <select id="filter_status_lease_page" name="status" class="form-select form-select-sm">
                        <option value="">-- كل الحالات --</option>
                        <?php foreach ($lease_statuses_display_page as $key => $value): ?>
                            <option value="<?php echo $key; ?>" <?php echo ($filter_status_lease == $key) ? 'selected' : ''; ?>><?php echo esc_html($value); ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                 <div class="col-md-2 col-lg-2">
                    <label for="filter_property_id_lease_page" class="form-label form-label-sm visually-hidden">العقار</label>
                    <select id="filter_property_id_lease_page" name="property_id" class="form-select form-select-sm">
                        <option value="">-- كل العقارات --</option>
                        <?php foreach ($properties_filter_list_lease as $prop_item_lease): ?>
                            <option value="<?php echo $prop_item_lease['id']; ?>" <?php echo ($filter_property_id_lease == $prop_item_lease['id']) ? 'selected' : ''; ?>>
                                <?php echo esc_html($prop_item_lease['name'] . ' (' . $prop_item_lease['property_code'] . ')'); ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-2 col-lg-2">
                     <label for="filter_lease_type_id_page_filter" class="form-label form-label-sm visually-hidden">نوع العقد</label>
                     <select id="filter_lease_type_id_page_filter" name="lease_type_id" class="form-select form-select-sm">
                        <option value="">-- كل الأنواع --</option>
                        <?php foreach ($lease_types_filter_list_page as $ltype_filter_item): ?>
                            <option value="<?php echo $ltype_filter_item['id']; ?>" <?php echo ($filter_lease_type_id_page == $ltype_filter_item['id']) ? 'selected' : ''; ?>>
                                <?php echo esc_html($ltype_filter_item['display_name_ar']); ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="col-md-1 col-lg-2">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i> فلترة</button>
                </div>
                <div class="col-md-1 col-lg-2">
                     <a href="<?php echo base_url('leases/index.php'); ?>" class="btn btn-outline-secondary btn-sm w-100"><i class="bi bi-eraser-fill"></i> مسح</a>
                </div>
            </form>
        </div>
        <div class="card-body">
            <?php if (empty($leases_list) && (!empty($search_term_lease) || !empty($filter_status_lease) || !empty($filter_property_id_lease) || !empty($filter_tenant_id_lease) || !empty($filter_lease_type_id_page))): ?>
                <div class="alert alert-warning text-center">لا توجد عقود تطابق معايير البحث أو الفلترة.</div>
            <?php elseif (empty($leases_list)): ?>
                <div class="alert alert-info text-center">لا توجد عقود إيجار مسجلة حالياً. يمكنك <a href="#" data-bs-toggle="modal" data-bs-target="#leaseModal" onclick="prepareLeaseModal('add_lease')">إضافة عقد جديد</a>.</div>
            <?php else: ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>رقم العقد</th>
                            <th>العقار - الوحدة</th>
                            <th>المستأجر</th>
                            <th>نوع العقد</th>
                            <th>تاريخ البدء</th>
                            <th>تاريخ الانتهاء</th>
                            <th>مبلغ الإيجار</th>
                            <th>الحالة</th>
                            <th class="text-center">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php $row_num_lease = ($current_page_lease - 1) * $items_per_page_lease + 1; ?>
                        <?php foreach ($leases_list as $lease_item_page): // تم تغيير اسم المتغير ?>
                        <tr>
                            <td><?php echo $row_num_lease++; ?></td>
                            <td><?php echo esc_html($lease_item_page['lease_contract_number']); ?></td>
                            <td><?php echo esc_html($lease_item_page['property_name'] . ' - ' . $lease_item_page['unit_number']); ?></td>
                            <td><?php echo esc_html($lease_item_page['tenant_name']); ?> <small class="text-muted">(<?php echo esc_html($lease_item_page['tenant_id_number']); ?>)</small></td>
                            <td><?php echo esc_html($lease_item_page['lease_type_name'] ?: '-'); ?></td>
                            <td><?php echo format_date_custom($lease_item_page['lease_start_date'], 'Y-m-d'); ?></td>
                            <td><?php echo format_date_custom($lease_item_page['lease_end_date'], 'Y-m-d'); ?></td>
                            <td><?php echo number_format($lease_item_page['rent_amount'], 2); ?> ريال</td>
                            <td>
                                <?php
                                $status_class_lease = 'secondary'; // تم تغيير الاسم
                                if ($lease_item_page['status'] === 'Active') $status_class_lease = 'success';
                                elseif ($lease_item_page['status'] === 'Expired') $status_class_lease = 'danger';
                                elseif ($lease_item_page['status'] === 'Pending') $status_class_lease = 'warning';
                                elseif ($lease_item_page['status'] === 'Terminated') $status_class_lease = 'dark';
                                ?>
                                <span class="badge bg-<?php echo $status_class_lease; ?>"><?php echo esc_html($lease_statuses_display_page[$lease_item_page['status']] ?? $lease_item_page['status']); ?></span>
                            </td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-warning"
                                        onclick="prepareLeaseModal('edit_lease', <?php echo htmlspecialchars(json_encode($lease_item_page), ENT_QUOTES, 'UTF-8'); ?>)"
                                        data-bs-toggle="modal" data-bs-target="#leaseModal"
                                        title="تعديل بيانات العقد">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-lease-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="<?php echo $lease_item_page['id']; ?>"
                                        data-name="العقد رقم <?php echo esc_attr($lease_item_page['lease_contract_number']); ?>"
                                        data-delete-url="<?php echo base_url('leases/lease_actions.php?action=delete_lease&id=' . $lease_item_page['id'] . '&csrf_token=' . $csrf_token); ?>"
                                        title="حذف العقد">
                                    <i class="bi bi-trash"></i>
                                </button>
                                <?php if (!empty($lease_item_page['contract_document_path'])): ?>
                                    <a href="<?php echo base_url(esc_attr($lease_item_page['contract_document_path'])); ?>" target="_blank" class="btn btn-sm btn-outline-primary" title="عرض مستند العقد">
                                        <i class="bi bi-eye-fill"></i>
                                    </a>
                                <?php endif; ?>
                                 <a href="<?php echo base_url('invoices/index.php?lease_id=' . $lease_item_page['id']); ?>" class="btn btn-sm btn-outline-success" title="عرض فواتير هذا العقد">
                                    <i class="bi bi-receipt"></i> <span class="d-none d-md-inline">الفواتير</span>
                                </a>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
            <?php endif; ?>
        </div>
        <?php if ($total_pages_lease > 1): ?>
        <div class="card-footer bg-light">
            <?php
            $pagination_params_lease = []; // تم تغيير الاسم
            if (!empty($search_term_lease)) $pagination_params_lease['search'] = $search_term_lease;
            if (!empty($filter_status_lease)) $pagination_params_lease['status'] = $filter_status_lease;
            if (!empty($filter_property_id_lease)) $pagination_params_lease['property_id'] = $filter_property_id_lease;
            if (!empty($filter_tenant_id_lease)) $pagination_params_lease['tenant_id'] = $filter_tenant_id_lease;
            if (!empty($filter_lease_type_id_page)) $pagination_params_lease['lease_type_id'] = $filter_lease_type_id_page;
            echo generate_pagination_links($current_page_lease, $total_pages_lease, 'leases/index.php', $pagination_params_lease);
            ?>
        </div>
        <?php endif; ?>
    </div>
</div>

<?php
require_once __DIR__ . '/../includes/modals/lease_modal.php';
require_once __DIR__ . '/../includes/modals/confirm_delete_modal.php';
?>

</div> <script>
function prepareLeaseModal(action, leaseData = null) {
    const leaseModal = document.getElementById('leaseModal'); // معرف النافذة المنبثقة
    const modalTitle = leaseModal.querySelector('#leaseModalLabel_leases');
    const leaseForm = leaseModal.querySelector('#leaseFormModal');
    const leaseIdInput = leaseModal.querySelector('#lease_id_modal_leases');
    const actionInput = leaseModal.querySelector('#lease_form_action_modal_leases');
    const submitButton = leaseModal.querySelector('#leaseSubmitButtonTextModalLeases');
    const currentDocSpan = leaseModal.querySelector('#current_contract_document_modal_leases');
    const unitStatusWarningLease = leaseModal.querySelector('#unit_status_warning_modal_leases');


    leaseForm.reset();
    leaseIdInput.value = '';
    actionInput.value = action;
    currentDocSpan.innerHTML = ''; // مسح معلومات المستند الحالي
    if(unitStatusWarningLease) unitStatusWarningLease.classList.add('d-none');


    const formUrl = '<?php echo base_url('leases/lease_actions.php'); ?>';
    // leaseForm.action = formUrl; // ليس ضروريًا لـ fetch

    if (action === 'add_lease') {
        modalTitle.textContent = 'إضافة عقد إيجار جديد';
        submitButton.textContent = 'إضافة العقد';
         // Set default dates
        const today = new Date().toISOString().slice(0,10);
        if(document.getElementById('lease_start_date_modal_leases')) document.getElementById('lease_start_date_modal_leases').value = today;
        // Calculate end date one year from today for example
        let endDate = new Date();
        endDate.setFullYear(endDate.getFullYear() + 1);
        if(document.getElementById('lease_end_date_modal_leases')) document.getElementById('lease_end_date_modal_leases').value = endDate.toISOString().slice(0,10);
        if(document.getElementById('lease_status_modal_leases')) document.getElementById('lease_status_modal_leases').value = 'Pending'; // Default status

    } else if (action === 'edit_lease' && leaseData) {
        modalTitle.textContent = 'تعديل بيانات عقد الإيجار: ' + leaseData.lease_contract_number;
        submitButton.textContent = 'حفظ التعديلات';
        leaseIdInput.value = leaseData.id;
        
        // ملء حقول النموذج ببيانات العقد للتعديل
        if(document.getElementById('lease_contract_number_modal_leases')) document.getElementById('lease_contract_number_modal_leases').value = leaseData.lease_contract_number || '';
        if(document.getElementById('unit_id_modal_leases')) {
            document.getElementById('unit_id_modal_leases').value = leaseData.unit_id_for_lease || leaseData.unit_id || ''; // unit_id_for_lease from SELECT alias
             // Trigger change to show warning if unit is not vacant
            var unitSelectEdit = document.getElementById('unit_id_modal_leases');
            var selectedUnitOptionEdit = unitSelectEdit.options[unitSelectEdit.selectedIndex];
            if (selectedUnitOptionEdit && unitStatusWarningLease) {
                var unitStatusEdit = selectedUnitOptionEdit.getAttribute('data-unit-status');
                 if (unitStatusEdit && unitStatusEdit.toLowerCase() !== 'vacant') {
                    unitStatusWarningLease.classList.remove('d-none');
                    unitStatusWarningLease.textContent = 'تحذير: هذه الوحدة حاليًا "' + unitStatusEdit + '".';
                }
            }
        }
        if(document.getElementById('tenant_id_modal_leases')) document.getElementById('tenant_id_modal_leases').value = leaseData.tenant_id_for_lease || leaseData.tenant_id || '';
        if(document.getElementById('lease_type_id_modal_leases')) document.getElementById('lease_type_id_modal_leases').value = leaseData.lease_type_id || '';
        if(document.getElementById('lease_start_date_modal_leases')) document.getElementById('lease_start_date_modal_leases').value = leaseData.lease_start_date || '';
        if(document.getElementById('lease_end_date_modal_leases')) document.getElementById('lease_end_date_modal_leases').value = leaseData.lease_end_date || '';
        if(document.getElementById('rent_amount_modal_leases')) document.getElementById('rent_amount_modal_leases').value = leaseData.rent_amount || '';
        if(document.getElementById('payment_frequency_modal_leases')) document.getElementById('payment_frequency_modal_leases').value = leaseData.payment_frequency || 'Monthly';
        if(document.getElementById('payment_due_day_modal_leases')) document.getElementById('payment_due_day_modal_leases').value = leaseData.payment_due_day || '';
        if(document.getElementById('deposit_amount_modal_leases')) document.getElementById('deposit_amount_modal_leases').value = leaseData.deposit_amount || '0.00';
        if(document.getElementById('grace_period_days_modal_leases')) document.getElementById('grace_period_days_modal_leases').value = leaseData.grace_period_days || '0';
        if(document.getElementById('lease_status_modal_leases')) document.getElementById('lease_status_modal_leases').value = leaseData.status || '';
        if(document.getElementById('next_billing_date_modal_leases')) document.getElementById('next_billing_date_modal_leases').value = leaseData.next_billing_date || '';
        if(document.getElementById('last_billed_on_modal_leases')) document.getElementById('last_billed_on_modal_leases').value = leaseData.last_billed_on || '';
        if(document.getElementById('lease_notes_modal_leases')) document.getElementById('lease_notes_modal_leases').value = leaseData.notes || '';
        
        if (leaseData.contract_document_path && leaseData.contract_document_path !== '') {
            var filename = leaseData.contract_document_path.split('/').pop();
            currentDocSpan.innerHTML = 'المستند الحالي: <a href="<?php echo base_url(); ?>' + leaseData.contract_document_path + '" target="_blank">' + filename + '</a> (لإبقائه، لا ترفع ملف جديد)';
        }
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var confirmDeleteModalLeasePage = document.getElementById('confirmDeleteModal'); // تم تغيير الاسم
    if (confirmDeleteModalLeasePage) {
        confirmDeleteModalLeasePage.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            if (button.classList.contains('delete-lease-btn')) {
                var itemName = button.getAttribute('data-name');
                var deleteUrl = button.getAttribute('data-delete-url');
                var modalBodyText = confirmDeleteModalLeasePage.querySelector('.modal-body-text');
                if(modalBodyText) modalBodyText.textContent = 'هل أنت متأكد أنك تريد حذف ' + itemName + '؟';
                
                var additionalInfo = confirmDeleteModalLeasePage.querySelector('#additionalDeleteInfo');
                if(additionalInfo) additionalInfo.textContent = 'ملاحظة: حذف العقد لا يحذف الفواتير المرتبطة به تلقائياً، ولكن قد يجعلها يتيمة إذا لم يتم التعامل معها.';

                var confirmDeleteButton = confirmDeleteModalLeasePage.querySelector('#confirmDeleteButton');
                if(confirmDeleteButton) {
                    var newConfirmDeleteButtonLease = confirmDeleteButton.cloneNode(true); // تم تغيير الاسم
                    confirmDeleteButton.parentNode.replaceChild(newConfirmDeleteButtonLease, confirmDeleteButton);
                    
                    newConfirmDeleteButtonLease.setAttribute('data-delete-url', deleteUrl);
                    newConfirmDeleteButtonLease.removeAttribute('href');
                    
                    newConfirmDeleteButtonLease.addEventListener('click', function(e) {
                        e.preventDefault();
                        const urlToDelete = this.getAttribute('data-delete-url');
                        if(urlToDelete){
                           window.location.href = urlToDelete;
                        }
                    });
                }
            }
        });
    }

    const leaseFormElement = document.getElementById('leaseFormModal'); // تم تغيير ID
    if(leaseFormElement) {
        leaseFormElement.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(leaseFormElement);
            const actionUrl = leaseFormElement.getAttribute('action');

            fetch(actionUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var leaseModalInstance = bootstrap.Modal.getInstance(document.getElementById('leaseModal'));
                    if(leaseModalInstance) leaseModalInstance.hide();
                    window.location.reload(); 
                } else {
                    alert('خطأ: ' + data.message); 
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ غير متوقع.');
            });
        });
    }
});
</script>
<?php require_once __DIR__ . '/../includes/footer_resources.php'; ?>
===== ./leases/lease_actions.php =====
<?php
// leases/lease_actions.php
require_once __DIR__ . '/../db_connect.php';
require_once __DIR__ . '/../includes/session_manager.php';
require_login();
require_once __DIR__ . '/../includes/functions.php';
require_once __DIR__ . '/../includes/audit_log_functions.php'; // تضمين ملف سجل التدقيق

header('Content-Type: application/json');

$response = ['success' => false, 'message' => 'An unknown error occurred.'];
$action = $_POST['action'] ?? '';
$current_user_id = get_current_user_id();

$upload_dir_relative = 'uploads/contracts/';
$app_base_path_for_uploads = defined('APP_BASE_URL') ? rtrim(parse_url(APP_BASE_URL, PHP_URL_PATH), '/') : '';
$doc_root = isset($_SERVER['DOCUMENT_ROOT']) ? rtrim($_SERVER['DOCUMENT_ROOT'], '/\\') : __DIR__ . '/../..';
$upload_dir_absolute = $doc_root . $app_base_path_for_uploads . '/' . $upload_dir_relative;


if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!is_dir($upload_dir_absolute)) {
        if (!mkdir($upload_dir_absolute, 0775, true) && !is_dir($upload_dir_absolute)) {
            $response = ['success' => false, 'message' => "فشل في إنشاء مجلد الرفع: " . $upload_dir_absolute];
            error_log("Failed to create upload directory: " . $upload_dir_absolute);
            echo json_encode($response);
            exit;
        }
    }
    
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $response = ['success' => false, 'message' => 'خطأ في التحقق (CSRF).'];
        echo json_encode($response);
        exit;
    }

    $lease_id_from_post = isset($_POST['lease_id']) ? filter_var($_POST['lease_id'], FILTER_SANITIZE_NUMBER_INT) : null;

    $lease_contract_number = isset($_POST['lease_contract_number']) ? sanitize_input(trim($_POST['lease_contract_number'])) : null;
    $unit_id = isset($_POST['unit_id']) && filter_var($_POST['unit_id'], FILTER_VALIDATE_INT) ? (int)$_POST['unit_id'] : null;
    $tenant_id = isset($_POST['tenant_id']) && filter_var($_POST['tenant_id'], FILTER_VALIDATE_INT) ? (int)$_POST['tenant_id'] : null;
    $lease_type_id = isset($_POST['lease_type_id']) && $_POST['lease_type_id'] !== '' ? filter_var($_POST['lease_type_id'], FILTER_VALIDATE_INT) : null;
    
    $lease_start_date_input = isset($_POST['lease_start_date']) ? trim($_POST['lease_start_date']) : null;
    $lease_start_date = null;
    if ($lease_start_date_input) {
        $date_obj_start = DateTime::createFromFormat('Y-m-d', $lease_start_date_input);
        if ($date_obj_start && $date_obj_start->format('Y-m-d') === $lease_start_date_input) $lease_start_date = $lease_start_date_input;
    }

    $lease_end_date_input = isset($_POST['lease_end_date']) ? trim($_POST['lease_end_date']) : null;
    $lease_end_date = null;
    if ($lease_end_date_input) {
        $date_obj_end = DateTime::createFromFormat('Y-m-d', $lease_end_date_input);
        if ($date_obj_end && $date_obj_end->format('Y-m-d') === $lease_end_date_input) $lease_end_date = $lease_end_date_input;
    }
    
    $rent_amount_input = isset($_POST['rent_amount']) ? trim($_POST['rent_amount']) : null;
    $rent_amount = ($rent_amount_input !== '' && filter_var($rent_amount_input, FILTER_VALIDATE_FLOAT) !== false && (float)$rent_amount_input >= 0) ? (float)$rent_amount_input : null;
    
    $payment_frequency = isset($_POST['payment_frequency']) ? sanitize_input($_POST['payment_frequency']) : null;
    $allowed_payment_frequencies = ['Monthly', 'Quarterly', 'Semi-Annually', 'Annually', 'Custom'];
    if ($payment_frequency === null || !in_array($payment_frequency, $allowed_payment_frequencies, true)) {
         $response = ['success' => false, 'message' => "قيمة دورية السداد غير صالحة أو مفقودة."];
         echo json_encode($response); exit;
    }

    $payment_due_day_input = isset($_POST['payment_due_day']) ? trim($_POST['payment_due_day']) : null;
    $payment_due_day = ($payment_due_day_input !== '' && filter_var($payment_due_day_input, FILTER_VALIDATE_INT, ['options' => ['min_range' => 1, 'max_range' => 31]]) !== false) ? (int)$payment_due_day_input : null;

    $deposit_amount_input = isset($_POST['deposit_amount']) ? trim($_POST['deposit_amount']) : null;
    $deposit_amount = ($deposit_amount_input !== '' && filter_var($deposit_amount_input, FILTER_VALIDATE_FLOAT) !== false && (float)$deposit_amount_input >= 0) ? (float)$deposit_amount_input : 0.00;

    $grace_period_days_input = isset($_POST['grace_period_days']) ? trim($_POST['grace_period_days']) : null;
    $grace_period_days = ($grace_period_days_input !== '' && filter_var($grace_period_days_input, FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]]) !== false) ? (int)$grace_period_days_input : 0;
    
    $lease_status = isset($_POST['lease_status']) ? sanitize_input($_POST['lease_status']) : null;
    
    $next_billing_date_input = isset($_POST['next_billing_date']) ? trim($_POST['next_billing_date']) : null;
    $next_billing_date = null;
    if ($next_billing_date_input) {
        $date_obj_next_billing = DateTime::createFromFormat('Y-m-d', $next_billing_date_input);
        if ($date_obj_next_billing && $date_obj_next_billing->format('Y-m-d') === $next_billing_date_input) $next_billing_date = $next_billing_date_input;
    }

    $last_billed_on_input = isset($_POST['last_billed_on']) ? trim($_POST['last_billed_on']) : null;
    $last_billed_on = null;
    if ($last_billed_on_input) {
        $date_obj_last_billed = DateTime::createFromFormat('Y-m-d', $last_billed_on_input);
        if ($date_obj_last_billed && $date_obj_last_billed->format('Y-m-d') === $last_billed_on_input) $last_billed_on = $last_billed_on_input;
    }
    
    $lease_notes = isset($_POST['lease_notes']) ? sanitize_input(trim($_POST['lease_notes'])) : null;
    $contract_document_path = null;

    if (empty($lease_contract_number) || $unit_id === null || $tenant_id === null || $lease_start_date === null || $lease_end_date === null || $rent_amount === null || empty($lease_status)) {
        $response = ['success' => false, 'message' => "الحقول المطلوبة (رقم العقد، الوحدة، المستأجر، تواريخ البدء والانتهاء، مبلغ الإيجار، الحالة) يجب ملؤها."];
        echo json_encode($response); exit;
    }
    if (strtotime($lease_end_date) <= strtotime($lease_start_date)) {
        $response = ['success' => false, 'message' => "تاريخ انتهاء العقد يجب أن يكون بعد تاريخ بدء العقد."];
        echo json_encode($response); exit;
    }

    if (isset($_FILES['contract_document']) && $_FILES['contract_document']['error'] == UPLOAD_ERR_OK) {
        // ... (منطق رفع الملفات كما في النسخة السابقة)
        $file_tmp_path = $_FILES['contract_document']['tmp_name'];
        $file_name = sanitize_input(basename($_FILES['contract_document']['name']));
        $file_extension = strtolower(pathinfo($file_name, PATHINFO_EXTENSION));
        $allowed_extensions = ['pdf', 'doc', 'docx', 'jpg', 'png'];
        $max_file_size = 10 * 1024 * 1024; // 10 MB

        if (!in_array($file_extension, $allowed_extensions)) {
            $response = ['success' => false, 'message' => "صيغة الملف غير مسموح بها. الصيغ المسموحة: " . implode(', ', $allowed_extensions)];
            echo json_encode($response); exit;
        }
        if ($_FILES['contract_document']['size'] > $max_file_size) {
            $response = ['success' => false, 'message' => "حجم الملف يتجاوز الحد المسموح به (10 ميجابايت)."];
            echo json_encode($response); exit;
        }
        $new_file_name = uniqid('contract_', true) . '.' . $file_extension;
        $destination_path_absolute = $upload_dir_absolute . $new_file_name;
        $destination_path_relative = $upload_dir_relative . $new_file_name;

        if (move_uploaded_file($file_tmp_path, $destination_path_absolute)) {
            $contract_document_path = $destination_path_relative;
        } else {
            error_log("Failed to move uploaded file to: " . $destination_path_absolute . " from " . $file_tmp_path);
            $response = ['success' => false, 'message' => "حدث خطأ أثناء رفع ملف مستند العقد."];
            echo json_encode($response); exit;
        }
    }

    $mysqli->begin_transaction();
    try {
        if ($action === 'add_lease') {
            // ... (فحص تكرار رقم العقد كما في النسخة السابقة)
            $stmt_check_contract = $mysqli->prepare("SELECT id FROM leases WHERE lease_contract_number = ?");
            if(!$stmt_check_contract) throw new Exception("خطأ في تجهيز استعلام التحقق من رقم العقد: " . $mysqli->error);
            $stmt_check_contract->bind_param("s", $lease_contract_number);
            $stmt_check_contract->execute();
            $stmt_check_contract->store_result();
            if ($stmt_check_contract->num_rows > 0) {
                throw new Exception("رقم عقد الإيجار '" . esc_html($lease_contract_number) . "' مستخدم بالفعل.");
            }
            $stmt_check_contract->close();

            $sql = "INSERT INTO leases (lease_contract_number, unit_id, tenant_id, lease_type_id, lease_start_date, lease_end_date, 
                                       rent_amount, payment_frequency, payment_due_day, deposit_amount, grace_period_days, 
                                       status, next_billing_date, last_billed_on, notes, contract_document_path, created_by_id) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception("خطأ في تجهيز استعلام إضافة العقد: " . $mysqli->error);
            
            $stmt->bind_param("siiisssdidisssssi", 
                $lease_contract_number, $unit_id, $tenant_id, $lease_type_id, $lease_start_date, $lease_end_date,
                $rent_amount, $payment_frequency, $payment_due_day, $deposit_amount, $grace_period_days,
                $lease_status, $next_billing_date, $last_billed_on, $lease_notes, $contract_document_path, $current_user_id
            );
            if (!$stmt->execute()) throw new Exception("خطأ في إضافة عقد الإيجار: " . $stmt->error);
            $new_lease_id = $stmt->insert_id;
            $stmt->close();
            
            if ($lease_status === 'Active') {
                $mysqli->query("UPDATE units SET status = 'Occupied' WHERE id = " . (int)$unit_id);
            }
            log_audit_action($mysqli, AUDIT_CREATE_LEASE, $new_lease_id, 'leases', ['contract_number' => $lease_contract_number, 'unit_id' => $unit_id, 'tenant_id' => $tenant_id]);
            $response = ['success' => true, 'message' => "تمت إضافة عقد الإيجار بنجاح!"];

        } elseif ($action === 'edit_lease' && $lease_id_from_post) {
            // ... (فحص تكرار رقم العقد عند التعديل كما في النسخة السابقة)
            $stmt_check_contract_edit = $mysqli->prepare("SELECT id FROM leases WHERE lease_contract_number = ? AND id != ?");
            if(!$stmt_check_contract_edit) throw new Exception("خطأ في تجهيز استعلام التحقق (تعديل): " . $mysqli->error);
            $stmt_check_contract_edit->bind_param("si", $lease_contract_number, $lease_id_from_post);
            $stmt_check_contract_edit->execute();
            $stmt_check_contract_edit->store_result();
            if ($stmt_check_contract_edit->num_rows > 0) {
                throw new Exception("رقم عقد الإيجار '" . esc_html($lease_contract_number) . "' مستخدم بالفعل لعقد آخر.");
            }
            $stmt_check_contract_edit->close();
            
            $stmt_old_lease = $mysqli->prepare("SELECT * FROM leases WHERE id = ?");
            $old_lease_data = null;
            if($stmt_old_lease){
                $stmt_old_lease->bind_param("i", $lease_id_from_post);
                $stmt_old_lease->execute();
                $res_old_lease = $stmt_old_lease->get_result();
                if($res_old_lease->num_rows > 0) $old_lease_data = $res_old_lease->fetch_assoc();
                $stmt_old_lease->close();
            }
            if(!$old_lease_data) throw new Exception("العقد المطلوب تعديله غير موجود.");
            $original_unit_id = $old_lease_data['unit_id']; // لتحديث حالة الوحدة القديمة
            $old_doc_path_db = $old_lease_data['contract_document_path'];


            $set_clauses = "lease_contract_number = ?, unit_id = ?, tenant_id = ?, lease_type_id = ?, lease_start_date = ?, lease_end_date = ?, 
                            rent_amount = ?, payment_frequency = ?, payment_due_day = ?, deposit_amount = ?, grace_period_days = ?, 
                            status = ?, next_billing_date = ?, last_billed_on = ?, notes = ?";
            $types_update = "siiisssdidissss"; 
            $params_update = [
                $lease_contract_number, $unit_id, $tenant_id, $lease_type_id, $lease_start_date, $lease_end_date,
                $rent_amount, $payment_frequency, $payment_due_day, $deposit_amount, $grace_period_days,
                $lease_status, $next_billing_date, $last_billed_on, $lease_notes
            ];

            if ($contract_document_path) {
                $set_clauses .= ", contract_document_path = ?";
                $types_update .= "s";
                $params_update[] = $contract_document_path;
            }
            $params_update[] = $lease_id_from_post; 
            $types_update .= "i";

            $sql = "UPDATE leases SET " . $set_clauses . " WHERE id = ?";
            $stmt = $mysqli->prepare($sql);
            if (!$stmt) throw new Exception("خطأ في تجهيز استعلام تعديل العقد: " . $mysqli->error);
            
            $stmt->bind_param($types_update, ...$params_update);
            if (!$stmt->execute()) throw new Exception("خطأ في تعديل بيانات العقد: " . $stmt->error);
            $stmt->close();

            if ($contract_document_path && $old_doc_path_db && !empty($old_doc_path_db)) {
                 $old_doc_abs_path = $doc_root . $app_base_path_for_uploads . '/' . $old_doc_path_db;
                if (file_exists($old_doc_abs_path)) @unlink($old_doc_abs_path);
            }
            
            // ... (منطق تحديث حالة الوحدة كما في النسخة السابقة)
            if ($lease_status === 'Active') {
                $mysqli->query("UPDATE units SET status = 'Occupied' WHERE id = " . (int)$unit_id);
            } elseif (in_array($lease_status, ['Expired', 'Terminated'])) {
                $active_leases_for_current_unit_q = $mysqli->query("SELECT COUNT(*) as count FROM leases WHERE unit_id = ".(int)$unit_id." AND status = 'Active' AND id != ".(int)$lease_id_from_post);
                $active_leases_current_count = $active_leases_for_current_unit_q->fetch_assoc()['count'] ?? 0;
                if($active_leases_current_count == 0) $mysqli->query("UPDATE units SET status = 'Vacant' WHERE id = " . (int)$unit_id);
            }
            if ($original_unit_id && $original_unit_id != $unit_id) {
                $active_leases_for_original_unit_q = $mysqli->query("SELECT COUNT(*) as count FROM leases WHERE unit_id = ".(int)$original_unit_id." AND status = 'Active'");
                $active_leases_original_count = $active_leases_for_original_unit_q->fetch_assoc()['count'] ?? 0;
                if($active_leases_original_count == 0) $mysqli->query("UPDATE units SET status = 'Vacant' WHERE id = " . (int)$original_unit_id);
            }

            $new_lease_data = compact('lease_contract_number', 'unit_id', 'tenant_id', 'lease_type_id', 'lease_start_date', 'lease_end_date', 'rent_amount', 'payment_frequency', 'payment_due_day', 'deposit_amount', 'grace_period_days', 'lease_status', 'next_billing_date', 'last_billed_on', 'lease_notes', 'contract_document_path');
            log_audit_action($mysqli, AUDIT_EDIT_LEASE, $lease_id_from_post, 'leases', ['old_data' => $old_lease_data, 'new_data' => $new_lease_data]);
            $response = ['success' => true, 'message' => "تم تحديث بيانات عقد الإيجار بنجاح!"];
        } else {
            throw new Exception("الإجراء المطلوب غير معروف أو معرف العقد مفقود.");
        }
        $mysqli->commit();

    } catch (Exception $e) {
        $mysqli->rollback();
        $response = ['success' => false, 'message' => $e->getMessage()];
        error_log("[Lease Action Error] Message: " . $e->getMessage() . " --- POST Data: " . http_build_query($_POST) . " --- Files Data: " . json_encode($_FILES));
        if ($action === 'add_lease' && $contract_document_path && file_exists($upload_dir_absolute . basename($contract_document_path))) {
            @unlink($upload_dir_absolute . basename($contract_document_path));
        }
    }
    echo json_encode($response);
    exit;

} elseif ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'delete_lease') {
    // ... (منطق الحذف من GET request كما في النسخة السابقة مع إضافة سجل التدقيق)
    if (!isset($_GET['csrf_token']) || !verify_csrf_token($_GET['csrf_token'])) {
        set_message("خطأ في التحقق (CSRF) عند الحذف.", "danger");
        redirect(base_url('leases/index.php'));
    }
    $lease_id_to_delete = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    if ($lease_id_to_delete > 0) {
        $mysqli->begin_transaction();
        try {
            $stmt_lease_info_del = $mysqli->prepare("SELECT lease_contract_number, unit_id, tenant_id, contract_document_path FROM leases WHERE id = ?");
            $lease_details_log = null;
            if($stmt_lease_info_del){
                $stmt_lease_info_del->bind_param("i", $lease_id_to_delete);
                $stmt_lease_info_del->execute();
                $res_lease_info_del = $stmt_lease_info_del->get_result();
                if($res_lease_info_del->num_rows > 0) $lease_details_log = $res_lease_info_del->fetch_assoc();
                $stmt_lease_info_del->close();
            }
            if(!$lease_details_log) throw new Exception("العقد المطلوب حذفه غير موجود.");

            $sql_delete = "DELETE FROM leases WHERE id = ?";
            $stmt_delete = $mysqli->prepare($sql_delete);
            if (!$stmt_delete) throw new Exception("خطأ في تجهيز استعلام حذف العقد: " . $mysqli->error);
            $stmt_delete->bind_param("i", $lease_id_to_delete);
            if (!$stmt_delete->execute()) throw new Exception("خطأ في حذف عقد الإيجار: " . $stmt_delete->error);
            $stmt_delete->close();

            if (!empty($lease_details_log['contract_document_path'])) {
                 $doc_to_delete_abs = $doc_root . $app_base_path_for_uploads . '/' . $lease_details_log['contract_document_path'];
                if (file_exists($doc_to_delete_abs)) @unlink($doc_to_delete_abs);
            }
            
            if ($lease_details_log['unit_id']) {
                // ... (منطق تحديث حالة الوحدة كما في النسخة السابقة)
                $active_leases_for_unit_q_del = $mysqli->query("SELECT COUNT(*) as count FROM leases WHERE unit_id = ".(int)$lease_details_log['unit_id']." AND status = 'Active'");
                $active_leases_count_del = $active_leases_for_unit_q_del->fetch_assoc()['count'] ?? 0;
                if($active_leases_count_del == 0) $mysqli->query("UPDATE units SET status = 'Vacant' WHERE id = " . (int)$lease_details_log['unit_id']);
            }
            
            log_audit_action($mysqli, AUDIT_DELETE_LEASE, $lease_id_to_delete, 'leases', ['contract_number' => $lease_details_log['lease_contract_number']]);
            $mysqli->commit();
            set_message("تم حذف عقد الإيجار بنجاح!", "success");

        } catch (Exception $e) {
            $mysqli->rollback();
            set_message("خطأ: " . $e->getMessage(), "danger");
            error_log("Lease Delete Action Error (GET): " . $e->getMessage());
        }
    } else {
        set_message("معرف العقد غير صحيح للحذف.", "danger");
    }
    redirect(base_url('leases/index.php'));
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST' && !(isset($_GET['action']) && $_GET['action'] === 'delete_lease')) {
    $response = ['success' => false, 'message' => 'طلب غير صالح أو طريقة وصول غير مدعومة.'];
    echo json_encode($response);
}
?>
